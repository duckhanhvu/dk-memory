

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Jan 23 13:34:21 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     	;# 
    11  0001                     	;# 
    12  0002                     	;# 
    13  0003                     	;# 
    14  0004                     	;# 
    15  0005                     	;# 
    16  0006                     	;# 
    17  0007                     	;# 
    18  0008                     	;# 
    19  0009                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000D                     	;# 
    24  000E                     	;# 
    25  000E                     	;# 
    26  000F                     	;# 
    27  0010                     	;# 
    28  0011                     	;# 
    29  0012                     	;# 
    30  0013                     	;# 
    31  0014                     	;# 
    32  0015                     	;# 
    33  0015                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001B                     	;# 
    40  001B                     	;# 
    41  001C                     	;# 
    42  001D                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0086                     	;# 
    48  0087                     	;# 
    49  0088                     	;# 
    50  0089                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  008E                     	;# 
    54  008F                     	;# 
    55  0090                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0093                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0097                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  0105                     	;# 
    74  0107                     	;# 
    75  0108                     	;# 
    76  0109                     	;# 
    77  010C                     	;# 
    78  010C                     	;# 
    79  010D                     	;# 
    80  010E                     	;# 
    81  010F                     	;# 
    82  0185                     	;# 
    83  0187                     	;# 
    84  0188                     	;# 
    85  0189                     	;# 
    86  018C                     	;# 
    87  018D                     	;# 
    88  001F                     _ADCON0	set	31
    89  001E                     _ADRESH	set	30
    90  0007                     _PORTC	set	7
    91  0008                     _PORTD	set	8
    92  00F9                     _GO_nDONE	set	249
    93  009F                     _ADCON1	set	159
    94  009E                     _ADRESL	set	158
    95  0087                     _TRISC	set	135
    96  0088                     _TRISD	set	136
    97                           
    98                           ; #config settings
    99  0000                     
   100                           	psect	cinit
   101  07FC                     start_initialization:	
   102  07FC                     __initialization:	
   103  07FC                     end_of_initialization:	
   104                           ;End of C runtime variable initialization code
   105                           
   106  07FC                     __end_of__initialization:	
   107  07FC  0183               	clrf	3
   108  07FD  120A  118A  2FA1   	ljmp	_main	;jump to C main() function
   109                           
   110                           	psect	cstackCOMMON
   111  0070                     __pcstackCOMMON:	
   112  0070                     ?_ADC_Init:	
   113  0070                     ??_ADC_Init:	
   114                           ; 0 bytes @ 0x0
   115                           
   116  0070                     ?_main:	
   117                           ; 0 bytes @ 0x0
   118                           
   119  0070                     ?_ADC_Read:	
   120                           ; 0 bytes @ 0x0
   121                           
   122                           
   123                           ; 2 bytes @ 0x0
   124  0070                     	ds	2
   125  0072                     ??_ADC_Read:	
   126                           
   127                           ; 0 bytes @ 0x2
   128  0072                     	ds	2
   129  0074                     ADC_Read@channel:	
   130                           
   131                           ; 1 bytes @ 0x4
   132  0074                     	ds	1
   133  0075                     ??_main:	
   134                           
   135                           ; 0 bytes @ 0x5
   136  0075                     	ds	3
   137  0078                     main@a:	
   138                           
   139                           ; 2 bytes @ 0x8
   140  0078                     	ds	2
   141                           
   142                           	psect	maintext
   143  07A1                     __pmaintext:	
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 45 in file "ADC.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;  a               2    8[COMMON] unsigned int 
   154 ;; Return value:  Size  Location     Type
   155 ;;		None               void
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, pclath, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : B00/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   163 ;;      Params:         0       0       0       0       0
   164 ;;      Locals:         2       0       0       0       0
   165 ;;      Temps:          3       0       0       0       0
   166 ;;      Totals:         5       0       0       0       0
   167 ;;Total ram usage:        5 bytes
   168 ;; Hardware stack levels required when called:    1
   169 ;; This function calls:
   170 ;;		_ADC_Init
   171 ;;		_ADC_Read
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           
   178                           ;psect for function _main
   179  07A1                     _main:	
   180                           
   181                           ;ADC.c: 47: unsigned int a;
   182                           ;ADC.c: 48: TRISC = 0x00;
   183                           
   184                           ;incstack = 0
   185                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   186  07A1  1683               	bsf	3,5	;RP0=1, select bank1
   187  07A2  1303               	bcf	3,6	;RP1=0, select bank1
   188  07A3  0187               	clrf	7	;volatile
   189                           
   190                           ;ADC.c: 49: TRISD = 0x00;
   191  07A4  0188               	clrf	8	;volatile
   192                           
   193                           ;ADC.c: 50: PORTD = 0;
   194  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   195  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   196  07A7  0188               	clrf	8	;volatile
   197                           
   198                           ;ADC.c: 51: PORTC = 0;
   199  07A8  0187               	clrf	7	;volatile
   200                           
   201                           ;ADC.c: 52: ADC_Init();
   202  07A9  120A  118A  2798  120A  118A  	fcall	_ADC_Init
   203  07AE                     l543:	
   204                           ;ADC.c: 54: do
   205                           
   206                           
   207                           ;ADC.c: 55: {
   208                           ;ADC.c: 56: a = ADC_Read(0);
   209  07AE  3000               	movlw	0
   210  07AF  120A  118A  27CC  120A  118A  	fcall	_ADC_Read
   211  07B4  0871               	movf	?_ADC_Read+1,w
   212  07B5  00F9               	movwf	main@a+1
   213  07B6  0870               	movf	?_ADC_Read,w
   214  07B7  00F8               	movwf	main@a
   215                           
   216                           ;ADC.c: 57: PORTC = a;
   217  07B8  0878               	movf	main@a,w
   218  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   219  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   220  07BB  0087               	movwf	7	;volatile
   221                           
   222                           ;ADC.c: 58: PORTD = a>>8;
   223  07BC  0879               	movf	main@a+1,w
   224  07BD  0088               	movwf	8	;volatile
   225                           
   226                           ;ADC.c: 59: _delay((unsigned long)((100)*(8000000/4000.0)));
   227  07BE  3002               	movlw	2
   228  07BF  00F7               	movwf	??_main+2
   229  07C0  3004               	movlw	4
   230  07C1  00F6               	movwf	??_main+1
   231  07C2  30BA               	movlw	186
   232  07C3  00F5               	movwf	??_main
   233  07C4                     u77:	
   234  07C4  0BF5               	decfsz	??_main,f
   235  07C5  2FC4               	goto	u77
   236  07C6  0BF6               	decfsz	??_main+1,f
   237  07C7  2FC4               	goto	u77
   238  07C8  0BF7               	decfsz	??_main+2,f
   239  07C9  2FC4               	goto	u77
   240  07CA  0000               	nop
   241                           
   242                           ;ADC.c: 60: }while(1);
   243  07CB  2FAE               	goto	l543
   244  07CC                     __end_of_main:	
   245                           
   246                           	psect	text1
   247  07CC                     __ptext1:	
   248 ;; *************** function _ADC_Read *****************
   249 ;; Defined at:
   250 ;;		line 32 in file "ADC.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;  channel         1    wreg     unsigned char 
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  channel         1    4[COMMON] unsigned char 
   255 ;; Return value:  Size  Location     Type
   256 ;;                  2    0[COMMON] unsigned int 
   257 ;; Registers used:
   258 ;;		wreg, status,2, status,0
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   264 ;;      Params:         2       0       0       0       0
   265 ;;      Locals:         1       0       0       0       0
   266 ;;      Temps:          2       0       0       0       0
   267 ;;      Totals:         5       0       0       0       0
   268 ;;Total ram usage:        5 bytes
   269 ;; Hardware stack levels used:    1
   270 ;; This function calls:
   271 ;;		Nothing
   272 ;; This function is called by:
   273 ;;		_main
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           
   278                           ;psect for function _ADC_Read
   279  07CC                     _ADC_Read:	
   280                           
   281                           ;incstack = 0
   282                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   283                           ;ADC_Read@channel stored from wreg
   284  07CC  00F4               	movwf	ADC_Read@channel
   285                           
   286                           ;ADC.c: 34: if(channel > 7)
   287  07CD  3008               	movlw	8
   288  07CE  0274               	subwf	ADC_Read@channel,w
   289  07CF  1C03               	skipc
   290  07D0  2FD4               	goto	l529
   291                           
   292                           ;ADC.c: 35: return 0;
   293  07D1  01F0               	clrf	?_ADC_Read
   294  07D2  01F1               	clrf	?_ADC_Read+1
   295  07D3  0008               	return
   296  07D4                     l529:	
   297                           
   298                           ;ADC.c: 37: ADCON0 &= 0xC5;
   299  07D4  30C5               	movlw	197
   300  07D5  00F2               	movwf	??_ADC_Read
   301  07D6  0872               	movf	??_ADC_Read,w
   302  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   303  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   304  07D9  059F               	andwf	31,f	;volatile
   305                           
   306                           ;ADC.c: 38: ADCON0 |= channel<<3;
   307  07DA  0874               	movf	ADC_Read@channel,w
   308  07DB  00F2               	movwf	??_ADC_Read
   309  07DC  3002               	movlw	2
   310  07DD                     u55:	
   311  07DD  1003               	clrc
   312  07DE  0DF2               	rlf	??_ADC_Read,f
   313  07DF  3EFF               	addlw	-1
   314  07E0  1D03               	skipz
   315  07E1  2FDD               	goto	u55
   316  07E2  1003               	clrc
   317  07E3  0D72               	rlf	??_ADC_Read,w
   318  07E4  00F3               	movwf	??_ADC_Read+1
   319  07E5  0873               	movf	??_ADC_Read+1,w
   320  07E6  049F               	iorwf	31,f	;volatile
   321                           
   322                           ;ADC.c: 39: _delay((unsigned long)((2)*(8000000/4000.0)));
   323  07E7  3006               	movlw	6
   324  07E8  00F3               	movwf	??_ADC_Read+1
   325  07E9  3030               	movlw	48
   326  07EA  00F2               	movwf	??_ADC_Read
   327  07EB                     u87:	
   328  07EB  0BF2               	decfsz	??_ADC_Read,f
   329  07EC  2FEB               	goto	u87
   330  07ED  0BF3               	decfsz	??_ADC_Read+1,f
   331  07EE  2FEB               	goto	u87
   332  07EF  0000               	nop
   333                           
   334                           ;ADC.c: 40: GO_nDONE = 1;
   335  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   336  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   337  07F2  149F               	bsf	31,1	;volatile
   338  07F3                     l28:	
   339                           ;ADC.c: 41: while(GO_nDONE);
   340                           
   341  07F3  189F               	btfsc	31,1	;volatile
   342  07F4  2FF3               	goto	l28
   343                           
   344                           ;ADC.c: 42: return ((ADRESH<<8)+ADRESL);
   345  07F5  081E               	movf	30,w	;volatile
   346  07F6  00F1               	movwf	?_ADC_Read+1
   347  07F7  1683               	bsf	3,5	;RP0=1, select bank1
   348  07F8  1303               	bcf	3,6	;RP1=0, select bank1
   349  07F9  081E               	movf	30,w	;volatile
   350  07FA  00F0               	movwf	?_ADC_Read
   351  07FB  0008               	return
   352  07FC                     __end_of_ADC_Read:	
   353                           
   354                           	psect	text2
   355  0798                     __ptext2:	
   356 ;; *************** function _ADC_Init *****************
   357 ;; Defined at:
   358 ;;		line 26 in file "ADC.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;		None               void
   365 ;; Registers used:
   366 ;;		wreg
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used:    1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           
   386                           ;psect for function _ADC_Init
   387  0798                     _ADC_Init:	
   388                           
   389                           ;ADC.c: 28: ADCON0 = 0x41;
   390                           
   391                           ;incstack = 0
   392                           ; Regs used in _ADC_Init: [wreg]
   393  0798  3041               	movlw	65
   394  0799  1283               	bcf	3,5	;RP0=0, select bank0
   395  079A  1303               	bcf	3,6	;RP1=0, select bank0
   396  079B  009F               	movwf	31	;volatile
   397                           
   398                           ;ADC.c: 29: ADCON1 = 0xC0;
   399  079C  30C0               	movlw	192
   400  079D  1683               	bsf	3,5	;RP0=1, select bank1
   401  079E  1303               	bcf	3,6	;RP1=0, select bank1
   402  079F  009F               	movwf	31	;volatile
   403  07A0  0008               	return
   404  07A1                     __end_of_ADC_Init:	
   405  007E                     btemp	set	126	;btemp
   406  007E                     wtemp	set	126
   407  007E                     wtemp0	set	126
   408  0080                     wtemp1	set	128
   409  0082                     wtemp2	set	130
   410  0084                     wtemp3	set	132
   411  0086                     wtemp4	set	134
   412  0088                     wtemp5	set	136
   413  007F                     wtemp6	set	127
   414  007E                     ttemp	set	126
   415  007E                     ttemp0	set	126
   416  0081                     ttemp1	set	129
   417  0084                     ttemp2	set	132
   418  0087                     ttemp3	set	135
   419  007F                     ttemp4	set	127
   420  007E                     ltemp	set	126
   421  007E                     ltemp0	set	126
   422  0082                     ltemp1	set	130
   423  0086                     ltemp2	set	134
   424  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      89
                                              5 COMMON     5     5      0
                           _ADC_Init
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Jan 23 13:34:21 2016

            __CFG_CP$OFF 0000                       l28 07F3                       u55 07DD  
                     u77 07C4                       u87 07EB                      l543 07AE  
                    l529 07D4             __CFG_CPD$OFF 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _main 07A1  
                   btemp 007E         __end_of_ADC_Init 07A1         __end_of_ADC_Read 07FC  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088           __CFG_FCMEN$OFF 0000  
                  main@a 0078           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 07FC  
           __end_of_main 07CC                   ??_main 0075                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
         __CFG_PWRTE$OFF 0000          ADC_Read@channel 0074                ?_ADC_Init 0070  
              ?_ADC_Read 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             ??_ADC_Init 0070               ??_ADC_Read 0072               __pmaintext 07A1  
                __ptext1 07CC                  __ptext2 0798     end_of_initialization 07FC  
      __size_of_ADC_Init 0009        __size_of_ADC_Read 0030      start_initialization 07FC  
              ___latbits 0002                 _ADC_Init 0798                 _ADC_Read 07CC  
               _GO_nDONE 00F9        __CFG_BOR4V$BOR40V 0000            __size_of_main 002B  
