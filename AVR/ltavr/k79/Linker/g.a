;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/28/2015
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 2.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Timer1 output compare A interrupt service routine
;volatile unsigned int val=0;
;volatile unsigned int giay=0;
;volatile unsigned int phut=0;
;volatile unsigned int gio=0;
;void hien_giay(unsigned int n){
; 0000 001F void hien_giay(unsigned int n){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0020   int a,b;
; 0000 0021          a=n/10;
;PCODE: $0000000F VOL: 0
;	n -> Y+4
;	a -> R16,R17
;	b -> R18,R19
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0022          b=n%10;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0023 
; 0000 0024          PORTA.4=1;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0025          PORTD=a;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0026          delay_ms(1);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0027          PORTA.4=0;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0028 
; 0000 0029          PORTA.5=1;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 002A          PORTD=b;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002B          delay_ms(1);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 002C          PORTA.5=0;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002D 
; 0000 002E 
; 0000 002F }
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;void hien_phut(unsigned int n){
; 0000 0030 void hien_phut(unsigned int n){
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0031   int a,b;
; 0000 0032          a=n/10;
;PCODE: $00000030 VOL: 0
;	n -> Y+4
;	a -> R16,R17
;	b -> R18,R19
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0033          b=n%10;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0034 
; 0000 0035          PORTA.2=1;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0036          PORTC=(a<<4);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0037          delay_ms(1);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0038          PORTA.2=0;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0039 
; 0000 003A          PORTA.3=1;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003B          PORTC=(b<<4);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 003C          delay_ms(1);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 003D          PORTA.3=0;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 003E 
; 0000 003F 
; 0000 0040 }
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;void hien_gio(unsigned int n){
; 0000 0041 void hien_gio(unsigned int n){
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0042   int a,b;
; 0000 0043          a=n/10;
;PCODE: $00000053 VOL: 0
;	n -> Y+4
;	a -> R16,R17
;	b -> R18,R19
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0044          b=n%10;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0045 
; 0000 0046          PORTA.0=1;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0047          PORTC=a;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0048          delay_ms(1);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0049          PORTA.0=0;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 004A 
; 0000 004B          PORTA.1=1;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 004C          PORTC=b;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 004D          delay_ms(1);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 004E          PORTA.1=0;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 004F 
; 0000 0050 
; 0000 0051 }
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0053 {
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0054 
; 0000 0055 
; 0000 0056   val++;
;PCODE: $00000074 VOL: 1
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0057   if(val==50){
;PCODE: $00000078 VOL: 1
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0058      val=0;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 1
; 0000 0059      giay++;
;PCODE: $0000007D VOL: 1
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 005A 
; 0000 005B      if(giay==60){
;PCODE: $00000081 VOL: 1
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 005C         giay=0;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 1
; 0000 005D         phut++;
;PCODE: $00000086 VOL: 1
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 005E         if(phut==60)
;PCODE: $0000008A VOL: 1
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 005F            gio++;
;PCODE: $0000008D VOL: 1
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0060 
; 0000 0061            if(gio==24) gio=0;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 1
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 1
; 0000 0062     }
;PCODE: $00000097 VOL: 0
; 0000 0063   }
;PCODE: $00000098 VOL: 0
; 0000 0064 
; 0000 0065    hien_giay(giay);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 1
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0066    hien_phut(phut);
;PCODE: $0000009D VOL: 1
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0067    hien_gio(gio);
;PCODE: $000000A0 VOL: 1
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0068 
; 0000 0069 
; 0000 006A }
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;
;
;
;
;void main(void)
; 0000 0070 {
;PCODE: $000000A6 VOL: 0
; 0000 0071 // Declare your local variables here
; 0000 0072 
; 0000 0073 // Input/Output Ports initialization
; 0000 0074 // Port A initialization
; 0000 0075 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0076 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0077 PORTA=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0078 DDRA=0xFF;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0079 
; 0000 007A // Port B initialization
; 0000 007B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 007C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 007D PORTB=0x00;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 007E DDRB=0x00;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 007F 
; 0000 0080 // Port C initialization
; 0000 0081 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0082 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0083 PORTC=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0084 DDRC=0xFF;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0085 
; 0000 0086 // Port D initialization
; 0000 0087 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0088 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0089 PORTD=0x00;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 008A DDRD=0xFF;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 008B 
; 0000 008C // Timer/Counter 0 initialization
; 0000 008D // Clock source: System Clock
; 0000 008E // Clock value: Timer 0 Stopped
; 0000 008F // Mode: Normal top=0xFF
; 0000 0090 // OC0 output: Disconnected
; 0000 0091 TCCR0=0x00;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0092 TCNT0=0x00;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0093 OCR0=0x00;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0094 
; 0000 0095 // Timer/Counter 1 initialization
; 0000 0096 // Clock source: System Clock
; 0000 0097 // Clock value: 250.000 kHz
; 0000 0098 // Mode: CTC top=OCR1A
; 0000 0099 // OC1A output: Discon.
; 0000 009A // OC1B output: Discon.
; 0000 009B // Noise Canceler: Off
; 0000 009C // Input Capture on Falling Edge
; 0000 009D // Timer1 Overflow Interrupt: Off
; 0000 009E // Input Capture Interrupt: Off
; 0000 009F // Compare A Match Interrupt: On
; 0000 00A0 // Compare B Match Interrupt: Off
; 0000 00A1 TCCR1A=0x00;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00A2 TCCR1B=0x0A;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00A3 TCNT1H=0x00;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00A4 TCNT1L=0x00;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00A5 ICR1H=0x00;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00A6 ICR1L=0x00;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00A7 OCR1A=4999;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00A8 //OCR1AL=0x00;
; 0000 00A9 OCR1BH=0x00;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00AA OCR1BL=0x00;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00AB 
; 0000 00AC // Timer/Counter 2 initialization
; 0000 00AD // Clock source: System Clock
; 0000 00AE // Clock value: Timer2 Stopped
; 0000 00AF // Mode: Normal top=0xFF
; 0000 00B0 // OC2 output: Disconnected
; 0000 00B1 ASSR=0x00;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00B2 TCCR2=0x00;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00B3 TCNT2=0x00;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00B4 OCR2=0x00;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00B5 
; 0000 00B6 // External Interrupt(s) initialization
; 0000 00B7 // INT0: Off
; 0000 00B8 // INT1: Off
; 0000 00B9 // INT2: Off
; 0000 00BA MCUCR=0x00;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 00BB MCUCSR=0x00;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00BC 
; 0000 00BD // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00BE TIMSK=0x10;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00BF 
; 0000 00C0 // USART initialization
; 0000 00C1 // USART disabled
; 0000 00C2 UCSRB=0x00;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00C3 
; 0000 00C4 // Analog Comparator initialization
; 0000 00C5 // Analog Comparator: Off
; 0000 00C6 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00C7 ACSR=0x80;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00C8 SFIOR=0x00;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00C9 
; 0000 00CA // ADC initialization
; 0000 00CB // ADC disabled
; 0000 00CC ADCSRA=0x00;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00CD 
; 0000 00CE // SPI initialization
; 0000 00CF // SPI disabled
; 0000 00D0 SPCR=0x00;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00D1 
; 0000 00D2 // TWI initialization
; 0000 00D3 // TWI disabled
; 0000 00D4 TWCR=0x00;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00D5 
; 0000 00D6 // Global enable interrupts
; 0000 00D7 #asm("sei")
;PCODE: $000000E9 VOL: 0
	sei
;PCODE: $000000EA VOL: 0
; 0000 00D8 
; 0000 00D9 while (1)
;PCODE: $000000EB VOL: 0
; 0000 00DA       {
; 0000 00DB       // Place your code here
; 0000 00DC 
; 0000 00DD       }
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00DE }
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
