;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 9/19/2015
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Declare your global variables here
;//static unsigned char led_7[10]={0b00111111,0b00000110,0b01011011,0b01001111,0b01100110,0b01101101,0b01111101,0b00000111,0b01111111,0b01101111};
;
;int dem_chuso(int number){
; 0000 001D int dem_chuso(int number){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001E     int dem=0;
; 0000 001F     while(number){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	number -> Y+2
;	dem -> R16,R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0020         number=number/10;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0021         dem=dem+1;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0022     }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0023     return dem;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0024 }
;PCODE: $00000026 VOL: 0
;
;//void show_led7(unsigned int so){
;//int i;
;//int a;
;
;//int x=0b00001110;
;//int b;
;//b=so;
;//for(i=0;i<4;i++){
;//       PORTC=0b00001111;
;//       PORTC=x;
;//       a=b%10;
;//       PORTA=led_7[a];
;//       delay_ms(1);
;
;//       b=b/10;
;//       x=(x<<1)+0b00000001;
;
;//}
;//}
;void main(void){
; 0000 0039 void main(void){
;PCODE: $00000027 VOL: 0
; 0000 003A // Declare your local variables here
; 0000 003B 
; 0000 003C // Input/Output Ports initialization
; 0000 003D // Port A initialization
; 0000 003E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0040 PORTA=0b00000000;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0041 DDRA=0b11111111;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0042 
; 0000 0043 // Port B initialization
; 0000 0044 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0045 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0046 PORTB=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0047 DDRB=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0048 
; 0000 0049 // Port C initialization
; 0000 004A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004C PORTC=0b00001111;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 004D DDRC=0b00001111;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 004E 
; 0000 004F // Port D initialization
; 0000 0050 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0051 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0052 PORTD=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0053 DDRD=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0054 
; 0000 0055 // Timer/Counter 0 initialization
; 0000 0056 // Clock source: System Clock
; 0000 0057 // Clock value: Timer 0 Stopped
; 0000 0058 // Mode: Normal top=0xFF
; 0000 0059 // OC0 output: Disconnected
; 0000 005A TCCR0=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005B TCNT0=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 005C OCR0=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 005D 
; 0000 005E // Timer/Counter 1 initialization
; 0000 005F // Clock source: System Clock
; 0000 0060 // Clock value: Timer1 Stopped
; 0000 0061 // Mode: Normal top=0xFFFF
; 0000 0062 // OC1A output: Discon.
; 0000 0063 // OC1B output: Discon.
; 0000 0064 // Noise Canceler: Off
; 0000 0065 // Input Capture on Falling Edge
; 0000 0066 // Timer1 Overflow Interrupt: Off
; 0000 0067 // Input Capture Interrupt: Off
; 0000 0068 // Compare A Match Interrupt: Off
; 0000 0069 // Compare B Match Interrupt: Off
; 0000 006A TCCR1A=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006B TCCR1B=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006C TCNT1H=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006D TCNT1L=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 006E ICR1H=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 006F ICR1L=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0070 OCR1AH=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0071 OCR1AL=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0072 OCR1BH=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0073 OCR1BL=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0074 
; 0000 0075 // Timer/Counter 2 initialization
; 0000 0076 // Clock source: System Clock
; 0000 0077 // Clock value: Timer2 Stopped
; 0000 0078 // Mode: Normal top=0xFF
; 0000 0079 // OC2 output: Disconnected
; 0000 007A ASSR=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 007B TCCR2=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 007C TCNT2=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 007D OCR2=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 007E 
; 0000 007F // External Interrupt(s) initialization
; 0000 0080 // INT0: Off
; 0000 0081 // INT1: Off
; 0000 0082 // INT2: Off
; 0000 0083 MCUCR=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0084 MCUCSR=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0085 
; 0000 0086 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0087 TIMSK=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0088 
; 0000 0089 // USART initialization
; 0000 008A // USART disabled
; 0000 008B UCSRB=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 008C 
; 0000 008D // Analog Comparator initialization
; 0000 008E // Analog Comparator: Off
; 0000 008F // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0090 ACSR=0x80;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0091 SFIOR=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0092 
; 0000 0093 // ADC initialization
; 0000 0094 // ADC disabled
; 0000 0095 ADCSRA=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0096 
; 0000 0097 // SPI initialization
; 0000 0098 // SPI disabled
; 0000 0099 SPCR=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 009A 
; 0000 009B // TWI initialization
; 0000 009C // TWI disabled
; 0000 009D TWCR=0x00;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 009E 
; 0000 009F while (1)
;PCODE: $0000006C VOL: 0
; 0000 00A0       {
; 0000 00A1       unsigned char led_7[10]={0b00111111,0b00000110,0b01011011,0b01001111,0b01100110,0b01101101,0b01111101,0b00000111,0b01111111,0b01101111};
; 0000 00A2       // Place your code here
; 0000 00A3        //show_led7(1234);
; 0000 00A4 
; 0000 00A5 int i;
; 0000 00A6 int c;
; 0000 00A7 int x=0b00001110;
; 0000 00A8 c=dem_chuso(1234);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;	led_7 -> Y+6
;	i -> Y+4
;	c -> Y+2
;	x -> Y+0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 00A9 
; 0000 00AA        PORTC=x;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00AB 
; 0000 00AC        PORTA=led_7[c];
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00AD        delay_ms(20);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 00AE 
; 0000 00AF 
; 0000 00B0 //       x=(x<<1)+0b00000001;
; 0000 00B1 
; 0000 00B2 
; 0000 00B3       }
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00B4 }
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
