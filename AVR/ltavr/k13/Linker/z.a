;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 9/2/2015
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;#define LE1 PORTA.3
;#define LE2 PORTA.4
;
;#define PORT_LED7 PORTB
;
;#define KEY4x4_COL1 PIND.4
;#define KEY4x4_COL2 PIND.5
;#define KEY4x4_COL3 PIND.6
;#define KEY4x4_COL4 PIND.7
;
;#define KEY4x4_ROW1 PORTD.3
;#define KEY4x4_ROW2 PORTD.2
;#define KEY4x4_ROW3 PORTD.1
;#define KEY4x4_ROW4 PORTD.0
;
;
;static unsigned char LED7_Buffer[8];
;static unsigned char chu_so[10]={0b01111110,0b00000110,0b01101101,0b01001111,0b00010111,0b01011011,0b01111011,0b00001110,0b01111111,0b01011111}  ;

	.DSEG
;void LED7_cacucode(unsigned long number){
; 0000 002D void LED7_cacucode(unsigned long number){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002E unsigned char i,j,flag=0;
; 0000 002F unsigned long int temp;
; 0000 0030 for(i=7;i>0;i--){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	number -> Y+8
;	i -> R17
;	j -> R16
;	flag -> R19
;	temp -> Y+4
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0031 temp=1;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0032 for(j=i;j>0;j--){
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0033 temp *=10;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0034 }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0035 if(flag) LED7_Buffer[i]=chu_so[number/temp];
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0036 else
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0037 {
; 0000 0038 if(number/temp) {
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0039  LED7_Buffer[i]=chu_so[number/temp];
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003A  flag=1;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 003B }
; 0000 003C else
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 003D LED7_Buffer[i]=0xFF;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 003E }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003F number=number%temp;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0040 }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0041 LED7_Buffer[0]=chu_so[number/temp];
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0042 }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;
;void LED7_OnLED(unsigned char point)
; 0000 0045 {
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0046 PORT_LED7=0xFF;
;	point -> Y+0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0047 LE1=1;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0048 LE1=0;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0049 PORT_LED7=0x80>>point;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 004A LE2=1;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 004B LE2=0;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 004C PORT_LED7=LED7_Buffer[point];
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 004D LE1=1;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 004E LE1=0;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 004F }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;void LED7_Display(unsigned long int value){
; 0000 0050 void LED7_Display(unsigned long int value){
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0051 unsigned char i;
; 0000 0052 LED7_cacucode(value);
;PCODE: $0000008B VOL: 0
;	value -> Y+1
;	i -> R17
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0053 for(i=0;i<8;i++){
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0054 LED7_OnLED(i);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0055 delay_ms(10);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0056 }
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0057 }
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;static unsigned char KEY_4x4[4][4]={1,2,3,4,
;                                    5,6,7,8,
;                                    9,10,11,12,
;                                    13,14,15,16,};

	.DSEG
;unsigned char KEY4x4_Ispush(void){
; 0000 005C unsigned char KEY4x4_Ispush(void){

	.CSEG
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 005D if((KEY4x4_COL1==0)|(KEY4x4_COL2==0)|(KEY4x4_COL3==0)|(KEY4x4_COL4==0))
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 005E return 1;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 005F else return 0;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0060 }
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;void KEY4x4_checkROW(unsigned char i){
; 0000 0061 void KEY4x4_checkROW(unsigned char i){
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0062 KEY4x4_ROW1 =KEY4x4_ROW2 =KEY4x4_ROW3 =KEY4x4_ROW4 =1;
;	i -> Y+0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0063 if(i==0){
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0064     KEY4x4_ROW1=0;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0065 }
; 0000 0066 else if(i==1){
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0067     KEY4x4_ROW2=0;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0068 }
; 0000 0069 else if(i==2){
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 006A     KEY4x4_ROW3=0;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 006B }
; 0000 006C else{
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 006D     KEY4x4_ROW4=0;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 006E }
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 006F }
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;unsigned char KEY4x4_Getkey(void){
; 0000 0070 unsigned char KEY4x4_Getkey(void){
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0071 unsigned char i;
; 0000 0072 KEY4x4_ROW1=0;
;PCODE: $000000F1 VOL: 0
;	i -> R17
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0073 KEY4x4_ROW2=0;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0074 KEY4x4_ROW3=0;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0075 KEY4x4_ROW4=0;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0076 if(KEY4x4_Ispush()){
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0077 delay_ms(5);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0078 if(KEY4x4_Ispush()){
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0079 for(i=0;i<4;i++){
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 007A KEY4x4_checkROW(i);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 007B if(!KEY4x4_COL1)  return KEY_4x4[i][0];
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 007C if(!KEY4x4_COL2)  return KEY_4x4[i][1];
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 007D if(!KEY4x4_COL3)  return KEY_4x4[i][2];
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 007E if(!KEY4x4_COL4)  return KEY_4x4[i][3];
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 007F }
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 0080 }
; 0000 0081 }
;PCODE: $00000143 VOL: 0
; 0000 0082 return 0;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0083 }
;PCODE: $00000148 VOL: 0
;
;
;void main (void){
; 0000 0086 void main (void){
;PCODE: $00000149 VOL: 0
; 0000 0087 unsigned char key;
; 0000 0088 unsigned long int value;
; 0000 0089 PORTA=0x18;
;PCODE: $0000014A VOL: 0
;	key -> R17
;	value -> Y+0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 008A DDRA=0x18;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 008B 
; 0000 008C PORTB=0xFF;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 008D DDRB=0xFF;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 008E 
; 0000 008F PORTC=0x00;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0090 DDRC=0x00;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0091 
; 0000 0092 PORTD=0xFF;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 0093 DDRD=0x0F;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 0094 
; 0000 0095 TCCR0=0x00;
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0096 TCNT0=0x00;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 0097 OCR0=0x00;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 0098 
; 0000 0099 
; 0000 009A TCCR1A=0x00;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 009B TCCR1B=0x00;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 009C TCNT1H=0x00;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 009D TCNT1L=0x00;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 009E ICR1H=0x00;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 009F ICR1L=0x00;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00A0 OCR1AH=0x00;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00A1 OCR1AL=0x00;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00A2 OCR1BH=0x00;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00A3 OCR1BL=0x00;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00A4 
; 0000 00A5 ASSR=0x00;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 00A6 TCCR2=0x00;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00A7 TCNT2=0x00;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00A8 OCR2=0x00;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00A9 
; 0000 00AA MCUCR=0x00;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00AB MCUCSR=0x00;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00AC 
; 0000 00AD TIMSK=0x00;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00AE 
; 0000 00AF UCSRB=0x00;
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00B0 
; 0000 00B1 ACSR=0x80;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 00B2 SFIOR=0x00;
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00B3 
; 0000 00B4 ADCSRA=0x00;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00B5 
; 0000 00B6 SPCR=0x00;
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00B7 
; 0000 00B8 TWCR=0x00;
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00B9 
; 0000 00BA 
; 0000 00BB while (1)
;PCODE: $0000018F VOL: 0
; 0000 00BC       {
; 0000 00BD       // Place your code here
; 0000 00BE        key=KEY4x4_Getkey();
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00BF        if(key){
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00C0        value=key;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00C1        }
; 0000 00C2       LED7_Display(value);
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00C3       }
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00C4 }
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;
