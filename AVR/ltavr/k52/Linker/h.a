;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/5/2015
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <math.h>
;
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;
;// Declare your global variables here
;//void lCD_hienso(unsigned int n){
;
;//unsigned int m=0,a,b,i;
;//lcd_gotoxy(0,0);
;//for(i=0;i<5;i++){
;//  m=m*10+n%10;
;//  n=n/10;
;//}
;//b=m;
;//for(i=0;i<5;i++){
;//  a=b%10;
;//  b=b/10;
;
;//  lcd_putchar(a+48);
;//}
;//}
;void display_int(int number)
; 0000 0030 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0031 int n1,n2,n3,n4,n22,n11;
; 0000 0032 n1=number/1000; //chia lay phan nguyen
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	number -> Y+12
;	n1 -> R16,R17
;	n2 -> R18,R19
;	n3 -> R20,R21
;	n4 -> Y+10
;	n22 -> Y+8
;	n11 -> Y+6
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0033 n11=number%1000; //chhia lay phan du
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0034 
; 0000 0035 n2=n11/100;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0036 n22=n11%100;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0037 
; 0000 0038 n3=n22/10;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0039 
; 0000 003A n4=n22%10;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 003B 
; 0000 003C if((n1==0)&&(n2==0)&&(n3==0))
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 003D lcd_putchar(n4+48);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 003E else if((n1==0)&&(n2==0))
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003F {
; 0000 0040 lcd_putchar(n3+48); //n3+48 la chuyen tu so n2 thanh ky tu so n2
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0041 lcd_putchar(n4+48);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0042 }
; 0000 0043 else if(n1==0)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0044 {
; 0000 0045 lcd_putchar(n2+48);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0046 lcd_putchar(n3+48);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0047 lcd_putchar(n4+48);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0048 }
; 0000 0049 else
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 004A {
; 0000 004B lcd_putchar(n1+48);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 004C lcd_putchar(n2+48);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 004D lcd_putchar(n3+48);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 004E lcd_putchar(n4+48);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 004F }
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0050 
; 0000 0051 }
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;void main(void){
; 0000 0052 void main(void){
;PCODE: $00000072 VOL: 0
; 0000 0053 // Declare your local variables here
; 0000 0054 
; 0000 0055 // Input/Output Ports initialization
; 0000 0056 // Port A initialization
; 0000 0057 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0058 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0059 PORTA=0x00;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 005A DDRA=0x00;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 005B 
; 0000 005C // Port B initialization
; 0000 005D // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005E // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 005F PORTB=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0060 DDRB=0x00;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0061 
; 0000 0062 // Port C initialization
; 0000 0063 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0064 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0065 PORTC=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0066 DDRC=0x00;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0067 
; 0000 0068 // Port D initialization
; 0000 0069 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 006A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 006B PORTD=0x00;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 006C DDRD=0x00;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 006D 
; 0000 006E // Timer/Counter 0 initialization
; 0000 006F // Clock source: System Clock
; 0000 0070 // Clock value: Timer 0 Stopped
; 0000 0071 // Mode: Normal top=0xFF
; 0000 0072 // OC0 output: Disconnected
; 0000 0073 TCCR0=0x00;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0074 TCNT0=0x00;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0075 OCR0=0x00;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0076 
; 0000 0077 // Timer/Counter 1 initialization
; 0000 0078 // Clock source: System Clock
; 0000 0079 // Clock value: Timer1 Stopped
; 0000 007A // Mode: Normal top=0xFFFF
; 0000 007B // OC1A output: Discon.
; 0000 007C // OC1B output: Discon.
; 0000 007D // Noise Canceler: Off
; 0000 007E // Input Capture on Falling Edge
; 0000 007F // Timer1 Overflow Interrupt: Off
; 0000 0080 // Input Capture Interrupt: Off
; 0000 0081 // Compare A Match Interrupt: Off
; 0000 0082 // Compare B Match Interrupt: Off
; 0000 0083 TCCR1A=0x00;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0084 TCCR1B=0x00;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0085 TCNT1H=0x00;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0086 TCNT1L=0x00;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0087 ICR1H=0x00;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0088 ICR1L=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0089 OCR1AH=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 008A OCR1AL=0x00;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 008B OCR1BH=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 008C OCR1BL=0x00;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 008D 
; 0000 008E // Timer/Counter 2 initialization
; 0000 008F // Clock source: System Clock
; 0000 0090 // Clock value: Timer2 Stopped
; 0000 0091 // Mode: Normal top=0xFF
; 0000 0092 // OC2 output: Disconnected
; 0000 0093 ASSR=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0094 TCCR2=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0095 TCNT2=0x00;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0096 OCR2=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0097 
; 0000 0098 // External Interrupt(s) initialization
; 0000 0099 // INT0: Off
; 0000 009A // INT1: Off
; 0000 009B // INT2: Off
; 0000 009C MCUCR=0x00;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 009D MCUCSR=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 009E 
; 0000 009F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00A0 TIMSK=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00A1 
; 0000 00A2 // USART initialization
; 0000 00A3 // USART disabled
; 0000 00A4 UCSRB=0x00;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00A5 
; 0000 00A6 // Analog Comparator initialization
; 0000 00A7 // Analog Comparator: Off
; 0000 00A8 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00A9 ACSR=0x80;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00AA SFIOR=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00AB 
; 0000 00AC // ADC initialization
; 0000 00AD // ADC disabled
; 0000 00AE ADCSRA=0x00;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00AF 
; 0000 00B0 // SPI initialization
; 0000 00B1 // SPI disabled
; 0000 00B2 SPCR=0x00;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00B3 
; 0000 00B4 // TWI initialization
; 0000 00B5 // TWI disabled
; 0000 00B6 TWCR=0x00;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00B7 
; 0000 00B8 // Alphanumeric LCD initialization
; 0000 00B9 // Connections specified in the
; 0000 00BA // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00BB // RS - PORTD Bit 0
; 0000 00BC // RD - PORTD Bit 1
; 0000 00BD // EN - PORTD Bit 2
; 0000 00BE // D4 - PORTD Bit 4
; 0000 00BF // D5 - PORTD Bit 5
; 0000 00C0 // D6 - PORTD Bit 6
; 0000 00C1 // D7 - PORTD Bit 7
; 0000 00C2 // Characters/line: 16
; 0000 00C3 lcd_init(16);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00C4 
; 0000 00C5 while (1)
;PCODE: $000000BA VOL: 0
; 0000 00C6       {
; 0000 00C7 
; 0000 00C8       // Place your code here
; 0000 00C9       lcd_gotoxy(0,0);
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00CA      display_int(123);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00CB 
; 0000 00CC       }
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00CD }
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
