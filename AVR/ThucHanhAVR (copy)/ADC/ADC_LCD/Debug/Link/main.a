;/*
; * main.c
; *
; * Created: 11/5/2015 3:22:44 PM
; * Author: Le Ngoc An
; * Group : D13DCDT02-N
; */
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <string.h>
;
;    // Khai bao ket noi LCD
;#define RS PORTC.6
;#define EN PORTC.7
;#define LCD_data PORTD
;    // Dien ap tham chieu AVCC, du lieu dich trai
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (1<<ADLAR))
;
;    // Ghi lenh len LCD
;void LCD_instruction(unsigned char x)
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     RS = 0;
;PCODE: $0000000F VOL: 0
;	x -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0017     LCD_data = x;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0018     EN = 0;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0019     EN = 1;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001A     delay_ms(2);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001B }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;    // Ghi ky tu len LCD
;void LCD_write(unsigned char c)
; 0000 001E {
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001F     RS = 1;
;PCODE: $00000020 VOL: 0
;	c -> Y+0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0020     LCD_data = c;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0021     EN = 0;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0022     EN = 1;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0023     delay_ms(2);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0024 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;    // Ghi chuoi len LCD
;void LCD_writes(char *str)
; 0000 0028 {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0029     int i=0;
; 0000 002A     while(str[i] != 0)
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;	*str -> Y+2
;	i -> R16,R17
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002B     {
; 0000 002C         LCD_write(str[i]);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 002D         i++;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 002E 
; 0000 002F     }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0030 }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;    // Set dia chi, ghi chuoi len LCD
;void LCD_string(unsigned char row, unsigned char col, char *str)
; 0000 0033 {
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0034     unsigned char cmd;
; 0000 0035     cmd = (row == 1 ? 0x80 : 0xC0) + col - 1;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;	row -> Y+4
;	col -> Y+3
;	*str -> Y+1
;	cmd -> R17
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0036     LCD_instruction(cmd);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0037     LCD_writes(str);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0038 }
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;
;void LCD_init()
; 0000 003B {
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 003C     LCD_instruction(0x30);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 003D 	LCD_instruction(0x38); // 2 dong, font 5x7
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 003E 	LCD_instruction(0x01); // Xoa man hinh
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 003F 	LCD_instruction(0x0C); // Bat hien thi, xoa con tro
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0040 }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;
;    // Doc gia tri ADC
;unsigned char read_adc(unsigned char adc_input)
; 0000 0044 {
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0045     ADMUX = adc_input | ADC_VREF_TYPE; // Khoi dong ADC
;PCODE: $00000075 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0046     delay_us(10);
;PCODE: $00000079 VOL: 0
; 0000 0047     ADCSRA |= (1<<ADSC);   // Start ADC
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0048     while((ADCSRA & (1<<ADIF))==0);  // Doi chuyen doi
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0049     ADCSRA |= (1<<ADIF); // Xoa co ngat
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 004A     return ADCH;      // Tra ve gia tri o thanh ghi ADCH
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 004B }
;PCODE: $00000087 VOL: 0
;    // Ghi gia tri dang thap phan
;void Decimal_Convert(unsigned char d)
; 0000 004E {
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 004F       LCD_write(d/100+0x30);
;PCODE: $0000008A VOL: 0
;	d -> Y+0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0050       LCD_write(d%100/10+0x30);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0051       LCD_write(d%10+0x30);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0052 }
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;    // Ghi gia tri dang nhi phan
;void Binary_Convert(unsigned char b)
; 0000 0055 {
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0056     unsigned char i,bits;
; 0000 0057 
; 0000 0058     for(i=0;i<8;i++)
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;	b -> Y+2
;	i -> R17
;	bits -> R16
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0059     {
; 0000 005A         bits = b & 0x80;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 005B         if(bits == 0x80)
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 005C             LCD_write(1+0x30);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 005D         else
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 005E             LCD_write(0x30);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 005F         b = b << 1;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0060     }
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0061 }
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;
;    // Ghi gia tri dang thap luc phan
;void Hexa_Convert(unsigned char h)
; 0000 0065 {
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0066     unsigned char ch,dv;
; 0000 0067     ch = h/16;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;	h -> Y+2
;	ch -> R17
;	dv -> R16
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0068     dv = h%16;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0069     LCD_writes("0x");
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 006A 
; 0000 006B     if(ch<10)
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 006C         LCD_write(ch+0x30);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 006D     else
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 006E         LCD_write(ch-10+0x41);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 006F     if(dv<10)
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0070         LCD_write(dv+0x30);
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0071     else
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0072         LCD_write(dv-10+0x41);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0073 }
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0

	.DSEG
_0x1D:
	.BYTE 0x3
;
;    // Hien thi dien ap
;void Voltage_Convert(unsigned char v)
; 0000 0077 {

	.CSEG
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0078     unsigned int voltage;
; 0000 0079     voltage = v * 1.953125f;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;	v -> Y+2
;	voltage -> R16,R17
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 007A     LCD_write(voltage/100+0x30);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 007B     LCD_write('.');
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 007C     LCD_write(voltage%100/10+0x30);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 007D     LCD_write(voltage%10+0x30);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 007E     LCD_write('V');
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 007F }
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;
;
;void main(void)
; 0000 0083 {
;PCODE: $0000012D VOL: 0
; 0000 0084     unsigned char n;
; 0000 0085     DDRD = 0xFF;
;	n -> R17
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0086     DDRC = (1<<DDC7) | (1<<DDC6);
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0087 
; 0000 0088     // Khoi dong LCD
; 0000 0089     ADMUX = ADC_VREF_TYPE;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 008A     ADCSRA = (1<<ADEN) | (0<<ADSC) | (1<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 008B     SFIOR = (0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 008C 
; 0000 008D     LCD_init();
;PCODE: $00000138 VOL: 0
; 0000 008E while (1)
;PCODE: $00000139 VOL: 0
; 0000 008F     {
; 0000 0090         LCD_string(1,1,"Kenh0: ");
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 0091         Decimal_Convert(read_adc(0));
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0092         LCD_writes("D ");
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0093         Binary_Convert(read_adc(0));
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0094         LCD_writes("B ");
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 0095         Hexa_Convert(read_adc(0));
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 0096         LCD_writes(" DIEN AP:");
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 0097         Voltage_Convert(read_adc(0));
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0098 
; 0000 0099         LCD_instruction(0xC0);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 009A         for(n=1;n<8;n++)
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 009B         {
; 0000 009C             Voltage_Convert(read_adc(n));
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 009D             LCD_write(' ');
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 009E         }
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 009F         LCD_instruction(0x18);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00A0     }
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00A1 }
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0

	.DSEG
_0x25:
	.BYTE 0x18
