;/*
; * GiaotiepLCD.c
; *
; * Created: 10/30/2015 8:11:05 PM
; * Author: Le Ngoc An
; * Group : D13CQDT02-N
; * School: PTIT
; */
;
;#include <string.h>
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;    // Khai bao ket noi LCD
;#define RS PORTC.6
;#define EN PORTC.7
;#define LCD_Data PORTD
;
;    // Ghi lenh len LCD
;void LCD_Inst(unsigned char x)
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     RS = 0; // Chon ghi lenh
;PCODE: $0000000F VOL: 0
;	x -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0017     LCD_Data = x; // Ghi lenh x len LCD
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0018     EN = 1; // Enable LCD
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0019     EN = 0;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001A     delay_ms(2);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001B }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;    // Ghi ky tu len LCD
;void LCD_Write(unsigned char c)
; 0000 001E {
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001F     RS = 1; // Chon ghi du lieu
;PCODE: $00000020 VOL: 0
;	c -> Y+0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0020     LCD_Data = c; // Ghi ki tu c len LCD
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0021     EN = 1; // Enable LCD
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0022     EN = 0;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0023     delay_ms(2);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0024 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;    // Ghi ky tu kem theo vi tri len LCD
;void LCD_Write_Addr(unsigned char row, unsigned char col, char c)
; 0000 0027 {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0028     unsigned char Addr; // Bien vi tri cua ky tu can ghi
; 0000 0029     Addr = (row == 1 ? 0x80 : 0xC0) + col - 1;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;	row -> Y+3
;	col -> Y+2
;	c -> Y+1
;	Addr -> R17
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 002A     LCD_Inst(Addr); // Dat con tro tai vi tri Addr
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 002B     LCD_Write(c);   // Ghi ky tu c len LCD
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 002C }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;
;    // Ghi chuoi len LCD
;void LCD_Write_String(char *str)
; 0000 0030 {
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0031     int i = 0;
; 0000 0032     while(str[i] != 0)
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;	*str -> Y+2
;	i -> R16,R17
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0033     {
; 0000 0034         LCD_Write(str[i]);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0035         i++;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0036     }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0037 }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;
;void LCD_Write_String_Addr(unsigned char row, unsigned char col, char *str)
; 0000 003A {
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 003B     unsigned char Addr; // Bien vi tri cua ky tu can ghi
; 0000 003C     Addr = (row == 1 ? 0x80 : 0xC0) + col - 1;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;	row -> Y+4
;	col -> Y+3
;	*str -> Y+1
;	Addr -> R17
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 003D     LCD_Inst(Addr); // Dat con tro tai vi tri Addr
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 003E     LCD_Write_String(str);   // Ghi chuoi str len LCD
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 003F }
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;    // Khoi dong LCD
;void LCD_Init(void)
; 0000 0042 {
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0043     LCD_Inst(0x01); // Xoa man hinh
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0044     LCD_Inst(0x0C); // Bat hien thi, tat con tro
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0045     LCD_Inst(0x38); // 2 dong, font 5x7;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0046 }
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;
;void main(void)
; 0000 0049 {
;PCODE: $0000008B VOL: 0
; 0000 004A     // PORTC: Pin6 ,Pin7 out
; 0000 004B     DDRC = (1<<DDC7) | (1<<DDC6);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 004C     // PORTD out
; 0000 004D     DDRD = (1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 004E 
; 0000 004F     // Khoi dong LCD
; 0000 0050     LCD_Init();
;PCODE: $00000090 VOL: 0
; 0000 0051 while (1)
;PCODE: $00000091 VOL: 0
; 0000 0052     {
; 0000 0053         LCD_Write_String_Addr(1,2,"ATmega16");
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0054         LCD_Write_String_Addr(2,2,"Flash ");
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0055         LCD_Write(1+0x30);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0056         LCD_Write(6+0x30);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0057         LCD_Write_String("KB");
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0058         LCD_Inst(0x1C);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0059     }
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 005A }
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0

	.DSEG
_0x1B:
	.BYTE 0x13
