
slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a68  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  00000adc  2**0
                  ALLOC
  2 .stab         000033e4  00000000  00000000  00000adc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000abd  00000000  00000000  00003ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000040  00000000  00000000  0000497d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000000fd  00000000  00000000  000049bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000393  00000000  00000000  00004aba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000176  00000000  00000000  00004e4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000545  00000000  00000000  00004fc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00005508  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000150  00000000  00000000  00005608  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000021b  00000000  00000000  00005758  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000049  00000000  00000000  00005973  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  30:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__vector_12>
  34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__stack+0x71>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_clear_bss>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
  ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
  ec:	a1 36       	cpi	r26, 0x61	; 97
  ee:	b1 07       	cpc	r27, r17
  f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
  f2:	0e 94 88 00 	call	0x110	; 0x110 <main>
  f6:	0c 94 32 05 	jmp	0xa64	; 0xa64 <_exit>

000000fa <__bad_interrupt>:
  fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <init_slave>:
#define  DDR_SPI_SLAVE   DDRB
#define  PORT_SPI_SLAVE  PORTB

volatile unsigned char data;
void init_slave(void){
	DDR_SPI_SLAVE|=(1<<SLAVE_MISO)|(1<<SLAVE_SCK);
  fe:	87 b3       	in	r24, 0x17	; 23
 100:	80 6c       	ori	r24, 0xC0	; 192
 102:	87 bb       	out	0x17, r24	; 23
	PORT_SPI_SLAVE|=(1<<SLAVE_MOSI)|(1<<SS);
 104:	88 b3       	in	r24, 0x18	; 24
 106:	80 63       	ori	r24, 0x30	; 48
 108:	88 bb       	out	0x18, r24	; 24
	
	SPCR=(1<<SPIE)|(1<<SPE)|(1<<CPHA)|(1<<SPR1)|(1<<SPR0);
 10a:	87 ec       	ldi	r24, 0xC7	; 199
 10c:	8d b9       	out	0x0d, r24	; 13
}
 10e:	08 95       	ret

00000110 <main>:

int main(void)
{
	sei();
 110:	78 94       	sei
	init_lcd();
 112:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <init_lcd>
	init_slave();
 116:	0e 94 7f 00 	call	0xfe	; 0xfe <init_slave>
 11a:	ff cf       	rjmp	.-2      	; 0x11a <main+0xa>

0000011c <__vector_12>:
	//clear_lcd();
    while(1){};
		return 0;
}
ISR(SPI_STC_vect){
 11c:	1f 92       	push	r1
 11e:	0f 92       	push	r0
 120:	0f b6       	in	r0, 0x3f	; 63
 122:	0f 92       	push	r0
 124:	11 24       	eor	r1, r1
 126:	2f 93       	push	r18
 128:	3f 93       	push	r19
 12a:	4f 93       	push	r20
 12c:	5f 93       	push	r21
 12e:	6f 93       	push	r22
 130:	7f 93       	push	r23
 132:	8f 93       	push	r24
 134:	9f 93       	push	r25
 136:	af 93       	push	r26
 138:	bf 93       	push	r27
 13a:	ef 93       	push	r30
 13c:	ff 93       	push	r31
	data=SPDR;
 13e:	8f b1       	in	r24, 0x0f	; 15
 140:	80 93 60 00 	sts	0x0060, r24
	//clear_lcd();
	movecursor(1,1);
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	61 e0       	ldi	r22, 0x01	; 1
 148:	0e 94 23 01 	call	0x246	; 0x246 <movecursor>
	printnumber_lcd(data);
 14c:	80 91 60 00 	lds	r24, 0x0060
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 45 01 	call	0x28a	; 0x28a <printnumber_lcd>
 156:	ff 91       	pop	r31
 158:	ef 91       	pop	r30
 15a:	bf 91       	pop	r27
 15c:	af 91       	pop	r26
 15e:	9f 91       	pop	r25
 160:	8f 91       	pop	r24
 162:	7f 91       	pop	r23
 164:	6f 91       	pop	r22
 166:	5f 91       	pop	r21
 168:	4f 91       	pop	r20
 16a:	3f 91       	pop	r19
 16c:	2f 91       	pop	r18
 16e:	0f 90       	pop	r0
 170:	0f be       	out	0x3f, r0	; 63
 172:	0f 90       	pop	r0
 174:	1f 90       	pop	r1
 176:	18 95       	reti

00000178 <read_2Nib>:

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
 178:	90 9a       	sbi	0x12, 0	; 18
	DDR_DATA=0x0F;
 17a:	8f e0       	ldi	r24, 0x0F	; 15
 17c:	81 bb       	out	0x11, r24	; 17
	HNib=DATA_input&0xF0;
 17e:	80 b3       	in	r24, 0x10	; 16
	clearbit(CTRL,EN);
 180:	90 98       	cbi	0x12, 0	; 18
	
	setbit(CTRL,EN);
 182:	90 9a       	sbi	0x12, 0	; 18
	LNib=DATA_input&0xF0;
 184:	90 b3       	in	r25, 0x10	; 16
	clearbit(CTRL,EN);
 186:	90 98       	cbi	0x12, 0	; 18
	LNib>>=4;
 188:	92 95       	swap	r25
 18a:	9f 70       	andi	r25, 0x0F	; 15
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
	DDR_DATA=0x0F;
	HNib=DATA_input&0xF0;
 18c:	80 7f       	andi	r24, 0xF0	; 240
	LNib=DATA_input&0xF0;
	clearbit(CTRL,EN);
	LNib>>=4;
	
	return (HNib|LNib);
}
 18e:	89 2b       	or	r24, r25
 190:	08 95       	ret

00000192 <write_2Nib>:
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
 192:	92 b3       	in	r25, 0x12	; 18
 194:	9f 70       	andi	r25, 0x0F	; 15
	HNib=data&0xF0;
 196:	28 2f       	mov	r18, r24
 198:	20 7f       	andi	r18, 0xF0	; 240
	LNib=(data<<4)&0xF0;
	
	DATA_output=HNib|temp;
 19a:	29 2b       	or	r18, r25
 19c:	22 bb       	out	0x12, r18	; 18
	setbit(CTRL,EN);
 19e:	90 9a       	sbi	0x12, 0	; 18
	clearbit(CTRL,EN);
 1a0:	90 98       	cbi	0x12, 0	; 18
}
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
	HNib=data&0xF0;
	LNib=(data<<4)&0xF0;
 1a2:	82 95       	swap	r24
 1a4:	80 7f       	andi	r24, 0xF0	; 240
	
	DATA_output=HNib|temp;
	setbit(CTRL,EN);
	clearbit(CTRL,EN);
	
	DATA_output=LNib|temp;
 1a6:	98 2b       	or	r25, r24
 1a8:	92 bb       	out	0x12, r25	; 18
	setbit(CTRL,EN);
 1aa:	90 9a       	sbi	0x12, 0	; 18
	clearbit(CTRL,EN);
 1ac:	90 98       	cbi	0x12, 0	; 18
	
}
 1ae:	08 95       	ret

000001b0 <wait_lcd>:
void wait_lcd(void){
 1b0:	0f 93       	push	r16
 1b2:	1f 93       	push	r17
 1b4:	df 93       	push	r29
 1b6:	cf 93       	push	r28
 1b8:	0f 92       	push	r0
 1ba:	cd b7       	in	r28, 0x3d	; 61
 1bc:	de b7       	in	r29, 0x3e	; 62
	while(1){
     	clearbit(CTRL,RS);
		setbit(CTRL,RW);
		temp=read_2Nib();
		
		if(bit_is_clear(temp,7)) break;
 1be:	8e 01       	movw	r16, r28
 1c0:	0f 5f       	subi	r16, 0xFF	; 255
 1c2:	1f 4f       	sbci	r17, 0xFF	; 255
}
void wait_lcd(void){
	unsigned char temp;
	
	while(1){
     	clearbit(CTRL,RS);
 1c4:	92 98       	cbi	0x12, 2	; 18
		setbit(CTRL,RW);
 1c6:	91 9a       	sbi	0x12, 1	; 18
		temp=read_2Nib();
 1c8:	0e 94 bc 00 	call	0x178	; 0x178 <read_2Nib>
 1cc:	89 83       	std	Y+1, r24	; 0x01
		
		if(bit_is_clear(temp,7)) break;
 1ce:	f8 01       	movw	r30, r16
 1d0:	80 81       	ld	r24, Z
 1d2:	88 23       	and	r24, r24
 1d4:	bc f3       	brlt	.-18     	; 0x1c4 <wait_lcd+0x14>
	}
	clearbit(CTRL,RW);
 1d6:	91 98       	cbi	0x12, 1	; 18
	DDR_DATA=0xFF;
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	81 bb       	out	0x11, r24	; 17
	
}
 1dc:	0f 90       	pop	r0
 1de:	cf 91       	pop	r28
 1e0:	df 91       	pop	r29
 1e2:	1f 91       	pop	r17
 1e4:	0f 91       	pop	r16
 1e6:	08 95       	ret

000001e8 <init_lcd>:
//uses mode 4 bit
void init_lcd(void){
	DDR_CTRL=0xFF;
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	81 bb       	out	0x11, r24	; 17
	DDR_DATA=0xFF;
 1ec:	81 bb       	out	0x11, r24	; 17
	clearbit(CTRL,RS);
 1ee:	92 98       	cbi	0x12, 2	; 18
	clearbit(CTRL,RW);
 1f0:	91 98       	cbi	0x12, 1	; 18
	clearbit(CTRL,EN);
 1f2:	90 98       	cbi	0x12, 0	; 18
	
//function set	
	setbit(CTRL,EN);
 1f4:	90 9a       	sbi	0x12, 0	; 18
	setbit(DATA_output,5);
 1f6:	95 9a       	sbi	0x12, 5	; 18
	clearbit(CTRL,EN);
 1f8:	90 98       	cbi	0x12, 0	; 18
	wait_lcd();
 1fa:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <wait_lcd>
	write_2Nib(0x28);
 1fe:	88 e2       	ldi	r24, 0x28	; 40
 200:	0e 94 c9 00 	call	0x192	; 0x192 <write_2Nib>
	wait_lcd();
 204:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <wait_lcd>
//display on/off control
    write_2Nib(0x0E);
 208:	8e e0       	ldi	r24, 0x0E	; 14
 20a:	0e 94 c9 00 	call	0x192	; 0x192 <write_2Nib>
	wait_lcd();
 20e:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <wait_lcd>

//entry mode set 
    
    write_2Nib(0x06);
 212:	86 e0       	ldi	r24, 0x06	; 6
 214:	0e 94 c9 00 	call	0x192	; 0x192 <write_2Nib>
    wait_lcd();		
 218:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <wait_lcd>
}
 21c:	08 95       	ret

0000021e <putchar_lcd>:
void putchar_lcd(unsigned char data){
	
	setbit(CTRL,RS);
 21e:	92 9a       	sbi	0x12, 2	; 18
	write_2Nib(data);
 220:	0e 94 c9 00 	call	0x192	; 0x192 <write_2Nib>
	wait_lcd();
 224:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <wait_lcd>
}
 228:	08 95       	ret

0000022a <cursor_home>:
void cursor_home(){
	clearbit(CTRL,RS);
 22a:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x03);
 22c:	83 e0       	ldi	r24, 0x03	; 3
 22e:	0e 94 c9 00 	call	0x192	; 0x192 <write_2Nib>
	wait_lcd();
 232:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <wait_lcd>
}
 236:	08 95       	ret

00000238 <clear_lcd>:
void clear_lcd(){
	clearbit(CTRL,RS);
 238:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x01);
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 c9 00 	call	0x192	; 0x192 <write_2Nib>
	wait_lcd();
 240:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <wait_lcd>
}
 244:	08 95       	ret

00000246 <movecursor>:
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
	clearbit(CTRL,RS);
 246:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x01);
	wait_lcd();
}
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
 248:	82 95       	swap	r24
 24a:	88 0f       	add	r24, r24
 24c:	88 0f       	add	r24, r24
 24e:	80 7c       	andi	r24, 0xC0	; 192
 250:	86 0f       	add	r24, r22
	clearbit(CTRL,RS);
	write_2Nib(x);
 252:	81 5c       	subi	r24, 0xC1	; 193
 254:	0e 94 c9 00 	call	0x192	; 0x192 <write_2Nib>
	wait_lcd();
 258:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <wait_lcd>
}
 25c:	08 95       	ret

0000025e <count_number>:
int count_number(unsigned int number){
 25e:	bc 01       	movw	r22, r24
	int dem=0;
	while(number){
 260:	00 97       	sbiw	r24, 0x00	; 0
 262:	71 f0       	breq	.+28     	; 0x280 <count_number+0x22>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 264:	20 e0       	ldi	r18, 0x00	; 0
 266:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
 268:	ea e0       	ldi	r30, 0x0A	; 10
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	cb 01       	movw	r24, r22
 26e:	bf 01       	movw	r22, r30
 270:	0e 94 0b 05 	call	0xa16	; 0xa16 <__udivmodhi4>
		dem++;
 274:	2f 5f       	subi	r18, 0xFF	; 255
 276:	3f 4f       	sbci	r19, 0xFF	; 255
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
	while(number){
 278:	61 15       	cp	r22, r1
 27a:	71 05       	cpc	r23, r1
 27c:	b9 f7       	brne	.-18     	; 0x26c <count_number+0xe>
 27e:	02 c0       	rjmp	.+4      	; 0x284 <count_number+0x26>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 280:	20 e0       	ldi	r18, 0x00	; 0
 282:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
		dem++;
	}
	return dem;
}
 284:	82 2f       	mov	r24, r18
 286:	93 2f       	mov	r25, r19
 288:	08 95       	ret

0000028a <printnumber_lcd>:
void printnumber_lcd(unsigned int number){
 28a:	af 92       	push	r10
 28c:	bf 92       	push	r11
 28e:	cf 92       	push	r12
 290:	df 92       	push	r13
 292:	ef 92       	push	r14
 294:	ff 92       	push	r15
 296:	0f 93       	push	r16
 298:	1f 93       	push	r17
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
 29e:	e8 2e       	mov	r14, r24
 2a0:	f9 2e       	mov	r15, r25
	int a,n,i,temp;
	n= count_number(number);
 2a2:	0e 94 2f 01 	call	0x25e	; 0x25e <count_number>
 2a6:	6c 01       	movw	r12, r24
	temp=pow(10,n-1);
 2a8:	bc 01       	movw	r22, r24
 2aa:	61 50       	subi	r22, 0x01	; 1
 2ac:	70 40       	sbci	r23, 0x00	; 0
 2ae:	88 27       	eor	r24, r24
 2b0:	77 fd       	sbrc	r23, 7
 2b2:	80 95       	com	r24
 2b4:	98 2f       	mov	r25, r24
 2b6:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__floatsisf>
 2ba:	9b 01       	movw	r18, r22
 2bc:	ac 01       	movw	r20, r24
 2be:	60 e0       	ldi	r22, 0x00	; 0
 2c0:	70 e0       	ldi	r23, 0x00	; 0
 2c2:	80 e2       	ldi	r24, 0x20	; 32
 2c4:	91 e4       	ldi	r25, 0x41	; 65
 2c6:	0e 94 4e 02 	call	0x49c	; 0x49c <pow>
	for(i=0;i<n;i++){
 2ca:	1c 14       	cp	r1, r12
 2cc:	1d 04       	cpc	r1, r13
 2ce:	04 f5       	brge	.+64     	; 0x310 <printnumber_lcd+0x86>
	return dem;
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
 2d0:	0e 94 b7 01 	call	0x36e	; 0x36e <__fixsfsi>
 2d4:	eb 01       	movw	r28, r22
	for(i=0;i<n;i++){
 2d6:	00 e0       	ldi	r16, 0x00	; 0
 2d8:	10 e0       	ldi	r17, 0x00	; 0
		a=number/temp;
		number=number%temp;
		temp=temp/10;
 2da:	0f 2e       	mov	r0, r31
 2dc:	fa e0       	ldi	r31, 0x0A	; 10
 2de:	af 2e       	mov	r10, r31
 2e0:	bb 24       	eor	r11, r11
 2e2:	f0 2d       	mov	r31, r0
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
		a=number/temp;
 2e4:	8e 2d       	mov	r24, r14
 2e6:	9f 2d       	mov	r25, r15
 2e8:	be 01       	movw	r22, r28
 2ea:	0e 94 0b 05 	call	0xa16	; 0xa16 <__udivmodhi4>
 2ee:	26 2f       	mov	r18, r22
		number=number%temp;
 2f0:	e8 2e       	mov	r14, r24
 2f2:	f9 2e       	mov	r15, r25
		temp=temp/10;
 2f4:	ce 01       	movw	r24, r28
 2f6:	b5 01       	movw	r22, r10
 2f8:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__divmodhi4>
 2fc:	eb 01       	movw	r28, r22
		putchar_lcd(a+48);
 2fe:	82 2f       	mov	r24, r18
 300:	80 5d       	subi	r24, 0xD0	; 208
 302:	0e 94 0f 01 	call	0x21e	; 0x21e <putchar_lcd>
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
 306:	0f 5f       	subi	r16, 0xFF	; 255
 308:	1f 4f       	sbci	r17, 0xFF	; 255
 30a:	0c 15       	cp	r16, r12
 30c:	1d 05       	cpc	r17, r13
 30e:	54 f3       	brlt	.-44     	; 0x2e4 <printnumber_lcd+0x5a>
		a=number/temp;
		number=number%temp;
		temp=temp/10;
		putchar_lcd(a+48);
	}
}
 310:	df 91       	pop	r29
 312:	cf 91       	pop	r28
 314:	1f 91       	pop	r17
 316:	0f 91       	pop	r16
 318:	ff 90       	pop	r15
 31a:	ef 90       	pop	r14
 31c:	df 90       	pop	r13
 31e:	cf 90       	pop	r12
 320:	bf 90       	pop	r11
 322:	af 90       	pop	r10
 324:	08 95       	ret

00000326 <putstr_lcd>:
putstr_lcd(unsigned char *str, unsigned int lenght){
 326:	ef 92       	push	r14
 328:	ff 92       	push	r15
 32a:	0f 93       	push	r16
 32c:	1f 93       	push	r17
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	7b 01       	movw	r14, r22
	unsigned int i;
	for(i=0;i<lenght;i++){
 334:	61 15       	cp	r22, r1
 336:	71 05       	cpc	r23, r1
 338:	99 f0       	breq	.+38     	; 0x360 <putstr_lcd+0x3a>
 33a:	08 2f       	mov	r16, r24
 33c:	19 2f       	mov	r17, r25
 33e:	c0 e0       	ldi	r28, 0x00	; 0
 340:	d0 e0       	ldi	r29, 0x00	; 0
		if(*(str+i)>0){ 
 342:	f8 01       	movw	r30, r16
 344:	81 91       	ld	r24, Z+
 346:	8f 01       	movw	r16, r30
 348:	88 23       	and	r24, r24
 34a:	19 f0       	breq	.+6      	; 0x352 <putstr_lcd+0x2c>
			putchar_lcd(*(str+i));
 34c:	0e 94 0f 01 	call	0x21e	; 0x21e <putchar_lcd>
 350:	03 c0       	rjmp	.+6      	; 0x358 <putstr_lcd+0x32>
			}
		else putchar_lcd(0);	
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	0e 94 0f 01 	call	0x21e	; 0x21e <putchar_lcd>
		putchar_lcd(a+48);
	}
}
putstr_lcd(unsigned char *str, unsigned int lenght){
	unsigned int i;
	for(i=0;i<lenght;i++){
 358:	21 96       	adiw	r28, 0x01	; 1
 35a:	ce 15       	cp	r28, r14
 35c:	df 05       	cpc	r29, r15
 35e:	88 f3       	brcs	.-30     	; 0x342 <putstr_lcd+0x1c>
		if(*(str+i)>0){ 
			putchar_lcd(*(str+i));
			}
		else putchar_lcd(0);	
}
}
 360:	df 91       	pop	r29
 362:	cf 91       	pop	r28
 364:	1f 91       	pop	r17
 366:	0f 91       	pop	r16
 368:	ff 90       	pop	r15
 36a:	ef 90       	pop	r14
 36c:	08 95       	ret

0000036e <__fixsfsi>:
 36e:	04 d0       	rcall	.+8      	; 0x378 <__fixunssfsi>
 370:	68 94       	set
 372:	b1 11       	cpse	r27, r1
 374:	8d c0       	rjmp	.+282    	; 0x490 <__fp_szero>
 376:	08 95       	ret

00000378 <__fixunssfsi>:
 378:	70 d0       	rcall	.+224    	; 0x45a <__fp_splitA>
 37a:	88 f0       	brcs	.+34     	; 0x39e <__fixunssfsi+0x26>
 37c:	9f 57       	subi	r25, 0x7F	; 127
 37e:	90 f0       	brcs	.+36     	; 0x3a4 <__fixunssfsi+0x2c>
 380:	b9 2f       	mov	r27, r25
 382:	99 27       	eor	r25, r25
 384:	b7 51       	subi	r27, 0x17	; 23
 386:	a0 f0       	brcs	.+40     	; 0x3b0 <__fixunssfsi+0x38>
 388:	d1 f0       	breq	.+52     	; 0x3be <__fixunssfsi+0x46>
 38a:	66 0f       	add	r22, r22
 38c:	77 1f       	adc	r23, r23
 38e:	88 1f       	adc	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	1a f0       	brmi	.+6      	; 0x39a <__fixunssfsi+0x22>
 394:	ba 95       	dec	r27
 396:	c9 f7       	brne	.-14     	; 0x38a <__fixunssfsi+0x12>
 398:	12 c0       	rjmp	.+36     	; 0x3be <__fixunssfsi+0x46>
 39a:	b1 30       	cpi	r27, 0x01	; 1
 39c:	81 f0       	breq	.+32     	; 0x3be <__fixunssfsi+0x46>
 39e:	77 d0       	rcall	.+238    	; 0x48e <__fp_zero>
 3a0:	b1 e0       	ldi	r27, 0x01	; 1
 3a2:	08 95       	ret
 3a4:	74 c0       	rjmp	.+232    	; 0x48e <__fp_zero>
 3a6:	67 2f       	mov	r22, r23
 3a8:	78 2f       	mov	r23, r24
 3aa:	88 27       	eor	r24, r24
 3ac:	b8 5f       	subi	r27, 0xF8	; 248
 3ae:	39 f0       	breq	.+14     	; 0x3be <__fixunssfsi+0x46>
 3b0:	b9 3f       	cpi	r27, 0xF9	; 249
 3b2:	cc f3       	brlt	.-14     	; 0x3a6 <__fixunssfsi+0x2e>
 3b4:	86 95       	lsr	r24
 3b6:	77 95       	ror	r23
 3b8:	67 95       	ror	r22
 3ba:	b3 95       	inc	r27
 3bc:	d9 f7       	brne	.-10     	; 0x3b4 <__fixunssfsi+0x3c>
 3be:	3e f4       	brtc	.+14     	; 0x3ce <__fixunssfsi+0x56>
 3c0:	90 95       	com	r25
 3c2:	80 95       	com	r24
 3c4:	70 95       	com	r23
 3c6:	61 95       	neg	r22
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	08 95       	ret

000003d0 <__floatunsisf>:
 3d0:	e8 94       	clt
 3d2:	09 c0       	rjmp	.+18     	; 0x3e6 <__floatsisf+0x12>

000003d4 <__floatsisf>:
 3d4:	97 fb       	bst	r25, 7
 3d6:	3e f4       	brtc	.+14     	; 0x3e6 <__floatsisf+0x12>
 3d8:	90 95       	com	r25
 3da:	80 95       	com	r24
 3dc:	70 95       	com	r23
 3de:	61 95       	neg	r22
 3e0:	7f 4f       	sbci	r23, 0xFF	; 255
 3e2:	8f 4f       	sbci	r24, 0xFF	; 255
 3e4:	9f 4f       	sbci	r25, 0xFF	; 255
 3e6:	99 23       	and	r25, r25
 3e8:	a9 f0       	breq	.+42     	; 0x414 <__floatsisf+0x40>
 3ea:	f9 2f       	mov	r31, r25
 3ec:	96 e9       	ldi	r25, 0x96	; 150
 3ee:	bb 27       	eor	r27, r27
 3f0:	93 95       	inc	r25
 3f2:	f6 95       	lsr	r31
 3f4:	87 95       	ror	r24
 3f6:	77 95       	ror	r23
 3f8:	67 95       	ror	r22
 3fa:	b7 95       	ror	r27
 3fc:	f1 11       	cpse	r31, r1
 3fe:	f8 cf       	rjmp	.-16     	; 0x3f0 <__floatsisf+0x1c>
 400:	fa f4       	brpl	.+62     	; 0x440 <__floatsisf+0x6c>
 402:	bb 0f       	add	r27, r27
 404:	11 f4       	brne	.+4      	; 0x40a <__floatsisf+0x36>
 406:	60 ff       	sbrs	r22, 0
 408:	1b c0       	rjmp	.+54     	; 0x440 <__floatsisf+0x6c>
 40a:	6f 5f       	subi	r22, 0xFF	; 255
 40c:	7f 4f       	sbci	r23, 0xFF	; 255
 40e:	8f 4f       	sbci	r24, 0xFF	; 255
 410:	9f 4f       	sbci	r25, 0xFF	; 255
 412:	16 c0       	rjmp	.+44     	; 0x440 <__floatsisf+0x6c>
 414:	88 23       	and	r24, r24
 416:	11 f0       	breq	.+4      	; 0x41c <__floatsisf+0x48>
 418:	96 e9       	ldi	r25, 0x96	; 150
 41a:	11 c0       	rjmp	.+34     	; 0x43e <__floatsisf+0x6a>
 41c:	77 23       	and	r23, r23
 41e:	21 f0       	breq	.+8      	; 0x428 <__floatsisf+0x54>
 420:	9e e8       	ldi	r25, 0x8E	; 142
 422:	87 2f       	mov	r24, r23
 424:	76 2f       	mov	r23, r22
 426:	05 c0       	rjmp	.+10     	; 0x432 <__floatsisf+0x5e>
 428:	66 23       	and	r22, r22
 42a:	71 f0       	breq	.+28     	; 0x448 <__floatsisf+0x74>
 42c:	96 e8       	ldi	r25, 0x86	; 134
 42e:	86 2f       	mov	r24, r22
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	2a f0       	brmi	.+10     	; 0x440 <__floatsisf+0x6c>
 436:	9a 95       	dec	r25
 438:	66 0f       	add	r22, r22
 43a:	77 1f       	adc	r23, r23
 43c:	88 1f       	adc	r24, r24
 43e:	da f7       	brpl	.-10     	; 0x436 <__floatsisf+0x62>
 440:	88 0f       	add	r24, r24
 442:	96 95       	lsr	r25
 444:	87 95       	ror	r24
 446:	97 f9       	bld	r25, 7
 448:	08 95       	ret

0000044a <__fp_split3>:
 44a:	57 fd       	sbrc	r21, 7
 44c:	90 58       	subi	r25, 0x80	; 128
 44e:	44 0f       	add	r20, r20
 450:	55 1f       	adc	r21, r21
 452:	59 f0       	breq	.+22     	; 0x46a <__fp_splitA+0x10>
 454:	5f 3f       	cpi	r21, 0xFF	; 255
 456:	71 f0       	breq	.+28     	; 0x474 <__fp_splitA+0x1a>
 458:	47 95       	ror	r20

0000045a <__fp_splitA>:
 45a:	88 0f       	add	r24, r24
 45c:	97 fb       	bst	r25, 7
 45e:	99 1f       	adc	r25, r25
 460:	61 f0       	breq	.+24     	; 0x47a <__fp_splitA+0x20>
 462:	9f 3f       	cpi	r25, 0xFF	; 255
 464:	79 f0       	breq	.+30     	; 0x484 <__fp_splitA+0x2a>
 466:	87 95       	ror	r24
 468:	08 95       	ret
 46a:	12 16       	cp	r1, r18
 46c:	13 06       	cpc	r1, r19
 46e:	14 06       	cpc	r1, r20
 470:	55 1f       	adc	r21, r21
 472:	f2 cf       	rjmp	.-28     	; 0x458 <__fp_split3+0xe>
 474:	46 95       	lsr	r20
 476:	f1 df       	rcall	.-30     	; 0x45a <__fp_splitA>
 478:	08 c0       	rjmp	.+16     	; 0x48a <__fp_splitA+0x30>
 47a:	16 16       	cp	r1, r22
 47c:	17 06       	cpc	r1, r23
 47e:	18 06       	cpc	r1, r24
 480:	99 1f       	adc	r25, r25
 482:	f1 cf       	rjmp	.-30     	; 0x466 <__fp_splitA+0xc>
 484:	86 95       	lsr	r24
 486:	71 05       	cpc	r23, r1
 488:	61 05       	cpc	r22, r1
 48a:	08 94       	sec
 48c:	08 95       	ret

0000048e <__fp_zero>:
 48e:	e8 94       	clt

00000490 <__fp_szero>:
 490:	bb 27       	eor	r27, r27
 492:	66 27       	eor	r22, r22
 494:	77 27       	eor	r23, r23
 496:	cb 01       	movw	r24, r22
 498:	97 f9       	bld	r25, 7
 49a:	08 95       	ret

0000049c <pow>:
 49c:	fa 01       	movw	r30, r20
 49e:	ee 0f       	add	r30, r30
 4a0:	ff 1f       	adc	r31, r31
 4a2:	30 96       	adiw	r30, 0x00	; 0
 4a4:	21 05       	cpc	r18, r1
 4a6:	31 05       	cpc	r19, r1
 4a8:	99 f1       	breq	.+102    	; 0x510 <pow+0x74>
 4aa:	61 15       	cp	r22, r1
 4ac:	71 05       	cpc	r23, r1
 4ae:	61 f4       	brne	.+24     	; 0x4c8 <pow+0x2c>
 4b0:	80 38       	cpi	r24, 0x80	; 128
 4b2:	bf e3       	ldi	r27, 0x3F	; 63
 4b4:	9b 07       	cpc	r25, r27
 4b6:	49 f1       	breq	.+82     	; 0x50a <pow+0x6e>
 4b8:	68 94       	set
 4ba:	90 38       	cpi	r25, 0x80	; 128
 4bc:	81 05       	cpc	r24, r1
 4be:	61 f0       	breq	.+24     	; 0x4d8 <pow+0x3c>
 4c0:	80 38       	cpi	r24, 0x80	; 128
 4c2:	bf ef       	ldi	r27, 0xFF	; 255
 4c4:	9b 07       	cpc	r25, r27
 4c6:	41 f0       	breq	.+16     	; 0x4d8 <pow+0x3c>
 4c8:	99 23       	and	r25, r25
 4ca:	42 f5       	brpl	.+80     	; 0x51c <pow+0x80>
 4cc:	ff 3f       	cpi	r31, 0xFF	; 255
 4ce:	e1 05       	cpc	r30, r1
 4d0:	31 05       	cpc	r19, r1
 4d2:	21 05       	cpc	r18, r1
 4d4:	11 f1       	breq	.+68     	; 0x51a <pow+0x7e>
 4d6:	e8 94       	clt
 4d8:	08 94       	sec
 4da:	e7 95       	ror	r30
 4dc:	d9 01       	movw	r26, r18
 4de:	aa 23       	and	r26, r26
 4e0:	29 f4       	brne	.+10     	; 0x4ec <pow+0x50>
 4e2:	ab 2f       	mov	r26, r27
 4e4:	be 2f       	mov	r27, r30
 4e6:	f8 5f       	subi	r31, 0xF8	; 248
 4e8:	d0 f3       	brcs	.-12     	; 0x4de <pow+0x42>
 4ea:	10 c0       	rjmp	.+32     	; 0x50c <pow+0x70>
 4ec:	ff 5f       	subi	r31, 0xFF	; 255
 4ee:	70 f4       	brcc	.+28     	; 0x50c <pow+0x70>
 4f0:	a6 95       	lsr	r26
 4f2:	e0 f7       	brcc	.-8      	; 0x4ec <pow+0x50>
 4f4:	f7 39       	cpi	r31, 0x97	; 151
 4f6:	50 f0       	brcs	.+20     	; 0x50c <pow+0x70>
 4f8:	19 f0       	breq	.+6      	; 0x500 <pow+0x64>
 4fa:	ff 3a       	cpi	r31, 0xAF	; 175
 4fc:	38 f4       	brcc	.+14     	; 0x50c <pow+0x70>
 4fe:	9f 77       	andi	r25, 0x7F	; 127
 500:	9f 93       	push	r25
 502:	0c d0       	rcall	.+24     	; 0x51c <pow+0x80>
 504:	0f 90       	pop	r0
 506:	07 fc       	sbrc	r0, 7
 508:	90 58       	subi	r25, 0x80	; 128
 50a:	08 95       	ret
 50c:	3e f0       	brts	.+14     	; 0x51c <pow+0x80>
 50e:	49 c0       	rjmp	.+146    	; 0x5a2 <__fp_nan>
 510:	60 e0       	ldi	r22, 0x00	; 0
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	80 e8       	ldi	r24, 0x80	; 128
 516:	9f e3       	ldi	r25, 0x3F	; 63
 518:	08 95       	ret
 51a:	4f e7       	ldi	r20, 0x7F	; 127
 51c:	9f 77       	andi	r25, 0x7F	; 127
 51e:	5f 93       	push	r21
 520:	4f 93       	push	r20
 522:	3f 93       	push	r19
 524:	2f 93       	push	r18
 526:	a7 d0       	rcall	.+334    	; 0x676 <log>
 528:	2f 91       	pop	r18
 52a:	3f 91       	pop	r19
 52c:	4f 91       	pop	r20
 52e:	5f 91       	pop	r21
 530:	15 d1       	rcall	.+554    	; 0x75c <__mulsf3>
 532:	05 c0       	rjmp	.+10     	; 0x53e <exp>
 534:	19 f4       	brne	.+6      	; 0x53c <pow+0xa0>
 536:	0e f0       	brts	.+2      	; 0x53a <pow+0x9e>
 538:	2e c0       	rjmp	.+92     	; 0x596 <__fp_inf>
 53a:	a9 cf       	rjmp	.-174    	; 0x48e <__fp_zero>
 53c:	32 c0       	rjmp	.+100    	; 0x5a2 <__fp_nan>

0000053e <exp>:
 53e:	8d df       	rcall	.-230    	; 0x45a <__fp_splitA>
 540:	c8 f3       	brcs	.-14     	; 0x534 <pow+0x98>
 542:	96 38       	cpi	r25, 0x86	; 134
 544:	c0 f7       	brcc	.-16     	; 0x536 <pow+0x9a>
 546:	07 f8       	bld	r0, 7
 548:	0f 92       	push	r0
 54a:	e8 94       	clt
 54c:	2b e3       	ldi	r18, 0x3B	; 59
 54e:	3a ea       	ldi	r19, 0xAA	; 170
 550:	48 eb       	ldi	r20, 0xB8	; 184
 552:	5f e7       	ldi	r21, 0x7F	; 127
 554:	11 d1       	rcall	.+546    	; 0x778 <__mulsf3_pse>
 556:	0f 92       	push	r0
 558:	0f 92       	push	r0
 55a:	0f 92       	push	r0
 55c:	4d b7       	in	r20, 0x3d	; 61
 55e:	5e b7       	in	r21, 0x3e	; 62
 560:	0f 92       	push	r0
 562:	c9 d0       	rcall	.+402    	; 0x6f6 <modf>
 564:	e4 e5       	ldi	r30, 0x54	; 84
 566:	f0 e0       	ldi	r31, 0x00	; 0
 568:	1f d0       	rcall	.+62     	; 0x5a8 <__fp_powser>
 56a:	4f 91       	pop	r20
 56c:	5f 91       	pop	r21
 56e:	ef 91       	pop	r30
 570:	ff 91       	pop	r31
 572:	e5 95       	asr	r30
 574:	ee 1f       	adc	r30, r30
 576:	ff 1f       	adc	r31, r31
 578:	49 f0       	breq	.+18     	; 0x58c <exp+0x4e>
 57a:	fe 57       	subi	r31, 0x7E	; 126
 57c:	e0 68       	ori	r30, 0x80	; 128
 57e:	44 27       	eor	r20, r20
 580:	ee 0f       	add	r30, r30
 582:	44 1f       	adc	r20, r20
 584:	fa 95       	dec	r31
 586:	e1 f7       	brne	.-8      	; 0x580 <exp+0x42>
 588:	41 95       	neg	r20
 58a:	55 0b       	sbc	r21, r21
 58c:	3b d0       	rcall	.+118    	; 0x604 <ldexp>
 58e:	0f 90       	pop	r0
 590:	07 fe       	sbrs	r0, 7
 592:	2f c0       	rjmp	.+94     	; 0x5f2 <inverse>
 594:	08 95       	ret

00000596 <__fp_inf>:
 596:	97 f9       	bld	r25, 7
 598:	9f 67       	ori	r25, 0x7F	; 127
 59a:	80 e8       	ldi	r24, 0x80	; 128
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	60 e0       	ldi	r22, 0x00	; 0
 5a0:	08 95       	ret

000005a2 <__fp_nan>:
 5a2:	9f ef       	ldi	r25, 0xFF	; 255
 5a4:	80 ec       	ldi	r24, 0xC0	; 192
 5a6:	08 95       	ret

000005a8 <__fp_powser>:
 5a8:	df 93       	push	r29
 5aa:	cf 93       	push	r28
 5ac:	1f 93       	push	r17
 5ae:	0f 93       	push	r16
 5b0:	ff 92       	push	r15
 5b2:	ef 92       	push	r14
 5b4:	df 92       	push	r13
 5b6:	7b 01       	movw	r14, r22
 5b8:	8c 01       	movw	r16, r24
 5ba:	68 94       	set
 5bc:	05 c0       	rjmp	.+10     	; 0x5c8 <__fp_powser+0x20>
 5be:	da 2e       	mov	r13, r26
 5c0:	ef 01       	movw	r28, r30
 5c2:	d8 d0       	rcall	.+432    	; 0x774 <__mulsf3x>
 5c4:	fe 01       	movw	r30, r28
 5c6:	e8 94       	clt
 5c8:	a5 91       	lpm	r26, Z+
 5ca:	25 91       	lpm	r18, Z+
 5cc:	35 91       	lpm	r19, Z+
 5ce:	45 91       	lpm	r20, Z+
 5d0:	55 91       	lpm	r21, Z+
 5d2:	ae f3       	brts	.-22     	; 0x5be <__fp_powser+0x16>
 5d4:	ef 01       	movw	r28, r30
 5d6:	37 d1       	rcall	.+622    	; 0x846 <__addsf3x>
 5d8:	fe 01       	movw	r30, r28
 5da:	97 01       	movw	r18, r14
 5dc:	a8 01       	movw	r20, r16
 5de:	da 94       	dec	r13
 5e0:	79 f7       	brne	.-34     	; 0x5c0 <__fp_powser+0x18>
 5e2:	df 90       	pop	r13
 5e4:	ef 90       	pop	r14
 5e6:	ff 90       	pop	r15
 5e8:	0f 91       	pop	r16
 5ea:	1f 91       	pop	r17
 5ec:	cf 91       	pop	r28
 5ee:	df 91       	pop	r29
 5f0:	08 95       	ret

000005f2 <inverse>:
 5f2:	9b 01       	movw	r18, r22
 5f4:	ac 01       	movw	r20, r24
 5f6:	60 e0       	ldi	r22, 0x00	; 0
 5f8:	70 e0       	ldi	r23, 0x00	; 0
 5fa:	80 e8       	ldi	r24, 0x80	; 128
 5fc:	9f e3       	ldi	r25, 0x3F	; 63
 5fe:	76 c1       	rjmp	.+748    	; 0x8ec <__divsf3>
 600:	ca cf       	rjmp	.-108    	; 0x596 <__fp_inf>
 602:	dc c1       	rjmp	.+952    	; 0x9bc <__fp_mpack>

00000604 <ldexp>:
 604:	2a df       	rcall	.-428    	; 0x45a <__fp_splitA>
 606:	e8 f3       	brcs	.-6      	; 0x602 <inverse+0x10>
 608:	99 23       	and	r25, r25
 60a:	d9 f3       	breq	.-10     	; 0x602 <inverse+0x10>
 60c:	94 0f       	add	r25, r20
 60e:	51 1d       	adc	r21, r1
 610:	bb f3       	brvs	.-18     	; 0x600 <inverse+0xe>
 612:	91 50       	subi	r25, 0x01	; 1
 614:	50 40       	sbci	r21, 0x00	; 0
 616:	94 f0       	brlt	.+36     	; 0x63c <ldexp+0x38>
 618:	59 f0       	breq	.+22     	; 0x630 <ldexp+0x2c>
 61a:	88 23       	and	r24, r24
 61c:	32 f0       	brmi	.+12     	; 0x62a <ldexp+0x26>
 61e:	66 0f       	add	r22, r22
 620:	77 1f       	adc	r23, r23
 622:	88 1f       	adc	r24, r24
 624:	91 50       	subi	r25, 0x01	; 1
 626:	50 40       	sbci	r21, 0x00	; 0
 628:	c1 f7       	brne	.-16     	; 0x61a <ldexp+0x16>
 62a:	9e 3f       	cpi	r25, 0xFE	; 254
 62c:	51 05       	cpc	r21, r1
 62e:	44 f7       	brge	.-48     	; 0x600 <inverse+0xe>
 630:	88 0f       	add	r24, r24
 632:	91 1d       	adc	r25, r1
 634:	96 95       	lsr	r25
 636:	87 95       	ror	r24
 638:	97 f9       	bld	r25, 7
 63a:	08 95       	ret
 63c:	5f 3f       	cpi	r21, 0xFF	; 255
 63e:	ac f0       	brlt	.+42     	; 0x66a <ldexp+0x66>
 640:	98 3e       	cpi	r25, 0xE8	; 232
 642:	9c f0       	brlt	.+38     	; 0x66a <ldexp+0x66>
 644:	bb 27       	eor	r27, r27
 646:	86 95       	lsr	r24
 648:	77 95       	ror	r23
 64a:	67 95       	ror	r22
 64c:	b7 95       	ror	r27
 64e:	08 f4       	brcc	.+2      	; 0x652 <ldexp+0x4e>
 650:	b1 60       	ori	r27, 0x01	; 1
 652:	93 95       	inc	r25
 654:	c1 f7       	brne	.-16     	; 0x646 <ldexp+0x42>
 656:	bb 0f       	add	r27, r27
 658:	58 f7       	brcc	.-42     	; 0x630 <ldexp+0x2c>
 65a:	11 f4       	brne	.+4      	; 0x660 <ldexp+0x5c>
 65c:	60 ff       	sbrs	r22, 0
 65e:	e8 cf       	rjmp	.-48     	; 0x630 <ldexp+0x2c>
 660:	6f 5f       	subi	r22, 0xFF	; 255
 662:	7f 4f       	sbci	r23, 0xFF	; 255
 664:	8f 4f       	sbci	r24, 0xFF	; 255
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	e3 cf       	rjmp	.-58     	; 0x630 <ldexp+0x2c>
 66a:	12 cf       	rjmp	.-476    	; 0x490 <__fp_szero>
 66c:	0e f0       	brts	.+2      	; 0x670 <ldexp+0x6c>
 66e:	a6 c1       	rjmp	.+844    	; 0x9bc <__fp_mpack>
 670:	98 cf       	rjmp	.-208    	; 0x5a2 <__fp_nan>
 672:	68 94       	set
 674:	90 cf       	rjmp	.-224    	; 0x596 <__fp_inf>

00000676 <log>:
 676:	f1 de       	rcall	.-542    	; 0x45a <__fp_splitA>
 678:	c8 f3       	brcs	.-14     	; 0x66c <ldexp+0x68>
 67a:	99 23       	and	r25, r25
 67c:	d1 f3       	breq	.-12     	; 0x672 <ldexp+0x6e>
 67e:	c6 f3       	brts	.-16     	; 0x670 <ldexp+0x6c>
 680:	df 93       	push	r29
 682:	cf 93       	push	r28
 684:	1f 93       	push	r17
 686:	0f 93       	push	r16
 688:	ff 92       	push	r15
 68a:	c9 2f       	mov	r28, r25
 68c:	dd 27       	eor	r29, r29
 68e:	88 23       	and	r24, r24
 690:	2a f0       	brmi	.+10     	; 0x69c <log+0x26>
 692:	21 97       	sbiw	r28, 0x01	; 1
 694:	66 0f       	add	r22, r22
 696:	77 1f       	adc	r23, r23
 698:	88 1f       	adc	r24, r24
 69a:	da f7       	brpl	.-10     	; 0x692 <log+0x1c>
 69c:	20 e0       	ldi	r18, 0x00	; 0
 69e:	30 e0       	ldi	r19, 0x00	; 0
 6a0:	40 e8       	ldi	r20, 0x80	; 128
 6a2:	5f eb       	ldi	r21, 0xBF	; 191
 6a4:	9f e3       	ldi	r25, 0x3F	; 63
 6a6:	88 39       	cpi	r24, 0x98	; 152
 6a8:	20 f0       	brcs	.+8      	; 0x6b2 <log+0x3c>
 6aa:	80 3e       	cpi	r24, 0xE0	; 224
 6ac:	30 f0       	brcs	.+12     	; 0x6ba <log+0x44>
 6ae:	21 96       	adiw	r28, 0x01	; 1
 6b0:	8f 77       	andi	r24, 0x7F	; 127
 6b2:	b8 d0       	rcall	.+368    	; 0x824 <__addsf3>
 6b4:	ec e7       	ldi	r30, 0x7C	; 124
 6b6:	f0 e0       	ldi	r31, 0x00	; 0
 6b8:	03 c0       	rjmp	.+6      	; 0x6c0 <log+0x4a>
 6ba:	b4 d0       	rcall	.+360    	; 0x824 <__addsf3>
 6bc:	e9 ea       	ldi	r30, 0xA9	; 169
 6be:	f0 e0       	ldi	r31, 0x00	; 0
 6c0:	73 df       	rcall	.-282    	; 0x5a8 <__fp_powser>
 6c2:	8b 01       	movw	r16, r22
 6c4:	be 01       	movw	r22, r28
 6c6:	ec 01       	movw	r28, r24
 6c8:	fb 2e       	mov	r15, r27
 6ca:	6f 57       	subi	r22, 0x7F	; 127
 6cc:	71 09       	sbc	r23, r1
 6ce:	75 95       	asr	r23
 6d0:	77 1f       	adc	r23, r23
 6d2:	88 0b       	sbc	r24, r24
 6d4:	99 0b       	sbc	r25, r25
 6d6:	7e de       	rcall	.-772    	; 0x3d4 <__floatsisf>
 6d8:	28 e1       	ldi	r18, 0x18	; 24
 6da:	32 e7       	ldi	r19, 0x72	; 114
 6dc:	41 e3       	ldi	r20, 0x31	; 49
 6de:	5f e3       	ldi	r21, 0x3F	; 63
 6e0:	49 d0       	rcall	.+146    	; 0x774 <__mulsf3x>
 6e2:	af 2d       	mov	r26, r15
 6e4:	98 01       	movw	r18, r16
 6e6:	ae 01       	movw	r20, r28
 6e8:	ff 90       	pop	r15
 6ea:	0f 91       	pop	r16
 6ec:	1f 91       	pop	r17
 6ee:	cf 91       	pop	r28
 6f0:	df 91       	pop	r29
 6f2:	a9 d0       	rcall	.+338    	; 0x846 <__addsf3x>
 6f4:	7f c1       	rjmp	.+766    	; 0x9f4 <__fp_round>

000006f6 <modf>:
 6f6:	fa 01       	movw	r30, r20
 6f8:	dc 01       	movw	r26, r24
 6fa:	aa 0f       	add	r26, r26
 6fc:	bb 1f       	adc	r27, r27
 6fe:	9b 01       	movw	r18, r22
 700:	ac 01       	movw	r20, r24
 702:	bf 57       	subi	r27, 0x7F	; 127
 704:	28 f4       	brcc	.+10     	; 0x710 <modf+0x1a>
 706:	22 27       	eor	r18, r18
 708:	33 27       	eor	r19, r19
 70a:	44 27       	eor	r20, r20
 70c:	50 78       	andi	r21, 0x80	; 128
 70e:	1f c0       	rjmp	.+62     	; 0x74e <modf+0x58>
 710:	b7 51       	subi	r27, 0x17	; 23
 712:	88 f4       	brcc	.+34     	; 0x736 <modf+0x40>
 714:	ab 2f       	mov	r26, r27
 716:	00 24       	eor	r0, r0
 718:	46 95       	lsr	r20
 71a:	37 95       	ror	r19
 71c:	27 95       	ror	r18
 71e:	01 1c       	adc	r0, r1
 720:	a3 95       	inc	r26
 722:	d2 f3       	brmi	.-12     	; 0x718 <modf+0x22>
 724:	00 20       	and	r0, r0
 726:	69 f0       	breq	.+26     	; 0x742 <modf+0x4c>
 728:	22 0f       	add	r18, r18
 72a:	33 1f       	adc	r19, r19
 72c:	44 1f       	adc	r20, r20
 72e:	b3 95       	inc	r27
 730:	da f3       	brmi	.-10     	; 0x728 <modf+0x32>
 732:	0d d0       	rcall	.+26     	; 0x74e <modf+0x58>
 734:	76 c0       	rjmp	.+236    	; 0x822 <__subsf3>
 736:	61 30       	cpi	r22, 0x01	; 1
 738:	71 05       	cpc	r23, r1
 73a:	a0 e8       	ldi	r26, 0x80	; 128
 73c:	8a 07       	cpc	r24, r26
 73e:	b9 46       	sbci	r27, 0x69	; 105
 740:	30 f4       	brcc	.+12     	; 0x74e <modf+0x58>
 742:	9b 01       	movw	r18, r22
 744:	ac 01       	movw	r20, r24
 746:	66 27       	eor	r22, r22
 748:	77 27       	eor	r23, r23
 74a:	88 27       	eor	r24, r24
 74c:	90 78       	andi	r25, 0x80	; 128
 74e:	30 96       	adiw	r30, 0x00	; 0
 750:	21 f0       	breq	.+8      	; 0x75a <modf+0x64>
 752:	20 83       	st	Z, r18
 754:	31 83       	std	Z+1, r19	; 0x01
 756:	42 83       	std	Z+2, r20	; 0x02
 758:	53 83       	std	Z+3, r21	; 0x03
 75a:	08 95       	ret

0000075c <__mulsf3>:
 75c:	0b d0       	rcall	.+22     	; 0x774 <__mulsf3x>
 75e:	4a c1       	rjmp	.+660    	; 0x9f4 <__fp_round>
 760:	3b d1       	rcall	.+630    	; 0x9d8 <__fp_pscA>
 762:	28 f0       	brcs	.+10     	; 0x76e <__mulsf3+0x12>
 764:	40 d1       	rcall	.+640    	; 0x9e6 <__fp_pscB>
 766:	18 f0       	brcs	.+6      	; 0x76e <__mulsf3+0x12>
 768:	95 23       	and	r25, r21
 76a:	09 f0       	breq	.+2      	; 0x76e <__mulsf3+0x12>
 76c:	14 cf       	rjmp	.-472    	; 0x596 <__fp_inf>
 76e:	19 cf       	rjmp	.-462    	; 0x5a2 <__fp_nan>
 770:	11 24       	eor	r1, r1
 772:	8e ce       	rjmp	.-740    	; 0x490 <__fp_szero>

00000774 <__mulsf3x>:
 774:	6a de       	rcall	.-812    	; 0x44a <__fp_split3>
 776:	a0 f3       	brcs	.-24     	; 0x760 <__mulsf3+0x4>

00000778 <__mulsf3_pse>:
 778:	95 9f       	mul	r25, r21
 77a:	d1 f3       	breq	.-12     	; 0x770 <__mulsf3+0x14>
 77c:	95 0f       	add	r25, r21
 77e:	50 e0       	ldi	r21, 0x00	; 0
 780:	55 1f       	adc	r21, r21
 782:	62 9f       	mul	r22, r18
 784:	f0 01       	movw	r30, r0
 786:	72 9f       	mul	r23, r18
 788:	bb 27       	eor	r27, r27
 78a:	f0 0d       	add	r31, r0
 78c:	b1 1d       	adc	r27, r1
 78e:	63 9f       	mul	r22, r19
 790:	aa 27       	eor	r26, r26
 792:	f0 0d       	add	r31, r0
 794:	b1 1d       	adc	r27, r1
 796:	aa 1f       	adc	r26, r26
 798:	64 9f       	mul	r22, r20
 79a:	66 27       	eor	r22, r22
 79c:	b0 0d       	add	r27, r0
 79e:	a1 1d       	adc	r26, r1
 7a0:	66 1f       	adc	r22, r22
 7a2:	82 9f       	mul	r24, r18
 7a4:	22 27       	eor	r18, r18
 7a6:	b0 0d       	add	r27, r0
 7a8:	a1 1d       	adc	r26, r1
 7aa:	62 1f       	adc	r22, r18
 7ac:	73 9f       	mul	r23, r19
 7ae:	b0 0d       	add	r27, r0
 7b0:	a1 1d       	adc	r26, r1
 7b2:	62 1f       	adc	r22, r18
 7b4:	83 9f       	mul	r24, r19
 7b6:	a0 0d       	add	r26, r0
 7b8:	61 1d       	adc	r22, r1
 7ba:	22 1f       	adc	r18, r18
 7bc:	74 9f       	mul	r23, r20
 7be:	33 27       	eor	r19, r19
 7c0:	a0 0d       	add	r26, r0
 7c2:	61 1d       	adc	r22, r1
 7c4:	23 1f       	adc	r18, r19
 7c6:	84 9f       	mul	r24, r20
 7c8:	60 0d       	add	r22, r0
 7ca:	21 1d       	adc	r18, r1
 7cc:	82 2f       	mov	r24, r18
 7ce:	76 2f       	mov	r23, r22
 7d0:	6a 2f       	mov	r22, r26
 7d2:	11 24       	eor	r1, r1
 7d4:	9f 57       	subi	r25, 0x7F	; 127
 7d6:	50 40       	sbci	r21, 0x00	; 0
 7d8:	8a f0       	brmi	.+34     	; 0x7fc <__mulsf3_pse+0x84>
 7da:	e1 f0       	breq	.+56     	; 0x814 <__mulsf3_pse+0x9c>
 7dc:	88 23       	and	r24, r24
 7de:	4a f0       	brmi	.+18     	; 0x7f2 <__mulsf3_pse+0x7a>
 7e0:	ee 0f       	add	r30, r30
 7e2:	ff 1f       	adc	r31, r31
 7e4:	bb 1f       	adc	r27, r27
 7e6:	66 1f       	adc	r22, r22
 7e8:	77 1f       	adc	r23, r23
 7ea:	88 1f       	adc	r24, r24
 7ec:	91 50       	subi	r25, 0x01	; 1
 7ee:	50 40       	sbci	r21, 0x00	; 0
 7f0:	a9 f7       	brne	.-22     	; 0x7dc <__mulsf3_pse+0x64>
 7f2:	9e 3f       	cpi	r25, 0xFE	; 254
 7f4:	51 05       	cpc	r21, r1
 7f6:	70 f0       	brcs	.+28     	; 0x814 <__mulsf3_pse+0x9c>
 7f8:	ce ce       	rjmp	.-612    	; 0x596 <__fp_inf>
 7fa:	4a ce       	rjmp	.-876    	; 0x490 <__fp_szero>
 7fc:	5f 3f       	cpi	r21, 0xFF	; 255
 7fe:	ec f3       	brlt	.-6      	; 0x7fa <__mulsf3_pse+0x82>
 800:	98 3e       	cpi	r25, 0xE8	; 232
 802:	dc f3       	brlt	.-10     	; 0x7fa <__mulsf3_pse+0x82>
 804:	86 95       	lsr	r24
 806:	77 95       	ror	r23
 808:	67 95       	ror	r22
 80a:	b7 95       	ror	r27
 80c:	f7 95       	ror	r31
 80e:	e7 95       	ror	r30
 810:	9f 5f       	subi	r25, 0xFF	; 255
 812:	c1 f7       	brne	.-16     	; 0x804 <__mulsf3_pse+0x8c>
 814:	fe 2b       	or	r31, r30
 816:	88 0f       	add	r24, r24
 818:	91 1d       	adc	r25, r1
 81a:	96 95       	lsr	r25
 81c:	87 95       	ror	r24
 81e:	97 f9       	bld	r25, 7
 820:	08 95       	ret

00000822 <__subsf3>:
 822:	50 58       	subi	r21, 0x80	; 128

00000824 <__addsf3>:
 824:	bb 27       	eor	r27, r27
 826:	aa 27       	eor	r26, r26
 828:	0e d0       	rcall	.+28     	; 0x846 <__addsf3x>
 82a:	e4 c0       	rjmp	.+456    	; 0x9f4 <__fp_round>
 82c:	d5 d0       	rcall	.+426    	; 0x9d8 <__fp_pscA>
 82e:	30 f0       	brcs	.+12     	; 0x83c <__addsf3+0x18>
 830:	da d0       	rcall	.+436    	; 0x9e6 <__fp_pscB>
 832:	20 f0       	brcs	.+8      	; 0x83c <__addsf3+0x18>
 834:	31 f4       	brne	.+12     	; 0x842 <__addsf3+0x1e>
 836:	9f 3f       	cpi	r25, 0xFF	; 255
 838:	11 f4       	brne	.+4      	; 0x83e <__addsf3+0x1a>
 83a:	1e f4       	brtc	.+6      	; 0x842 <__addsf3+0x1e>
 83c:	b2 ce       	rjmp	.-668    	; 0x5a2 <__fp_nan>
 83e:	0e f4       	brtc	.+2      	; 0x842 <__addsf3+0x1e>
 840:	e0 95       	com	r30
 842:	e7 fb       	bst	r30, 7
 844:	a8 ce       	rjmp	.-688    	; 0x596 <__fp_inf>

00000846 <__addsf3x>:
 846:	e9 2f       	mov	r30, r25
 848:	00 de       	rcall	.-1024   	; 0x44a <__fp_split3>
 84a:	80 f3       	brcs	.-32     	; 0x82c <__addsf3+0x8>
 84c:	ba 17       	cp	r27, r26
 84e:	62 07       	cpc	r22, r18
 850:	73 07       	cpc	r23, r19
 852:	84 07       	cpc	r24, r20
 854:	95 07       	cpc	r25, r21
 856:	18 f0       	brcs	.+6      	; 0x85e <__addsf3x+0x18>
 858:	71 f4       	brne	.+28     	; 0x876 <__stack+0x17>
 85a:	9e f5       	brtc	.+102    	; 0x8c2 <__stack+0x63>
 85c:	18 ce       	rjmp	.-976    	; 0x48e <__fp_zero>
 85e:	0e f4       	brtc	.+2      	; 0x862 <__stack+0x3>
 860:	e0 95       	com	r30
 862:	0b 2e       	mov	r0, r27
 864:	ba 2f       	mov	r27, r26
 866:	a0 2d       	mov	r26, r0
 868:	0b 01       	movw	r0, r22
 86a:	b9 01       	movw	r22, r18
 86c:	90 01       	movw	r18, r0
 86e:	0c 01       	movw	r0, r24
 870:	ca 01       	movw	r24, r20
 872:	a0 01       	movw	r20, r0
 874:	11 24       	eor	r1, r1
 876:	ff 27       	eor	r31, r31
 878:	59 1b       	sub	r21, r25
 87a:	99 f0       	breq	.+38     	; 0x8a2 <__stack+0x43>
 87c:	59 3f       	cpi	r21, 0xF9	; 249
 87e:	50 f4       	brcc	.+20     	; 0x894 <__stack+0x35>
 880:	50 3e       	cpi	r21, 0xE0	; 224
 882:	68 f1       	brcs	.+90     	; 0x8de <__stack+0x7f>
 884:	1a 16       	cp	r1, r26
 886:	f0 40       	sbci	r31, 0x00	; 0
 888:	a2 2f       	mov	r26, r18
 88a:	23 2f       	mov	r18, r19
 88c:	34 2f       	mov	r19, r20
 88e:	44 27       	eor	r20, r20
 890:	58 5f       	subi	r21, 0xF8	; 248
 892:	f3 cf       	rjmp	.-26     	; 0x87a <__stack+0x1b>
 894:	46 95       	lsr	r20
 896:	37 95       	ror	r19
 898:	27 95       	ror	r18
 89a:	a7 95       	ror	r26
 89c:	f0 40       	sbci	r31, 0x00	; 0
 89e:	53 95       	inc	r21
 8a0:	c9 f7       	brne	.-14     	; 0x894 <__stack+0x35>
 8a2:	7e f4       	brtc	.+30     	; 0x8c2 <__stack+0x63>
 8a4:	1f 16       	cp	r1, r31
 8a6:	ba 0b       	sbc	r27, r26
 8a8:	62 0b       	sbc	r22, r18
 8aa:	73 0b       	sbc	r23, r19
 8ac:	84 0b       	sbc	r24, r20
 8ae:	ba f0       	brmi	.+46     	; 0x8de <__stack+0x7f>
 8b0:	91 50       	subi	r25, 0x01	; 1
 8b2:	a1 f0       	breq	.+40     	; 0x8dc <__stack+0x7d>
 8b4:	ff 0f       	add	r31, r31
 8b6:	bb 1f       	adc	r27, r27
 8b8:	66 1f       	adc	r22, r22
 8ba:	77 1f       	adc	r23, r23
 8bc:	88 1f       	adc	r24, r24
 8be:	c2 f7       	brpl	.-16     	; 0x8b0 <__stack+0x51>
 8c0:	0e c0       	rjmp	.+28     	; 0x8de <__stack+0x7f>
 8c2:	ba 0f       	add	r27, r26
 8c4:	62 1f       	adc	r22, r18
 8c6:	73 1f       	adc	r23, r19
 8c8:	84 1f       	adc	r24, r20
 8ca:	48 f4       	brcc	.+18     	; 0x8de <__stack+0x7f>
 8cc:	87 95       	ror	r24
 8ce:	77 95       	ror	r23
 8d0:	67 95       	ror	r22
 8d2:	b7 95       	ror	r27
 8d4:	f7 95       	ror	r31
 8d6:	9e 3f       	cpi	r25, 0xFE	; 254
 8d8:	08 f0       	brcs	.+2      	; 0x8dc <__stack+0x7d>
 8da:	b3 cf       	rjmp	.-154    	; 0x842 <__addsf3+0x1e>
 8dc:	93 95       	inc	r25
 8de:	88 0f       	add	r24, r24
 8e0:	08 f0       	brcs	.+2      	; 0x8e4 <__stack+0x85>
 8e2:	99 27       	eor	r25, r25
 8e4:	ee 0f       	add	r30, r30
 8e6:	97 95       	ror	r25
 8e8:	87 95       	ror	r24
 8ea:	08 95       	ret

000008ec <__divsf3>:
 8ec:	0c d0       	rcall	.+24     	; 0x906 <__divsf3x>
 8ee:	82 c0       	rjmp	.+260    	; 0x9f4 <__fp_round>
 8f0:	7a d0       	rcall	.+244    	; 0x9e6 <__fp_pscB>
 8f2:	40 f0       	brcs	.+16     	; 0x904 <__divsf3+0x18>
 8f4:	71 d0       	rcall	.+226    	; 0x9d8 <__fp_pscA>
 8f6:	30 f0       	brcs	.+12     	; 0x904 <__divsf3+0x18>
 8f8:	21 f4       	brne	.+8      	; 0x902 <__divsf3+0x16>
 8fa:	5f 3f       	cpi	r21, 0xFF	; 255
 8fc:	19 f0       	breq	.+6      	; 0x904 <__divsf3+0x18>
 8fe:	4b ce       	rjmp	.-874    	; 0x596 <__fp_inf>
 900:	51 11       	cpse	r21, r1
 902:	c6 cd       	rjmp	.-1140   	; 0x490 <__fp_szero>
 904:	4e ce       	rjmp	.-868    	; 0x5a2 <__fp_nan>

00000906 <__divsf3x>:
 906:	a1 dd       	rcall	.-1214   	; 0x44a <__fp_split3>
 908:	98 f3       	brcs	.-26     	; 0x8f0 <__divsf3+0x4>

0000090a <__divsf3_pse>:
 90a:	99 23       	and	r25, r25
 90c:	c9 f3       	breq	.-14     	; 0x900 <__divsf3+0x14>
 90e:	55 23       	and	r21, r21
 910:	b1 f3       	breq	.-20     	; 0x8fe <__divsf3+0x12>
 912:	95 1b       	sub	r25, r21
 914:	55 0b       	sbc	r21, r21
 916:	bb 27       	eor	r27, r27
 918:	aa 27       	eor	r26, r26
 91a:	62 17       	cp	r22, r18
 91c:	73 07       	cpc	r23, r19
 91e:	84 07       	cpc	r24, r20
 920:	38 f0       	brcs	.+14     	; 0x930 <__divsf3_pse+0x26>
 922:	9f 5f       	subi	r25, 0xFF	; 255
 924:	5f 4f       	sbci	r21, 0xFF	; 255
 926:	22 0f       	add	r18, r18
 928:	33 1f       	adc	r19, r19
 92a:	44 1f       	adc	r20, r20
 92c:	aa 1f       	adc	r26, r26
 92e:	a9 f3       	breq	.-22     	; 0x91a <__divsf3_pse+0x10>
 930:	33 d0       	rcall	.+102    	; 0x998 <__divsf3_pse+0x8e>
 932:	0e 2e       	mov	r0, r30
 934:	3a f0       	brmi	.+14     	; 0x944 <__divsf3_pse+0x3a>
 936:	e0 e8       	ldi	r30, 0x80	; 128
 938:	30 d0       	rcall	.+96     	; 0x99a <__divsf3_pse+0x90>
 93a:	91 50       	subi	r25, 0x01	; 1
 93c:	50 40       	sbci	r21, 0x00	; 0
 93e:	e6 95       	lsr	r30
 940:	00 1c       	adc	r0, r0
 942:	ca f7       	brpl	.-14     	; 0x936 <__divsf3_pse+0x2c>
 944:	29 d0       	rcall	.+82     	; 0x998 <__divsf3_pse+0x8e>
 946:	fe 2f       	mov	r31, r30
 948:	27 d0       	rcall	.+78     	; 0x998 <__divsf3_pse+0x8e>
 94a:	66 0f       	add	r22, r22
 94c:	77 1f       	adc	r23, r23
 94e:	88 1f       	adc	r24, r24
 950:	bb 1f       	adc	r27, r27
 952:	26 17       	cp	r18, r22
 954:	37 07       	cpc	r19, r23
 956:	48 07       	cpc	r20, r24
 958:	ab 07       	cpc	r26, r27
 95a:	b0 e8       	ldi	r27, 0x80	; 128
 95c:	09 f0       	breq	.+2      	; 0x960 <__divsf3_pse+0x56>
 95e:	bb 0b       	sbc	r27, r27
 960:	80 2d       	mov	r24, r0
 962:	bf 01       	movw	r22, r30
 964:	ff 27       	eor	r31, r31
 966:	93 58       	subi	r25, 0x83	; 131
 968:	5f 4f       	sbci	r21, 0xFF	; 255
 96a:	2a f0       	brmi	.+10     	; 0x976 <__divsf3_pse+0x6c>
 96c:	9e 3f       	cpi	r25, 0xFE	; 254
 96e:	51 05       	cpc	r21, r1
 970:	68 f0       	brcs	.+26     	; 0x98c <__divsf3_pse+0x82>
 972:	11 ce       	rjmp	.-990    	; 0x596 <__fp_inf>
 974:	8d cd       	rjmp	.-1254   	; 0x490 <__fp_szero>
 976:	5f 3f       	cpi	r21, 0xFF	; 255
 978:	ec f3       	brlt	.-6      	; 0x974 <__divsf3_pse+0x6a>
 97a:	98 3e       	cpi	r25, 0xE8	; 232
 97c:	dc f3       	brlt	.-10     	; 0x974 <__divsf3_pse+0x6a>
 97e:	86 95       	lsr	r24
 980:	77 95       	ror	r23
 982:	67 95       	ror	r22
 984:	b7 95       	ror	r27
 986:	f7 95       	ror	r31
 988:	9f 5f       	subi	r25, 0xFF	; 255
 98a:	c9 f7       	brne	.-14     	; 0x97e <__divsf3_pse+0x74>
 98c:	88 0f       	add	r24, r24
 98e:	91 1d       	adc	r25, r1
 990:	96 95       	lsr	r25
 992:	87 95       	ror	r24
 994:	97 f9       	bld	r25, 7
 996:	08 95       	ret
 998:	e1 e0       	ldi	r30, 0x01	; 1
 99a:	66 0f       	add	r22, r22
 99c:	77 1f       	adc	r23, r23
 99e:	88 1f       	adc	r24, r24
 9a0:	bb 1f       	adc	r27, r27
 9a2:	62 17       	cp	r22, r18
 9a4:	73 07       	cpc	r23, r19
 9a6:	84 07       	cpc	r24, r20
 9a8:	ba 07       	cpc	r27, r26
 9aa:	20 f0       	brcs	.+8      	; 0x9b4 <__divsf3_pse+0xaa>
 9ac:	62 1b       	sub	r22, r18
 9ae:	73 0b       	sbc	r23, r19
 9b0:	84 0b       	sbc	r24, r20
 9b2:	ba 0b       	sbc	r27, r26
 9b4:	ee 1f       	adc	r30, r30
 9b6:	88 f7       	brcc	.-30     	; 0x99a <__divsf3_pse+0x90>
 9b8:	e0 95       	com	r30
 9ba:	08 95       	ret

000009bc <__fp_mpack>:
 9bc:	9f 3f       	cpi	r25, 0xFF	; 255
 9be:	31 f0       	breq	.+12     	; 0x9cc <__fp_mpack_finite+0xc>

000009c0 <__fp_mpack_finite>:
 9c0:	91 50       	subi	r25, 0x01	; 1
 9c2:	20 f4       	brcc	.+8      	; 0x9cc <__fp_mpack_finite+0xc>
 9c4:	87 95       	ror	r24
 9c6:	77 95       	ror	r23
 9c8:	67 95       	ror	r22
 9ca:	b7 95       	ror	r27
 9cc:	88 0f       	add	r24, r24
 9ce:	91 1d       	adc	r25, r1
 9d0:	96 95       	lsr	r25
 9d2:	87 95       	ror	r24
 9d4:	97 f9       	bld	r25, 7
 9d6:	08 95       	ret

000009d8 <__fp_pscA>:
 9d8:	00 24       	eor	r0, r0
 9da:	0a 94       	dec	r0
 9dc:	16 16       	cp	r1, r22
 9de:	17 06       	cpc	r1, r23
 9e0:	18 06       	cpc	r1, r24
 9e2:	09 06       	cpc	r0, r25
 9e4:	08 95       	ret

000009e6 <__fp_pscB>:
 9e6:	00 24       	eor	r0, r0
 9e8:	0a 94       	dec	r0
 9ea:	12 16       	cp	r1, r18
 9ec:	13 06       	cpc	r1, r19
 9ee:	14 06       	cpc	r1, r20
 9f0:	05 06       	cpc	r0, r21
 9f2:	08 95       	ret

000009f4 <__fp_round>:
 9f4:	09 2e       	mov	r0, r25
 9f6:	03 94       	inc	r0
 9f8:	00 0c       	add	r0, r0
 9fa:	11 f4       	brne	.+4      	; 0xa00 <__fp_round+0xc>
 9fc:	88 23       	and	r24, r24
 9fe:	52 f0       	brmi	.+20     	; 0xa14 <__fp_round+0x20>
 a00:	bb 0f       	add	r27, r27
 a02:	40 f4       	brcc	.+16     	; 0xa14 <__fp_round+0x20>
 a04:	bf 2b       	or	r27, r31
 a06:	11 f4       	brne	.+4      	; 0xa0c <__fp_round+0x18>
 a08:	60 ff       	sbrs	r22, 0
 a0a:	04 c0       	rjmp	.+8      	; 0xa14 <__fp_round+0x20>
 a0c:	6f 5f       	subi	r22, 0xFF	; 255
 a0e:	7f 4f       	sbci	r23, 0xFF	; 255
 a10:	8f 4f       	sbci	r24, 0xFF	; 255
 a12:	9f 4f       	sbci	r25, 0xFF	; 255
 a14:	08 95       	ret

00000a16 <__udivmodhi4>:
 a16:	aa 1b       	sub	r26, r26
 a18:	bb 1b       	sub	r27, r27
 a1a:	51 e1       	ldi	r21, 0x11	; 17
 a1c:	07 c0       	rjmp	.+14     	; 0xa2c <__udivmodhi4_ep>

00000a1e <__udivmodhi4_loop>:
 a1e:	aa 1f       	adc	r26, r26
 a20:	bb 1f       	adc	r27, r27
 a22:	a6 17       	cp	r26, r22
 a24:	b7 07       	cpc	r27, r23
 a26:	10 f0       	brcs	.+4      	; 0xa2c <__udivmodhi4_ep>
 a28:	a6 1b       	sub	r26, r22
 a2a:	b7 0b       	sbc	r27, r23

00000a2c <__udivmodhi4_ep>:
 a2c:	88 1f       	adc	r24, r24
 a2e:	99 1f       	adc	r25, r25
 a30:	5a 95       	dec	r21
 a32:	a9 f7       	brne	.-22     	; 0xa1e <__udivmodhi4_loop>
 a34:	80 95       	com	r24
 a36:	90 95       	com	r25
 a38:	bc 01       	movw	r22, r24
 a3a:	cd 01       	movw	r24, r26
 a3c:	08 95       	ret

00000a3e <__divmodhi4>:
 a3e:	97 fb       	bst	r25, 7
 a40:	09 2e       	mov	r0, r25
 a42:	07 26       	eor	r0, r23
 a44:	0a d0       	rcall	.+20     	; 0xa5a <__divmodhi4_neg1>
 a46:	77 fd       	sbrc	r23, 7
 a48:	04 d0       	rcall	.+8      	; 0xa52 <__divmodhi4_neg2>
 a4a:	e5 df       	rcall	.-54     	; 0xa16 <__udivmodhi4>
 a4c:	06 d0       	rcall	.+12     	; 0xa5a <__divmodhi4_neg1>
 a4e:	00 20       	and	r0, r0
 a50:	1a f4       	brpl	.+6      	; 0xa58 <__divmodhi4_exit>

00000a52 <__divmodhi4_neg2>:
 a52:	70 95       	com	r23
 a54:	61 95       	neg	r22
 a56:	7f 4f       	sbci	r23, 0xFF	; 255

00000a58 <__divmodhi4_exit>:
 a58:	08 95       	ret

00000a5a <__divmodhi4_neg1>:
 a5a:	f6 f7       	brtc	.-4      	; 0xa58 <__divmodhi4_exit>
 a5c:	90 95       	com	r25
 a5e:	81 95       	neg	r24
 a60:	9f 4f       	sbci	r25, 0xFF	; 255
 a62:	08 95       	ret

00000a64 <_exit>:
 a64:	f8 94       	cli

00000a66 <__stop_program>:
 a66:	ff cf       	rjmp	.-2      	; 0xa66 <__stop_program>
