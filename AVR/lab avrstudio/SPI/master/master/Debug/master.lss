
master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b18  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000b18  00000b8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000033e4  00000000  00000000  00000b94  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000abd  00000000  00000000  00003f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000040  00000000  00000000  00004a35  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000100  00000000  00000000  00004a75  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000004de  00000000  00000000  00004b75  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000275  00000000  00000000  00005053  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000068d  00000000  00000000  000052c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00005958  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001cc  00000000  00000000  00005a58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000233  00000000  00000000  00005c24  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000063  00000000  00000000  00005e57  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  10:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  14:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  18:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  1c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  20:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  24:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  28:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  2c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  30:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  34:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  38:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  3c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  40:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  44:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  48:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  4c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  50:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__stack+0x71>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e8 e1       	ldi	r30, 0x18	; 24
  ea:	fb e0       	ldi	r31, 0x0B	; 11
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	a6 36       	cpi	r26, 0x66	; 102
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>
  f8:	0e 94 a2 00 	call	0x144	; 0x144 <main>
  fc:	0c 94 8a 05 	jmp	0xb14	; 0xb14 <_exit>

00000100 <__bad_interrupt>:
 100:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000104 <init_master>:
#define PORT_SPI_MASTER     PORTB

volatile unsigned int da_ta[3]={5,40,70};
// initailization modes for master 
void init_master(void){
	DDR_SPI_MASTER|=(1<<SCK_MASTER)|(1<<MOSI_MASTER);
 104:	87 b3       	in	r24, 0x17	; 23
 106:	80 6a       	ori	r24, 0xA0	; 160
 108:	87 bb       	out	0x17, r24	; 23
	PORT_SPI_MASTER|=(1<<MISO_MASTER);
 10a:	c6 9a       	sbi	0x18, 6	; 24
	
	SPCR=(1<<SPIE)|(1<<SPE)|(1<<MSTR)|(1<<CPHA)|(1<<SPR1)|(1<<SPR0);
 10c:	87 ed       	ldi	r24, 0xD7	; 215
 10e:	8d b9       	out	0x0d, r24	; 13
	
	DDR_MASTER|=(1<<sl_2)|(1<<sl_1)|(1<<sl_0);
 110:	87 b3       	in	r24, 0x17	; 23
 112:	87 60       	ori	r24, 0x07	; 7
 114:	87 bb       	out	0x17, r24	; 23
	PORT_MASTER|=(1<<sl_2)|(1<<sl_1)|(1<<sl_0);
 116:	88 b3       	in	r24, 0x18	; 24
 118:	87 60       	ori	r24, 0x07	; 7
 11a:	88 bb       	out	0x18, r24	; 24
}
 11c:	08 95       	ret

0000011e <MASTER_trans>:

//transmit data to chip slave
void MASTER_trans(unsigned int chip_slave_selected,unsigned int data){
	clearbit(PORT_MASTER,chip_slave_selected);
 11e:	98 b3       	in	r25, 0x18	; 24
 120:	21 e0       	ldi	r18, 0x01	; 1
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <MASTER_trans+0xc>
 126:	22 0f       	add	r18, r18
 128:	33 1f       	adc	r19, r19
 12a:	8a 95       	dec	r24
 12c:	e2 f7       	brpl	.-8      	; 0x126 <MASTER_trans+0x8>
 12e:	82 2f       	mov	r24, r18
 130:	80 95       	com	r24
 132:	98 23       	and	r25, r24
 134:	98 bb       	out	0x18, r25	; 24
	SPDR=data;
 136:	6f b9       	out	0x0f, r22	; 15
	while(bit_is_clear(SPSR,SPIF)){};
 138:	77 9b       	sbis	0x0e, 7	; 14
 13a:	fe cf       	rjmp	.-4      	; 0x138 <MASTER_trans+0x1a>
	setbit(PORT_MASTER,chip_slave_selected);	
 13c:	88 b3       	in	r24, 0x18	; 24
 13e:	28 2b       	or	r18, r24
 140:	28 bb       	out	0x18, r18	; 24
} 
 142:	08 95       	ret

00000144 <main>:

int main(){
 144:	8f 92       	push	r8
 146:	9f 92       	push	r9
 148:	af 92       	push	r10
 14a:	bf 92       	push	r11
 14c:	cf 92       	push	r12
 14e:	df 92       	push	r13
 150:	ef 92       	push	r14
 152:	ff 92       	push	r15
 154:	0f 93       	push	r16
 156:	1f 93       	push	r17
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
	init_master();
 15c:	0e 94 82 00 	call	0x104	; 0x104 <init_master>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 160:	87 ea       	ldi	r24, 0xA7	; 167
 162:	91 e6       	ldi	r25, 0x61	; 97
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <main+0x20>
 168:	00 c0       	rjmp	.+0      	; 0x16a <main+0x26>
 16a:	00 00       	nop
	_delay_ms(100);
	while(1){
		MASTER_trans(0,da_ta[0]++);
 16c:	c0 e6       	ldi	r28, 0x60	; 96
 16e:	d0 e0       	ldi	r29, 0x00	; 0
		if(da_ta[0]==40) da_ta[0]=5;
 170:	0f 2e       	mov	r0, r31
 172:	f5 e0       	ldi	r31, 0x05	; 5
 174:	cf 2e       	mov	r12, r31
 176:	dd 24       	eor	r13, r13
 178:	f0 2d       	mov	r31, r0
		//_delay_ms(10);
		
		MASTER_trans(1,da_ta[1]++);
 17a:	02 e6       	ldi	r16, 0x62	; 98
 17c:	10 e0       	ldi	r17, 0x00	; 0
		if(da_ta[1]==70) da_ta[1]=40;
 17e:	0f 2e       	mov	r0, r31
 180:	f8 e2       	ldi	r31, 0x28	; 40
 182:	af 2e       	mov	r10, r31
 184:	bb 24       	eor	r11, r11
 186:	f0 2d       	mov	r31, r0
		//_delay_ms(10);
		
		MASTER_trans(2,da_ta[2]++);
 188:	0f 2e       	mov	r0, r31
 18a:	f4 e6       	ldi	r31, 0x64	; 100
 18c:	ef 2e       	mov	r14, r31
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	ff 2e       	mov	r15, r31
 192:	f0 2d       	mov	r31, r0
		if(da_ta[2]==99) da_ta[2]=70;
 194:	0f 2e       	mov	r0, r31
 196:	f6 e4       	ldi	r31, 0x46	; 70
 198:	8f 2e       	mov	r8, r31
 19a:	99 24       	eor	r9, r9
 19c:	f0 2d       	mov	r31, r0

int main(){
	init_master();
	_delay_ms(100);
	while(1){
		MASTER_trans(0,da_ta[0]++);
 19e:	68 81       	ld	r22, Y
 1a0:	79 81       	ldd	r23, Y+1	; 0x01
 1a2:	cb 01       	movw	r24, r22
 1a4:	01 96       	adiw	r24, 0x01	; 1
 1a6:	99 83       	std	Y+1, r25	; 0x01
 1a8:	88 83       	st	Y, r24
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	0e 94 8f 00 	call	0x11e	; 0x11e <MASTER_trans>
		if(da_ta[0]==40) da_ta[0]=5;
 1b2:	88 81       	ld	r24, Y
 1b4:	99 81       	ldd	r25, Y+1	; 0x01
 1b6:	88 32       	cpi	r24, 0x28	; 40
 1b8:	91 05       	cpc	r25, r1
 1ba:	11 f4       	brne	.+4      	; 0x1c0 <main+0x7c>
 1bc:	d9 82       	std	Y+1, r13	; 0x01
 1be:	c8 82       	st	Y, r12
		//_delay_ms(10);
		
		MASTER_trans(1,da_ta[1]++);
 1c0:	d8 01       	movw	r26, r16
 1c2:	6d 91       	ld	r22, X+
 1c4:	7c 91       	ld	r23, X
 1c6:	11 97       	sbiw	r26, 0x01	; 1
 1c8:	cb 01       	movw	r24, r22
 1ca:	01 96       	adiw	r24, 0x01	; 1
 1cc:	11 96       	adiw	r26, 0x01	; 1
 1ce:	9c 93       	st	X, r25
 1d0:	8e 93       	st	-X, r24
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 8f 00 	call	0x11e	; 0x11e <MASTER_trans>
		if(da_ta[1]==70) da_ta[1]=40;
 1da:	f8 01       	movw	r30, r16
 1dc:	80 81       	ld	r24, Z
 1de:	91 81       	ldd	r25, Z+1	; 0x01
 1e0:	86 34       	cpi	r24, 0x46	; 70
 1e2:	91 05       	cpc	r25, r1
 1e4:	11 f4       	brne	.+4      	; 0x1ea <main+0xa6>
 1e6:	b1 82       	std	Z+1, r11	; 0x01
 1e8:	a0 82       	st	Z, r10
		//_delay_ms(10);
		
		MASTER_trans(2,da_ta[2]++);
 1ea:	d7 01       	movw	r26, r14
 1ec:	6d 91       	ld	r22, X+
 1ee:	7c 91       	ld	r23, X
 1f0:	11 97       	sbiw	r26, 0x01	; 1
 1f2:	cb 01       	movw	r24, r22
 1f4:	01 96       	adiw	r24, 0x01	; 1
 1f6:	11 96       	adiw	r26, 0x01	; 1
 1f8:	9c 93       	st	X, r25
 1fa:	8e 93       	st	-X, r24
 1fc:	82 e0       	ldi	r24, 0x02	; 2
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	0e 94 8f 00 	call	0x11e	; 0x11e <MASTER_trans>
		if(da_ta[2]==99) da_ta[2]=70;
 204:	f7 01       	movw	r30, r14
 206:	80 81       	ld	r24, Z
 208:	91 81       	ldd	r25, Z+1	; 0x01
 20a:	83 36       	cpi	r24, 0x63	; 99
 20c:	91 05       	cpc	r25, r1
 20e:	11 f4       	brne	.+4      	; 0x214 <main+0xd0>
 210:	91 82       	std	Z+1, r9	; 0x01
 212:	80 82       	st	Z, r8
 214:	8f e9       	ldi	r24, 0x9F	; 159
 216:	96 e8       	ldi	r25, 0x86	; 134
 218:	a1 e0       	ldi	r26, 0x01	; 1
 21a:	81 50       	subi	r24, 0x01	; 1
 21c:	90 40       	sbci	r25, 0x00	; 0
 21e:	a0 40       	sbci	r26, 0x00	; 0
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0xd6>
 222:	00 c0       	rjmp	.+0      	; 0x224 <main+0xe0>
 224:	00 00       	nop
 226:	bb cf       	rjmp	.-138    	; 0x19e <main+0x5a>

00000228 <read_2Nib>:


char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
 228:	90 9a       	sbi	0x12, 0	; 18
	DDR_DATA=0x0F;
 22a:	8f e0       	ldi	r24, 0x0F	; 15
 22c:	81 bb       	out	0x11, r24	; 17
	HNib=DATA_input&0xF0;
 22e:	80 b3       	in	r24, 0x10	; 16
	clearbit(CTRL,EN);
 230:	90 98       	cbi	0x12, 0	; 18
	
	setbit(CTRL,EN);
 232:	90 9a       	sbi	0x12, 0	; 18
	LNib=DATA_input&0xF0;
 234:	90 b3       	in	r25, 0x10	; 16
	clearbit(CTRL,EN);
 236:	90 98       	cbi	0x12, 0	; 18
	LNib>>=4;
 238:	92 95       	swap	r25
 23a:	9f 70       	andi	r25, 0x0F	; 15
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
	DDR_DATA=0x0F;
	HNib=DATA_input&0xF0;
 23c:	80 7f       	andi	r24, 0xF0	; 240
	LNib=DATA_input&0xF0;
	clearbit(CTRL,EN);
	LNib>>=4;
	
	return (HNib|LNib);
}
 23e:	89 2b       	or	r24, r25
 240:	08 95       	ret

00000242 <write_2Nib>:
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
 242:	92 b3       	in	r25, 0x12	; 18
 244:	9f 70       	andi	r25, 0x0F	; 15
	HNib=data&0xF0;
 246:	28 2f       	mov	r18, r24
 248:	20 7f       	andi	r18, 0xF0	; 240
	LNib=(data<<4)&0xF0;
	
	DATA_output=HNib|temp;
 24a:	29 2b       	or	r18, r25
 24c:	22 bb       	out	0x12, r18	; 18
	setbit(CTRL,EN);
 24e:	90 9a       	sbi	0x12, 0	; 18
	clearbit(CTRL,EN);
 250:	90 98       	cbi	0x12, 0	; 18
}
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
	HNib=data&0xF0;
	LNib=(data<<4)&0xF0;
 252:	82 95       	swap	r24
 254:	80 7f       	andi	r24, 0xF0	; 240
	
	DATA_output=HNib|temp;
	setbit(CTRL,EN);
	clearbit(CTRL,EN);
	
	DATA_output=LNib|temp;
 256:	98 2b       	or	r25, r24
 258:	92 bb       	out	0x12, r25	; 18
	setbit(CTRL,EN);
 25a:	90 9a       	sbi	0x12, 0	; 18
	clearbit(CTRL,EN);
 25c:	90 98       	cbi	0x12, 0	; 18
	
}
 25e:	08 95       	ret

00000260 <wait_lcd>:
void wait_lcd(void){
 260:	0f 93       	push	r16
 262:	1f 93       	push	r17
 264:	df 93       	push	r29
 266:	cf 93       	push	r28
 268:	0f 92       	push	r0
 26a:	cd b7       	in	r28, 0x3d	; 61
 26c:	de b7       	in	r29, 0x3e	; 62
	while(1){
     	clearbit(CTRL,RS);
		setbit(CTRL,RW);
		temp=read_2Nib();
		
		if(bit_is_clear(temp,7)) break;
 26e:	8e 01       	movw	r16, r28
 270:	0f 5f       	subi	r16, 0xFF	; 255
 272:	1f 4f       	sbci	r17, 0xFF	; 255
}
void wait_lcd(void){
	unsigned char temp;
	
	while(1){
     	clearbit(CTRL,RS);
 274:	92 98       	cbi	0x12, 2	; 18
		setbit(CTRL,RW);
 276:	91 9a       	sbi	0x12, 1	; 18
		temp=read_2Nib();
 278:	0e 94 14 01 	call	0x228	; 0x228 <read_2Nib>
 27c:	89 83       	std	Y+1, r24	; 0x01
		
		if(bit_is_clear(temp,7)) break;
 27e:	f8 01       	movw	r30, r16
 280:	80 81       	ld	r24, Z
 282:	88 23       	and	r24, r24
 284:	bc f3       	brlt	.-18     	; 0x274 <wait_lcd+0x14>
	}
	clearbit(CTRL,RW);
 286:	91 98       	cbi	0x12, 1	; 18
	DDR_DATA=0xFF;
 288:	8f ef       	ldi	r24, 0xFF	; 255
 28a:	81 bb       	out	0x11, r24	; 17
	
}
 28c:	0f 90       	pop	r0
 28e:	cf 91       	pop	r28
 290:	df 91       	pop	r29
 292:	1f 91       	pop	r17
 294:	0f 91       	pop	r16
 296:	08 95       	ret

00000298 <init_lcd>:
//uses mode 4 bit
void init_lcd(void){
	DDR_CTRL=0xFF;
 298:	8f ef       	ldi	r24, 0xFF	; 255
 29a:	81 bb       	out	0x11, r24	; 17
	DDR_DATA=0xFF;
 29c:	81 bb       	out	0x11, r24	; 17
	clearbit(CTRL,RS);
 29e:	92 98       	cbi	0x12, 2	; 18
	clearbit(CTRL,RW);
 2a0:	91 98       	cbi	0x12, 1	; 18
	clearbit(CTRL,EN);
 2a2:	90 98       	cbi	0x12, 0	; 18
	
//function set	
	setbit(CTRL,EN);
 2a4:	90 9a       	sbi	0x12, 0	; 18
	setbit(DATA_output,5);
 2a6:	95 9a       	sbi	0x12, 5	; 18
	clearbit(CTRL,EN);
 2a8:	90 98       	cbi	0x12, 0	; 18
	wait_lcd();
 2aa:	0e 94 30 01 	call	0x260	; 0x260 <wait_lcd>
	write_2Nib(0x28);
 2ae:	88 e2       	ldi	r24, 0x28	; 40
 2b0:	0e 94 21 01 	call	0x242	; 0x242 <write_2Nib>
	wait_lcd();
 2b4:	0e 94 30 01 	call	0x260	; 0x260 <wait_lcd>
//display on/off control
    write_2Nib(0x0E);
 2b8:	8e e0       	ldi	r24, 0x0E	; 14
 2ba:	0e 94 21 01 	call	0x242	; 0x242 <write_2Nib>
	wait_lcd();
 2be:	0e 94 30 01 	call	0x260	; 0x260 <wait_lcd>

//entry mode set 
    
    write_2Nib(0x06);
 2c2:	86 e0       	ldi	r24, 0x06	; 6
 2c4:	0e 94 21 01 	call	0x242	; 0x242 <write_2Nib>
    wait_lcd();		
 2c8:	0e 94 30 01 	call	0x260	; 0x260 <wait_lcd>
}
 2cc:	08 95       	ret

000002ce <putchar_lcd>:
void putchar_lcd(unsigned char data){
	
	setbit(CTRL,RS);
 2ce:	92 9a       	sbi	0x12, 2	; 18
	write_2Nib(data);
 2d0:	0e 94 21 01 	call	0x242	; 0x242 <write_2Nib>
	wait_lcd();
 2d4:	0e 94 30 01 	call	0x260	; 0x260 <wait_lcd>
}
 2d8:	08 95       	ret

000002da <cursor_home>:
void cursor_home(){
	clearbit(CTRL,RS);
 2da:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x03);
 2dc:	83 e0       	ldi	r24, 0x03	; 3
 2de:	0e 94 21 01 	call	0x242	; 0x242 <write_2Nib>
	wait_lcd();
 2e2:	0e 94 30 01 	call	0x260	; 0x260 <wait_lcd>
}
 2e6:	08 95       	ret

000002e8 <clear_lcd>:
void clear_lcd(){
	clearbit(CTRL,RS);
 2e8:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x01);
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	0e 94 21 01 	call	0x242	; 0x242 <write_2Nib>
	wait_lcd();
 2f0:	0e 94 30 01 	call	0x260	; 0x260 <wait_lcd>
}
 2f4:	08 95       	ret

000002f6 <movecursor>:
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
	clearbit(CTRL,RS);
 2f6:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x01);
	wait_lcd();
}
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
 2f8:	82 95       	swap	r24
 2fa:	88 0f       	add	r24, r24
 2fc:	88 0f       	add	r24, r24
 2fe:	80 7c       	andi	r24, 0xC0	; 192
 300:	86 0f       	add	r24, r22
	clearbit(CTRL,RS);
	write_2Nib(x);
 302:	81 5c       	subi	r24, 0xC1	; 193
 304:	0e 94 21 01 	call	0x242	; 0x242 <write_2Nib>
	wait_lcd();
 308:	0e 94 30 01 	call	0x260	; 0x260 <wait_lcd>
}
 30c:	08 95       	ret

0000030e <count_number>:
int count_number(unsigned int number){
 30e:	bc 01       	movw	r22, r24
	int dem=0;
	while(number){
 310:	00 97       	sbiw	r24, 0x00	; 0
 312:	71 f0       	breq	.+28     	; 0x330 <count_number+0x22>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 314:	20 e0       	ldi	r18, 0x00	; 0
 316:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
 318:	ea e0       	ldi	r30, 0x0A	; 10
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	cb 01       	movw	r24, r22
 31e:	bf 01       	movw	r22, r30
 320:	0e 94 63 05 	call	0xac6	; 0xac6 <__udivmodhi4>
		dem++;
 324:	2f 5f       	subi	r18, 0xFF	; 255
 326:	3f 4f       	sbci	r19, 0xFF	; 255
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
	while(number){
 328:	61 15       	cp	r22, r1
 32a:	71 05       	cpc	r23, r1
 32c:	b9 f7       	brne	.-18     	; 0x31c <count_number+0xe>
 32e:	02 c0       	rjmp	.+4      	; 0x334 <count_number+0x26>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
		dem++;
	}
	return dem;
}
 334:	82 2f       	mov	r24, r18
 336:	93 2f       	mov	r25, r19
 338:	08 95       	ret

0000033a <printnumber_lcd>:
void printnumber_lcd(unsigned int number){
 33a:	af 92       	push	r10
 33c:	bf 92       	push	r11
 33e:	cf 92       	push	r12
 340:	df 92       	push	r13
 342:	ef 92       	push	r14
 344:	ff 92       	push	r15
 346:	0f 93       	push	r16
 348:	1f 93       	push	r17
 34a:	cf 93       	push	r28
 34c:	df 93       	push	r29
 34e:	e8 2e       	mov	r14, r24
 350:	f9 2e       	mov	r15, r25
	int a,n,i,temp;
	n= count_number(number);
 352:	0e 94 87 01 	call	0x30e	; 0x30e <count_number>
 356:	6c 01       	movw	r12, r24
	temp=pow(10,n-1);
 358:	bc 01       	movw	r22, r24
 35a:	61 50       	subi	r22, 0x01	; 1
 35c:	70 40       	sbci	r23, 0x00	; 0
 35e:	88 27       	eor	r24, r24
 360:	77 fd       	sbrc	r23, 7
 362:	80 95       	com	r24
 364:	98 2f       	mov	r25, r24
 366:	0e 94 42 02 	call	0x484	; 0x484 <__floatsisf>
 36a:	9b 01       	movw	r18, r22
 36c:	ac 01       	movw	r20, r24
 36e:	60 e0       	ldi	r22, 0x00	; 0
 370:	70 e0       	ldi	r23, 0x00	; 0
 372:	80 e2       	ldi	r24, 0x20	; 32
 374:	91 e4       	ldi	r25, 0x41	; 65
 376:	0e 94 a6 02 	call	0x54c	; 0x54c <pow>
	for(i=0;i<n;i++){
 37a:	1c 14       	cp	r1, r12
 37c:	1d 04       	cpc	r1, r13
 37e:	04 f5       	brge	.+64     	; 0x3c0 <printnumber_lcd+0x86>
	return dem;
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
 380:	0e 94 0f 02 	call	0x41e	; 0x41e <__fixsfsi>
 384:	eb 01       	movw	r28, r22
	for(i=0;i<n;i++){
 386:	00 e0       	ldi	r16, 0x00	; 0
 388:	10 e0       	ldi	r17, 0x00	; 0
		a=number/temp;
		number=number%temp;
		temp=temp/10;
 38a:	0f 2e       	mov	r0, r31
 38c:	fa e0       	ldi	r31, 0x0A	; 10
 38e:	af 2e       	mov	r10, r31
 390:	bb 24       	eor	r11, r11
 392:	f0 2d       	mov	r31, r0
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
		a=number/temp;
 394:	8e 2d       	mov	r24, r14
 396:	9f 2d       	mov	r25, r15
 398:	be 01       	movw	r22, r28
 39a:	0e 94 63 05 	call	0xac6	; 0xac6 <__udivmodhi4>
 39e:	26 2f       	mov	r18, r22
		number=number%temp;
 3a0:	e8 2e       	mov	r14, r24
 3a2:	f9 2e       	mov	r15, r25
		temp=temp/10;
 3a4:	ce 01       	movw	r24, r28
 3a6:	b5 01       	movw	r22, r10
 3a8:	0e 94 77 05 	call	0xaee	; 0xaee <__divmodhi4>
 3ac:	eb 01       	movw	r28, r22
		putchar_lcd(a+48);
 3ae:	82 2f       	mov	r24, r18
 3b0:	80 5d       	subi	r24, 0xD0	; 208
 3b2:	0e 94 67 01 	call	0x2ce	; 0x2ce <putchar_lcd>
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
 3b6:	0f 5f       	subi	r16, 0xFF	; 255
 3b8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ba:	0c 15       	cp	r16, r12
 3bc:	1d 05       	cpc	r17, r13
 3be:	54 f3       	brlt	.-44     	; 0x394 <printnumber_lcd+0x5a>
		a=number/temp;
		number=number%temp;
		temp=temp/10;
		putchar_lcd(a+48);
	}
}
 3c0:	df 91       	pop	r29
 3c2:	cf 91       	pop	r28
 3c4:	1f 91       	pop	r17
 3c6:	0f 91       	pop	r16
 3c8:	ff 90       	pop	r15
 3ca:	ef 90       	pop	r14
 3cc:	df 90       	pop	r13
 3ce:	cf 90       	pop	r12
 3d0:	bf 90       	pop	r11
 3d2:	af 90       	pop	r10
 3d4:	08 95       	ret

000003d6 <putstr_lcd>:
putstr_lcd(unsigned char *str, unsigned int lenght){
 3d6:	ef 92       	push	r14
 3d8:	ff 92       	push	r15
 3da:	0f 93       	push	r16
 3dc:	1f 93       	push	r17
 3de:	cf 93       	push	r28
 3e0:	df 93       	push	r29
 3e2:	7b 01       	movw	r14, r22
	unsigned int i;
	for(i=0;i<lenght;i++){
 3e4:	61 15       	cp	r22, r1
 3e6:	71 05       	cpc	r23, r1
 3e8:	99 f0       	breq	.+38     	; 0x410 <putstr_lcd+0x3a>
 3ea:	08 2f       	mov	r16, r24
 3ec:	19 2f       	mov	r17, r25
 3ee:	c0 e0       	ldi	r28, 0x00	; 0
 3f0:	d0 e0       	ldi	r29, 0x00	; 0
		if(*(str+i)>0){ 
 3f2:	f8 01       	movw	r30, r16
 3f4:	81 91       	ld	r24, Z+
 3f6:	8f 01       	movw	r16, r30
 3f8:	88 23       	and	r24, r24
 3fa:	19 f0       	breq	.+6      	; 0x402 <putstr_lcd+0x2c>
			putchar_lcd(*(str+i));
 3fc:	0e 94 67 01 	call	0x2ce	; 0x2ce <putchar_lcd>
 400:	03 c0       	rjmp	.+6      	; 0x408 <putstr_lcd+0x32>
			}
		else putchar_lcd(0);	
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	0e 94 67 01 	call	0x2ce	; 0x2ce <putchar_lcd>
		putchar_lcd(a+48);
	}
}
putstr_lcd(unsigned char *str, unsigned int lenght){
	unsigned int i;
	for(i=0;i<lenght;i++){
 408:	21 96       	adiw	r28, 0x01	; 1
 40a:	ce 15       	cp	r28, r14
 40c:	df 05       	cpc	r29, r15
 40e:	88 f3       	brcs	.-30     	; 0x3f2 <putstr_lcd+0x1c>
		if(*(str+i)>0){ 
			putchar_lcd(*(str+i));
			}
		else putchar_lcd(0);	
}
}
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	1f 91       	pop	r17
 416:	0f 91       	pop	r16
 418:	ff 90       	pop	r15
 41a:	ef 90       	pop	r14
 41c:	08 95       	ret

0000041e <__fixsfsi>:
 41e:	04 d0       	rcall	.+8      	; 0x428 <__fixunssfsi>
 420:	68 94       	set
 422:	b1 11       	cpse	r27, r1
 424:	8d c0       	rjmp	.+282    	; 0x540 <__fp_szero>
 426:	08 95       	ret

00000428 <__fixunssfsi>:
 428:	70 d0       	rcall	.+224    	; 0x50a <__fp_splitA>
 42a:	88 f0       	brcs	.+34     	; 0x44e <__fixunssfsi+0x26>
 42c:	9f 57       	subi	r25, 0x7F	; 127
 42e:	90 f0       	brcs	.+36     	; 0x454 <__fixunssfsi+0x2c>
 430:	b9 2f       	mov	r27, r25
 432:	99 27       	eor	r25, r25
 434:	b7 51       	subi	r27, 0x17	; 23
 436:	a0 f0       	brcs	.+40     	; 0x460 <__fixunssfsi+0x38>
 438:	d1 f0       	breq	.+52     	; 0x46e <__fixunssfsi+0x46>
 43a:	66 0f       	add	r22, r22
 43c:	77 1f       	adc	r23, r23
 43e:	88 1f       	adc	r24, r24
 440:	99 1f       	adc	r25, r25
 442:	1a f0       	brmi	.+6      	; 0x44a <__fixunssfsi+0x22>
 444:	ba 95       	dec	r27
 446:	c9 f7       	brne	.-14     	; 0x43a <__fixunssfsi+0x12>
 448:	12 c0       	rjmp	.+36     	; 0x46e <__fixunssfsi+0x46>
 44a:	b1 30       	cpi	r27, 0x01	; 1
 44c:	81 f0       	breq	.+32     	; 0x46e <__fixunssfsi+0x46>
 44e:	77 d0       	rcall	.+238    	; 0x53e <__fp_zero>
 450:	b1 e0       	ldi	r27, 0x01	; 1
 452:	08 95       	ret
 454:	74 c0       	rjmp	.+232    	; 0x53e <__fp_zero>
 456:	67 2f       	mov	r22, r23
 458:	78 2f       	mov	r23, r24
 45a:	88 27       	eor	r24, r24
 45c:	b8 5f       	subi	r27, 0xF8	; 248
 45e:	39 f0       	breq	.+14     	; 0x46e <__fixunssfsi+0x46>
 460:	b9 3f       	cpi	r27, 0xF9	; 249
 462:	cc f3       	brlt	.-14     	; 0x456 <__fixunssfsi+0x2e>
 464:	86 95       	lsr	r24
 466:	77 95       	ror	r23
 468:	67 95       	ror	r22
 46a:	b3 95       	inc	r27
 46c:	d9 f7       	brne	.-10     	; 0x464 <__fixunssfsi+0x3c>
 46e:	3e f4       	brtc	.+14     	; 0x47e <__fixunssfsi+0x56>
 470:	90 95       	com	r25
 472:	80 95       	com	r24
 474:	70 95       	com	r23
 476:	61 95       	neg	r22
 478:	7f 4f       	sbci	r23, 0xFF	; 255
 47a:	8f 4f       	sbci	r24, 0xFF	; 255
 47c:	9f 4f       	sbci	r25, 0xFF	; 255
 47e:	08 95       	ret

00000480 <__floatunsisf>:
 480:	e8 94       	clt
 482:	09 c0       	rjmp	.+18     	; 0x496 <__floatsisf+0x12>

00000484 <__floatsisf>:
 484:	97 fb       	bst	r25, 7
 486:	3e f4       	brtc	.+14     	; 0x496 <__floatsisf+0x12>
 488:	90 95       	com	r25
 48a:	80 95       	com	r24
 48c:	70 95       	com	r23
 48e:	61 95       	neg	r22
 490:	7f 4f       	sbci	r23, 0xFF	; 255
 492:	8f 4f       	sbci	r24, 0xFF	; 255
 494:	9f 4f       	sbci	r25, 0xFF	; 255
 496:	99 23       	and	r25, r25
 498:	a9 f0       	breq	.+42     	; 0x4c4 <__floatsisf+0x40>
 49a:	f9 2f       	mov	r31, r25
 49c:	96 e9       	ldi	r25, 0x96	; 150
 49e:	bb 27       	eor	r27, r27
 4a0:	93 95       	inc	r25
 4a2:	f6 95       	lsr	r31
 4a4:	87 95       	ror	r24
 4a6:	77 95       	ror	r23
 4a8:	67 95       	ror	r22
 4aa:	b7 95       	ror	r27
 4ac:	f1 11       	cpse	r31, r1
 4ae:	f8 cf       	rjmp	.-16     	; 0x4a0 <__floatsisf+0x1c>
 4b0:	fa f4       	brpl	.+62     	; 0x4f0 <__floatsisf+0x6c>
 4b2:	bb 0f       	add	r27, r27
 4b4:	11 f4       	brne	.+4      	; 0x4ba <__floatsisf+0x36>
 4b6:	60 ff       	sbrs	r22, 0
 4b8:	1b c0       	rjmp	.+54     	; 0x4f0 <__floatsisf+0x6c>
 4ba:	6f 5f       	subi	r22, 0xFF	; 255
 4bc:	7f 4f       	sbci	r23, 0xFF	; 255
 4be:	8f 4f       	sbci	r24, 0xFF	; 255
 4c0:	9f 4f       	sbci	r25, 0xFF	; 255
 4c2:	16 c0       	rjmp	.+44     	; 0x4f0 <__floatsisf+0x6c>
 4c4:	88 23       	and	r24, r24
 4c6:	11 f0       	breq	.+4      	; 0x4cc <__floatsisf+0x48>
 4c8:	96 e9       	ldi	r25, 0x96	; 150
 4ca:	11 c0       	rjmp	.+34     	; 0x4ee <__floatsisf+0x6a>
 4cc:	77 23       	and	r23, r23
 4ce:	21 f0       	breq	.+8      	; 0x4d8 <__floatsisf+0x54>
 4d0:	9e e8       	ldi	r25, 0x8E	; 142
 4d2:	87 2f       	mov	r24, r23
 4d4:	76 2f       	mov	r23, r22
 4d6:	05 c0       	rjmp	.+10     	; 0x4e2 <__floatsisf+0x5e>
 4d8:	66 23       	and	r22, r22
 4da:	71 f0       	breq	.+28     	; 0x4f8 <__floatsisf+0x74>
 4dc:	96 e8       	ldi	r25, 0x86	; 134
 4de:	86 2f       	mov	r24, r22
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	60 e0       	ldi	r22, 0x00	; 0
 4e4:	2a f0       	brmi	.+10     	; 0x4f0 <__floatsisf+0x6c>
 4e6:	9a 95       	dec	r25
 4e8:	66 0f       	add	r22, r22
 4ea:	77 1f       	adc	r23, r23
 4ec:	88 1f       	adc	r24, r24
 4ee:	da f7       	brpl	.-10     	; 0x4e6 <__floatsisf+0x62>
 4f0:	88 0f       	add	r24, r24
 4f2:	96 95       	lsr	r25
 4f4:	87 95       	ror	r24
 4f6:	97 f9       	bld	r25, 7
 4f8:	08 95       	ret

000004fa <__fp_split3>:
 4fa:	57 fd       	sbrc	r21, 7
 4fc:	90 58       	subi	r25, 0x80	; 128
 4fe:	44 0f       	add	r20, r20
 500:	55 1f       	adc	r21, r21
 502:	59 f0       	breq	.+22     	; 0x51a <__fp_splitA+0x10>
 504:	5f 3f       	cpi	r21, 0xFF	; 255
 506:	71 f0       	breq	.+28     	; 0x524 <__fp_splitA+0x1a>
 508:	47 95       	ror	r20

0000050a <__fp_splitA>:
 50a:	88 0f       	add	r24, r24
 50c:	97 fb       	bst	r25, 7
 50e:	99 1f       	adc	r25, r25
 510:	61 f0       	breq	.+24     	; 0x52a <__fp_splitA+0x20>
 512:	9f 3f       	cpi	r25, 0xFF	; 255
 514:	79 f0       	breq	.+30     	; 0x534 <__fp_splitA+0x2a>
 516:	87 95       	ror	r24
 518:	08 95       	ret
 51a:	12 16       	cp	r1, r18
 51c:	13 06       	cpc	r1, r19
 51e:	14 06       	cpc	r1, r20
 520:	55 1f       	adc	r21, r21
 522:	f2 cf       	rjmp	.-28     	; 0x508 <__fp_split3+0xe>
 524:	46 95       	lsr	r20
 526:	f1 df       	rcall	.-30     	; 0x50a <__fp_splitA>
 528:	08 c0       	rjmp	.+16     	; 0x53a <__fp_splitA+0x30>
 52a:	16 16       	cp	r1, r22
 52c:	17 06       	cpc	r1, r23
 52e:	18 06       	cpc	r1, r24
 530:	99 1f       	adc	r25, r25
 532:	f1 cf       	rjmp	.-30     	; 0x516 <__fp_splitA+0xc>
 534:	86 95       	lsr	r24
 536:	71 05       	cpc	r23, r1
 538:	61 05       	cpc	r22, r1
 53a:	08 94       	sec
 53c:	08 95       	ret

0000053e <__fp_zero>:
 53e:	e8 94       	clt

00000540 <__fp_szero>:
 540:	bb 27       	eor	r27, r27
 542:	66 27       	eor	r22, r22
 544:	77 27       	eor	r23, r23
 546:	cb 01       	movw	r24, r22
 548:	97 f9       	bld	r25, 7
 54a:	08 95       	ret

0000054c <pow>:
 54c:	fa 01       	movw	r30, r20
 54e:	ee 0f       	add	r30, r30
 550:	ff 1f       	adc	r31, r31
 552:	30 96       	adiw	r30, 0x00	; 0
 554:	21 05       	cpc	r18, r1
 556:	31 05       	cpc	r19, r1
 558:	99 f1       	breq	.+102    	; 0x5c0 <pow+0x74>
 55a:	61 15       	cp	r22, r1
 55c:	71 05       	cpc	r23, r1
 55e:	61 f4       	brne	.+24     	; 0x578 <pow+0x2c>
 560:	80 38       	cpi	r24, 0x80	; 128
 562:	bf e3       	ldi	r27, 0x3F	; 63
 564:	9b 07       	cpc	r25, r27
 566:	49 f1       	breq	.+82     	; 0x5ba <pow+0x6e>
 568:	68 94       	set
 56a:	90 38       	cpi	r25, 0x80	; 128
 56c:	81 05       	cpc	r24, r1
 56e:	61 f0       	breq	.+24     	; 0x588 <pow+0x3c>
 570:	80 38       	cpi	r24, 0x80	; 128
 572:	bf ef       	ldi	r27, 0xFF	; 255
 574:	9b 07       	cpc	r25, r27
 576:	41 f0       	breq	.+16     	; 0x588 <pow+0x3c>
 578:	99 23       	and	r25, r25
 57a:	42 f5       	brpl	.+80     	; 0x5cc <pow+0x80>
 57c:	ff 3f       	cpi	r31, 0xFF	; 255
 57e:	e1 05       	cpc	r30, r1
 580:	31 05       	cpc	r19, r1
 582:	21 05       	cpc	r18, r1
 584:	11 f1       	breq	.+68     	; 0x5ca <pow+0x7e>
 586:	e8 94       	clt
 588:	08 94       	sec
 58a:	e7 95       	ror	r30
 58c:	d9 01       	movw	r26, r18
 58e:	aa 23       	and	r26, r26
 590:	29 f4       	brne	.+10     	; 0x59c <pow+0x50>
 592:	ab 2f       	mov	r26, r27
 594:	be 2f       	mov	r27, r30
 596:	f8 5f       	subi	r31, 0xF8	; 248
 598:	d0 f3       	brcs	.-12     	; 0x58e <pow+0x42>
 59a:	10 c0       	rjmp	.+32     	; 0x5bc <pow+0x70>
 59c:	ff 5f       	subi	r31, 0xFF	; 255
 59e:	70 f4       	brcc	.+28     	; 0x5bc <pow+0x70>
 5a0:	a6 95       	lsr	r26
 5a2:	e0 f7       	brcc	.-8      	; 0x59c <pow+0x50>
 5a4:	f7 39       	cpi	r31, 0x97	; 151
 5a6:	50 f0       	brcs	.+20     	; 0x5bc <pow+0x70>
 5a8:	19 f0       	breq	.+6      	; 0x5b0 <pow+0x64>
 5aa:	ff 3a       	cpi	r31, 0xAF	; 175
 5ac:	38 f4       	brcc	.+14     	; 0x5bc <pow+0x70>
 5ae:	9f 77       	andi	r25, 0x7F	; 127
 5b0:	9f 93       	push	r25
 5b2:	0c d0       	rcall	.+24     	; 0x5cc <pow+0x80>
 5b4:	0f 90       	pop	r0
 5b6:	07 fc       	sbrc	r0, 7
 5b8:	90 58       	subi	r25, 0x80	; 128
 5ba:	08 95       	ret
 5bc:	3e f0       	brts	.+14     	; 0x5cc <pow+0x80>
 5be:	49 c0       	rjmp	.+146    	; 0x652 <__fp_nan>
 5c0:	60 e0       	ldi	r22, 0x00	; 0
 5c2:	70 e0       	ldi	r23, 0x00	; 0
 5c4:	80 e8       	ldi	r24, 0x80	; 128
 5c6:	9f e3       	ldi	r25, 0x3F	; 63
 5c8:	08 95       	ret
 5ca:	4f e7       	ldi	r20, 0x7F	; 127
 5cc:	9f 77       	andi	r25, 0x7F	; 127
 5ce:	5f 93       	push	r21
 5d0:	4f 93       	push	r20
 5d2:	3f 93       	push	r19
 5d4:	2f 93       	push	r18
 5d6:	a7 d0       	rcall	.+334    	; 0x726 <log>
 5d8:	2f 91       	pop	r18
 5da:	3f 91       	pop	r19
 5dc:	4f 91       	pop	r20
 5de:	5f 91       	pop	r21
 5e0:	15 d1       	rcall	.+554    	; 0x80c <__mulsf3>
 5e2:	05 c0       	rjmp	.+10     	; 0x5ee <exp>
 5e4:	19 f4       	brne	.+6      	; 0x5ec <pow+0xa0>
 5e6:	0e f0       	brts	.+2      	; 0x5ea <pow+0x9e>
 5e8:	2e c0       	rjmp	.+92     	; 0x646 <__fp_inf>
 5ea:	a9 cf       	rjmp	.-174    	; 0x53e <__fp_zero>
 5ec:	32 c0       	rjmp	.+100    	; 0x652 <__fp_nan>

000005ee <exp>:
 5ee:	8d df       	rcall	.-230    	; 0x50a <__fp_splitA>
 5f0:	c8 f3       	brcs	.-14     	; 0x5e4 <pow+0x98>
 5f2:	96 38       	cpi	r25, 0x86	; 134
 5f4:	c0 f7       	brcc	.-16     	; 0x5e6 <pow+0x9a>
 5f6:	07 f8       	bld	r0, 7
 5f8:	0f 92       	push	r0
 5fa:	e8 94       	clt
 5fc:	2b e3       	ldi	r18, 0x3B	; 59
 5fe:	3a ea       	ldi	r19, 0xAA	; 170
 600:	48 eb       	ldi	r20, 0xB8	; 184
 602:	5f e7       	ldi	r21, 0x7F	; 127
 604:	11 d1       	rcall	.+546    	; 0x828 <__mulsf3_pse>
 606:	0f 92       	push	r0
 608:	0f 92       	push	r0
 60a:	0f 92       	push	r0
 60c:	4d b7       	in	r20, 0x3d	; 61
 60e:	5e b7       	in	r21, 0x3e	; 62
 610:	0f 92       	push	r0
 612:	c9 d0       	rcall	.+402    	; 0x7a6 <modf>
 614:	e4 e5       	ldi	r30, 0x54	; 84
 616:	f0 e0       	ldi	r31, 0x00	; 0
 618:	1f d0       	rcall	.+62     	; 0x658 <__fp_powser>
 61a:	4f 91       	pop	r20
 61c:	5f 91       	pop	r21
 61e:	ef 91       	pop	r30
 620:	ff 91       	pop	r31
 622:	e5 95       	asr	r30
 624:	ee 1f       	adc	r30, r30
 626:	ff 1f       	adc	r31, r31
 628:	49 f0       	breq	.+18     	; 0x63c <exp+0x4e>
 62a:	fe 57       	subi	r31, 0x7E	; 126
 62c:	e0 68       	ori	r30, 0x80	; 128
 62e:	44 27       	eor	r20, r20
 630:	ee 0f       	add	r30, r30
 632:	44 1f       	adc	r20, r20
 634:	fa 95       	dec	r31
 636:	e1 f7       	brne	.-8      	; 0x630 <exp+0x42>
 638:	41 95       	neg	r20
 63a:	55 0b       	sbc	r21, r21
 63c:	3b d0       	rcall	.+118    	; 0x6b4 <ldexp>
 63e:	0f 90       	pop	r0
 640:	07 fe       	sbrs	r0, 7
 642:	2f c0       	rjmp	.+94     	; 0x6a2 <inverse>
 644:	08 95       	ret

00000646 <__fp_inf>:
 646:	97 f9       	bld	r25, 7
 648:	9f 67       	ori	r25, 0x7F	; 127
 64a:	80 e8       	ldi	r24, 0x80	; 128
 64c:	70 e0       	ldi	r23, 0x00	; 0
 64e:	60 e0       	ldi	r22, 0x00	; 0
 650:	08 95       	ret

00000652 <__fp_nan>:
 652:	9f ef       	ldi	r25, 0xFF	; 255
 654:	80 ec       	ldi	r24, 0xC0	; 192
 656:	08 95       	ret

00000658 <__fp_powser>:
 658:	df 93       	push	r29
 65a:	cf 93       	push	r28
 65c:	1f 93       	push	r17
 65e:	0f 93       	push	r16
 660:	ff 92       	push	r15
 662:	ef 92       	push	r14
 664:	df 92       	push	r13
 666:	7b 01       	movw	r14, r22
 668:	8c 01       	movw	r16, r24
 66a:	68 94       	set
 66c:	05 c0       	rjmp	.+10     	; 0x678 <__fp_powser+0x20>
 66e:	da 2e       	mov	r13, r26
 670:	ef 01       	movw	r28, r30
 672:	d8 d0       	rcall	.+432    	; 0x824 <__mulsf3x>
 674:	fe 01       	movw	r30, r28
 676:	e8 94       	clt
 678:	a5 91       	lpm	r26, Z+
 67a:	25 91       	lpm	r18, Z+
 67c:	35 91       	lpm	r19, Z+
 67e:	45 91       	lpm	r20, Z+
 680:	55 91       	lpm	r21, Z+
 682:	ae f3       	brts	.-22     	; 0x66e <__fp_powser+0x16>
 684:	ef 01       	movw	r28, r30
 686:	37 d1       	rcall	.+622    	; 0x8f6 <__addsf3x>
 688:	fe 01       	movw	r30, r28
 68a:	97 01       	movw	r18, r14
 68c:	a8 01       	movw	r20, r16
 68e:	da 94       	dec	r13
 690:	79 f7       	brne	.-34     	; 0x670 <__fp_powser+0x18>
 692:	df 90       	pop	r13
 694:	ef 90       	pop	r14
 696:	ff 90       	pop	r15
 698:	0f 91       	pop	r16
 69a:	1f 91       	pop	r17
 69c:	cf 91       	pop	r28
 69e:	df 91       	pop	r29
 6a0:	08 95       	ret

000006a2 <inverse>:
 6a2:	9b 01       	movw	r18, r22
 6a4:	ac 01       	movw	r20, r24
 6a6:	60 e0       	ldi	r22, 0x00	; 0
 6a8:	70 e0       	ldi	r23, 0x00	; 0
 6aa:	80 e8       	ldi	r24, 0x80	; 128
 6ac:	9f e3       	ldi	r25, 0x3F	; 63
 6ae:	76 c1       	rjmp	.+748    	; 0x99c <__divsf3>
 6b0:	ca cf       	rjmp	.-108    	; 0x646 <__fp_inf>
 6b2:	dc c1       	rjmp	.+952    	; 0xa6c <__fp_mpack>

000006b4 <ldexp>:
 6b4:	2a df       	rcall	.-428    	; 0x50a <__fp_splitA>
 6b6:	e8 f3       	brcs	.-6      	; 0x6b2 <inverse+0x10>
 6b8:	99 23       	and	r25, r25
 6ba:	d9 f3       	breq	.-10     	; 0x6b2 <inverse+0x10>
 6bc:	94 0f       	add	r25, r20
 6be:	51 1d       	adc	r21, r1
 6c0:	bb f3       	brvs	.-18     	; 0x6b0 <inverse+0xe>
 6c2:	91 50       	subi	r25, 0x01	; 1
 6c4:	50 40       	sbci	r21, 0x00	; 0
 6c6:	94 f0       	brlt	.+36     	; 0x6ec <ldexp+0x38>
 6c8:	59 f0       	breq	.+22     	; 0x6e0 <ldexp+0x2c>
 6ca:	88 23       	and	r24, r24
 6cc:	32 f0       	brmi	.+12     	; 0x6da <ldexp+0x26>
 6ce:	66 0f       	add	r22, r22
 6d0:	77 1f       	adc	r23, r23
 6d2:	88 1f       	adc	r24, r24
 6d4:	91 50       	subi	r25, 0x01	; 1
 6d6:	50 40       	sbci	r21, 0x00	; 0
 6d8:	c1 f7       	brne	.-16     	; 0x6ca <ldexp+0x16>
 6da:	9e 3f       	cpi	r25, 0xFE	; 254
 6dc:	51 05       	cpc	r21, r1
 6de:	44 f7       	brge	.-48     	; 0x6b0 <inverse+0xe>
 6e0:	88 0f       	add	r24, r24
 6e2:	91 1d       	adc	r25, r1
 6e4:	96 95       	lsr	r25
 6e6:	87 95       	ror	r24
 6e8:	97 f9       	bld	r25, 7
 6ea:	08 95       	ret
 6ec:	5f 3f       	cpi	r21, 0xFF	; 255
 6ee:	ac f0       	brlt	.+42     	; 0x71a <ldexp+0x66>
 6f0:	98 3e       	cpi	r25, 0xE8	; 232
 6f2:	9c f0       	brlt	.+38     	; 0x71a <ldexp+0x66>
 6f4:	bb 27       	eor	r27, r27
 6f6:	86 95       	lsr	r24
 6f8:	77 95       	ror	r23
 6fa:	67 95       	ror	r22
 6fc:	b7 95       	ror	r27
 6fe:	08 f4       	brcc	.+2      	; 0x702 <ldexp+0x4e>
 700:	b1 60       	ori	r27, 0x01	; 1
 702:	93 95       	inc	r25
 704:	c1 f7       	brne	.-16     	; 0x6f6 <ldexp+0x42>
 706:	bb 0f       	add	r27, r27
 708:	58 f7       	brcc	.-42     	; 0x6e0 <ldexp+0x2c>
 70a:	11 f4       	brne	.+4      	; 0x710 <ldexp+0x5c>
 70c:	60 ff       	sbrs	r22, 0
 70e:	e8 cf       	rjmp	.-48     	; 0x6e0 <ldexp+0x2c>
 710:	6f 5f       	subi	r22, 0xFF	; 255
 712:	7f 4f       	sbci	r23, 0xFF	; 255
 714:	8f 4f       	sbci	r24, 0xFF	; 255
 716:	9f 4f       	sbci	r25, 0xFF	; 255
 718:	e3 cf       	rjmp	.-58     	; 0x6e0 <ldexp+0x2c>
 71a:	12 cf       	rjmp	.-476    	; 0x540 <__fp_szero>
 71c:	0e f0       	brts	.+2      	; 0x720 <ldexp+0x6c>
 71e:	a6 c1       	rjmp	.+844    	; 0xa6c <__fp_mpack>
 720:	98 cf       	rjmp	.-208    	; 0x652 <__fp_nan>
 722:	68 94       	set
 724:	90 cf       	rjmp	.-224    	; 0x646 <__fp_inf>

00000726 <log>:
 726:	f1 de       	rcall	.-542    	; 0x50a <__fp_splitA>
 728:	c8 f3       	brcs	.-14     	; 0x71c <ldexp+0x68>
 72a:	99 23       	and	r25, r25
 72c:	d1 f3       	breq	.-12     	; 0x722 <ldexp+0x6e>
 72e:	c6 f3       	brts	.-16     	; 0x720 <ldexp+0x6c>
 730:	df 93       	push	r29
 732:	cf 93       	push	r28
 734:	1f 93       	push	r17
 736:	0f 93       	push	r16
 738:	ff 92       	push	r15
 73a:	c9 2f       	mov	r28, r25
 73c:	dd 27       	eor	r29, r29
 73e:	88 23       	and	r24, r24
 740:	2a f0       	brmi	.+10     	; 0x74c <log+0x26>
 742:	21 97       	sbiw	r28, 0x01	; 1
 744:	66 0f       	add	r22, r22
 746:	77 1f       	adc	r23, r23
 748:	88 1f       	adc	r24, r24
 74a:	da f7       	brpl	.-10     	; 0x742 <log+0x1c>
 74c:	20 e0       	ldi	r18, 0x00	; 0
 74e:	30 e0       	ldi	r19, 0x00	; 0
 750:	40 e8       	ldi	r20, 0x80	; 128
 752:	5f eb       	ldi	r21, 0xBF	; 191
 754:	9f e3       	ldi	r25, 0x3F	; 63
 756:	88 39       	cpi	r24, 0x98	; 152
 758:	20 f0       	brcs	.+8      	; 0x762 <log+0x3c>
 75a:	80 3e       	cpi	r24, 0xE0	; 224
 75c:	30 f0       	brcs	.+12     	; 0x76a <log+0x44>
 75e:	21 96       	adiw	r28, 0x01	; 1
 760:	8f 77       	andi	r24, 0x7F	; 127
 762:	b8 d0       	rcall	.+368    	; 0x8d4 <__addsf3>
 764:	ec e7       	ldi	r30, 0x7C	; 124
 766:	f0 e0       	ldi	r31, 0x00	; 0
 768:	03 c0       	rjmp	.+6      	; 0x770 <log+0x4a>
 76a:	b4 d0       	rcall	.+360    	; 0x8d4 <__addsf3>
 76c:	e9 ea       	ldi	r30, 0xA9	; 169
 76e:	f0 e0       	ldi	r31, 0x00	; 0
 770:	73 df       	rcall	.-282    	; 0x658 <__fp_powser>
 772:	8b 01       	movw	r16, r22
 774:	be 01       	movw	r22, r28
 776:	ec 01       	movw	r28, r24
 778:	fb 2e       	mov	r15, r27
 77a:	6f 57       	subi	r22, 0x7F	; 127
 77c:	71 09       	sbc	r23, r1
 77e:	75 95       	asr	r23
 780:	77 1f       	adc	r23, r23
 782:	88 0b       	sbc	r24, r24
 784:	99 0b       	sbc	r25, r25
 786:	7e de       	rcall	.-772    	; 0x484 <__floatsisf>
 788:	28 e1       	ldi	r18, 0x18	; 24
 78a:	32 e7       	ldi	r19, 0x72	; 114
 78c:	41 e3       	ldi	r20, 0x31	; 49
 78e:	5f e3       	ldi	r21, 0x3F	; 63
 790:	49 d0       	rcall	.+146    	; 0x824 <__mulsf3x>
 792:	af 2d       	mov	r26, r15
 794:	98 01       	movw	r18, r16
 796:	ae 01       	movw	r20, r28
 798:	ff 90       	pop	r15
 79a:	0f 91       	pop	r16
 79c:	1f 91       	pop	r17
 79e:	cf 91       	pop	r28
 7a0:	df 91       	pop	r29
 7a2:	a9 d0       	rcall	.+338    	; 0x8f6 <__addsf3x>
 7a4:	7f c1       	rjmp	.+766    	; 0xaa4 <__fp_round>

000007a6 <modf>:
 7a6:	fa 01       	movw	r30, r20
 7a8:	dc 01       	movw	r26, r24
 7aa:	aa 0f       	add	r26, r26
 7ac:	bb 1f       	adc	r27, r27
 7ae:	9b 01       	movw	r18, r22
 7b0:	ac 01       	movw	r20, r24
 7b2:	bf 57       	subi	r27, 0x7F	; 127
 7b4:	28 f4       	brcc	.+10     	; 0x7c0 <modf+0x1a>
 7b6:	22 27       	eor	r18, r18
 7b8:	33 27       	eor	r19, r19
 7ba:	44 27       	eor	r20, r20
 7bc:	50 78       	andi	r21, 0x80	; 128
 7be:	1f c0       	rjmp	.+62     	; 0x7fe <modf+0x58>
 7c0:	b7 51       	subi	r27, 0x17	; 23
 7c2:	88 f4       	brcc	.+34     	; 0x7e6 <modf+0x40>
 7c4:	ab 2f       	mov	r26, r27
 7c6:	00 24       	eor	r0, r0
 7c8:	46 95       	lsr	r20
 7ca:	37 95       	ror	r19
 7cc:	27 95       	ror	r18
 7ce:	01 1c       	adc	r0, r1
 7d0:	a3 95       	inc	r26
 7d2:	d2 f3       	brmi	.-12     	; 0x7c8 <modf+0x22>
 7d4:	00 20       	and	r0, r0
 7d6:	69 f0       	breq	.+26     	; 0x7f2 <modf+0x4c>
 7d8:	22 0f       	add	r18, r18
 7da:	33 1f       	adc	r19, r19
 7dc:	44 1f       	adc	r20, r20
 7de:	b3 95       	inc	r27
 7e0:	da f3       	brmi	.-10     	; 0x7d8 <modf+0x32>
 7e2:	0d d0       	rcall	.+26     	; 0x7fe <modf+0x58>
 7e4:	76 c0       	rjmp	.+236    	; 0x8d2 <__subsf3>
 7e6:	61 30       	cpi	r22, 0x01	; 1
 7e8:	71 05       	cpc	r23, r1
 7ea:	a0 e8       	ldi	r26, 0x80	; 128
 7ec:	8a 07       	cpc	r24, r26
 7ee:	b9 46       	sbci	r27, 0x69	; 105
 7f0:	30 f4       	brcc	.+12     	; 0x7fe <modf+0x58>
 7f2:	9b 01       	movw	r18, r22
 7f4:	ac 01       	movw	r20, r24
 7f6:	66 27       	eor	r22, r22
 7f8:	77 27       	eor	r23, r23
 7fa:	88 27       	eor	r24, r24
 7fc:	90 78       	andi	r25, 0x80	; 128
 7fe:	30 96       	adiw	r30, 0x00	; 0
 800:	21 f0       	breq	.+8      	; 0x80a <modf+0x64>
 802:	20 83       	st	Z, r18
 804:	31 83       	std	Z+1, r19	; 0x01
 806:	42 83       	std	Z+2, r20	; 0x02
 808:	53 83       	std	Z+3, r21	; 0x03
 80a:	08 95       	ret

0000080c <__mulsf3>:
 80c:	0b d0       	rcall	.+22     	; 0x824 <__mulsf3x>
 80e:	4a c1       	rjmp	.+660    	; 0xaa4 <__fp_round>
 810:	3b d1       	rcall	.+630    	; 0xa88 <__fp_pscA>
 812:	28 f0       	brcs	.+10     	; 0x81e <__mulsf3+0x12>
 814:	40 d1       	rcall	.+640    	; 0xa96 <__fp_pscB>
 816:	18 f0       	brcs	.+6      	; 0x81e <__mulsf3+0x12>
 818:	95 23       	and	r25, r21
 81a:	09 f0       	breq	.+2      	; 0x81e <__mulsf3+0x12>
 81c:	14 cf       	rjmp	.-472    	; 0x646 <__fp_inf>
 81e:	19 cf       	rjmp	.-462    	; 0x652 <__fp_nan>
 820:	11 24       	eor	r1, r1
 822:	8e ce       	rjmp	.-740    	; 0x540 <__fp_szero>

00000824 <__mulsf3x>:
 824:	6a de       	rcall	.-812    	; 0x4fa <__fp_split3>
 826:	a0 f3       	brcs	.-24     	; 0x810 <__mulsf3+0x4>

00000828 <__mulsf3_pse>:
 828:	95 9f       	mul	r25, r21
 82a:	d1 f3       	breq	.-12     	; 0x820 <__mulsf3+0x14>
 82c:	95 0f       	add	r25, r21
 82e:	50 e0       	ldi	r21, 0x00	; 0
 830:	55 1f       	adc	r21, r21
 832:	62 9f       	mul	r22, r18
 834:	f0 01       	movw	r30, r0
 836:	72 9f       	mul	r23, r18
 838:	bb 27       	eor	r27, r27
 83a:	f0 0d       	add	r31, r0
 83c:	b1 1d       	adc	r27, r1
 83e:	63 9f       	mul	r22, r19
 840:	aa 27       	eor	r26, r26
 842:	f0 0d       	add	r31, r0
 844:	b1 1d       	adc	r27, r1
 846:	aa 1f       	adc	r26, r26
 848:	64 9f       	mul	r22, r20
 84a:	66 27       	eor	r22, r22
 84c:	b0 0d       	add	r27, r0
 84e:	a1 1d       	adc	r26, r1
 850:	66 1f       	adc	r22, r22
 852:	82 9f       	mul	r24, r18
 854:	22 27       	eor	r18, r18
 856:	b0 0d       	add	r27, r0
 858:	a1 1d       	adc	r26, r1
 85a:	62 1f       	adc	r22, r18
 85c:	73 9f       	mul	r23, r19
 85e:	b0 0d       	add	r27, r0
 860:	a1 1d       	adc	r26, r1
 862:	62 1f       	adc	r22, r18
 864:	83 9f       	mul	r24, r19
 866:	a0 0d       	add	r26, r0
 868:	61 1d       	adc	r22, r1
 86a:	22 1f       	adc	r18, r18
 86c:	74 9f       	mul	r23, r20
 86e:	33 27       	eor	r19, r19
 870:	a0 0d       	add	r26, r0
 872:	61 1d       	adc	r22, r1
 874:	23 1f       	adc	r18, r19
 876:	84 9f       	mul	r24, r20
 878:	60 0d       	add	r22, r0
 87a:	21 1d       	adc	r18, r1
 87c:	82 2f       	mov	r24, r18
 87e:	76 2f       	mov	r23, r22
 880:	6a 2f       	mov	r22, r26
 882:	11 24       	eor	r1, r1
 884:	9f 57       	subi	r25, 0x7F	; 127
 886:	50 40       	sbci	r21, 0x00	; 0
 888:	8a f0       	brmi	.+34     	; 0x8ac <__stack+0x4d>
 88a:	e1 f0       	breq	.+56     	; 0x8c4 <__stack+0x65>
 88c:	88 23       	and	r24, r24
 88e:	4a f0       	brmi	.+18     	; 0x8a2 <__stack+0x43>
 890:	ee 0f       	add	r30, r30
 892:	ff 1f       	adc	r31, r31
 894:	bb 1f       	adc	r27, r27
 896:	66 1f       	adc	r22, r22
 898:	77 1f       	adc	r23, r23
 89a:	88 1f       	adc	r24, r24
 89c:	91 50       	subi	r25, 0x01	; 1
 89e:	50 40       	sbci	r21, 0x00	; 0
 8a0:	a9 f7       	brne	.-22     	; 0x88c <__stack+0x2d>
 8a2:	9e 3f       	cpi	r25, 0xFE	; 254
 8a4:	51 05       	cpc	r21, r1
 8a6:	70 f0       	brcs	.+28     	; 0x8c4 <__stack+0x65>
 8a8:	ce ce       	rjmp	.-612    	; 0x646 <__fp_inf>
 8aa:	4a ce       	rjmp	.-876    	; 0x540 <__fp_szero>
 8ac:	5f 3f       	cpi	r21, 0xFF	; 255
 8ae:	ec f3       	brlt	.-6      	; 0x8aa <__stack+0x4b>
 8b0:	98 3e       	cpi	r25, 0xE8	; 232
 8b2:	dc f3       	brlt	.-10     	; 0x8aa <__stack+0x4b>
 8b4:	86 95       	lsr	r24
 8b6:	77 95       	ror	r23
 8b8:	67 95       	ror	r22
 8ba:	b7 95       	ror	r27
 8bc:	f7 95       	ror	r31
 8be:	e7 95       	ror	r30
 8c0:	9f 5f       	subi	r25, 0xFF	; 255
 8c2:	c1 f7       	brne	.-16     	; 0x8b4 <__stack+0x55>
 8c4:	fe 2b       	or	r31, r30
 8c6:	88 0f       	add	r24, r24
 8c8:	91 1d       	adc	r25, r1
 8ca:	96 95       	lsr	r25
 8cc:	87 95       	ror	r24
 8ce:	97 f9       	bld	r25, 7
 8d0:	08 95       	ret

000008d2 <__subsf3>:
 8d2:	50 58       	subi	r21, 0x80	; 128

000008d4 <__addsf3>:
 8d4:	bb 27       	eor	r27, r27
 8d6:	aa 27       	eor	r26, r26
 8d8:	0e d0       	rcall	.+28     	; 0x8f6 <__addsf3x>
 8da:	e4 c0       	rjmp	.+456    	; 0xaa4 <__fp_round>
 8dc:	d5 d0       	rcall	.+426    	; 0xa88 <__fp_pscA>
 8de:	30 f0       	brcs	.+12     	; 0x8ec <__addsf3+0x18>
 8e0:	da d0       	rcall	.+436    	; 0xa96 <__fp_pscB>
 8e2:	20 f0       	brcs	.+8      	; 0x8ec <__addsf3+0x18>
 8e4:	31 f4       	brne	.+12     	; 0x8f2 <__addsf3+0x1e>
 8e6:	9f 3f       	cpi	r25, 0xFF	; 255
 8e8:	11 f4       	brne	.+4      	; 0x8ee <__addsf3+0x1a>
 8ea:	1e f4       	brtc	.+6      	; 0x8f2 <__addsf3+0x1e>
 8ec:	b2 ce       	rjmp	.-668    	; 0x652 <__fp_nan>
 8ee:	0e f4       	brtc	.+2      	; 0x8f2 <__addsf3+0x1e>
 8f0:	e0 95       	com	r30
 8f2:	e7 fb       	bst	r30, 7
 8f4:	a8 ce       	rjmp	.-688    	; 0x646 <__fp_inf>

000008f6 <__addsf3x>:
 8f6:	e9 2f       	mov	r30, r25
 8f8:	00 de       	rcall	.-1024   	; 0x4fa <__fp_split3>
 8fa:	80 f3       	brcs	.-32     	; 0x8dc <__addsf3+0x8>
 8fc:	ba 17       	cp	r27, r26
 8fe:	62 07       	cpc	r22, r18
 900:	73 07       	cpc	r23, r19
 902:	84 07       	cpc	r24, r20
 904:	95 07       	cpc	r25, r21
 906:	18 f0       	brcs	.+6      	; 0x90e <__addsf3x+0x18>
 908:	71 f4       	brne	.+28     	; 0x926 <__addsf3x+0x30>
 90a:	9e f5       	brtc	.+102    	; 0x972 <__addsf3x+0x7c>
 90c:	18 ce       	rjmp	.-976    	; 0x53e <__fp_zero>
 90e:	0e f4       	brtc	.+2      	; 0x912 <__addsf3x+0x1c>
 910:	e0 95       	com	r30
 912:	0b 2e       	mov	r0, r27
 914:	ba 2f       	mov	r27, r26
 916:	a0 2d       	mov	r26, r0
 918:	0b 01       	movw	r0, r22
 91a:	b9 01       	movw	r22, r18
 91c:	90 01       	movw	r18, r0
 91e:	0c 01       	movw	r0, r24
 920:	ca 01       	movw	r24, r20
 922:	a0 01       	movw	r20, r0
 924:	11 24       	eor	r1, r1
 926:	ff 27       	eor	r31, r31
 928:	59 1b       	sub	r21, r25
 92a:	99 f0       	breq	.+38     	; 0x952 <__addsf3x+0x5c>
 92c:	59 3f       	cpi	r21, 0xF9	; 249
 92e:	50 f4       	brcc	.+20     	; 0x944 <__addsf3x+0x4e>
 930:	50 3e       	cpi	r21, 0xE0	; 224
 932:	68 f1       	brcs	.+90     	; 0x98e <__addsf3x+0x98>
 934:	1a 16       	cp	r1, r26
 936:	f0 40       	sbci	r31, 0x00	; 0
 938:	a2 2f       	mov	r26, r18
 93a:	23 2f       	mov	r18, r19
 93c:	34 2f       	mov	r19, r20
 93e:	44 27       	eor	r20, r20
 940:	58 5f       	subi	r21, 0xF8	; 248
 942:	f3 cf       	rjmp	.-26     	; 0x92a <__addsf3x+0x34>
 944:	46 95       	lsr	r20
 946:	37 95       	ror	r19
 948:	27 95       	ror	r18
 94a:	a7 95       	ror	r26
 94c:	f0 40       	sbci	r31, 0x00	; 0
 94e:	53 95       	inc	r21
 950:	c9 f7       	brne	.-14     	; 0x944 <__addsf3x+0x4e>
 952:	7e f4       	brtc	.+30     	; 0x972 <__addsf3x+0x7c>
 954:	1f 16       	cp	r1, r31
 956:	ba 0b       	sbc	r27, r26
 958:	62 0b       	sbc	r22, r18
 95a:	73 0b       	sbc	r23, r19
 95c:	84 0b       	sbc	r24, r20
 95e:	ba f0       	brmi	.+46     	; 0x98e <__addsf3x+0x98>
 960:	91 50       	subi	r25, 0x01	; 1
 962:	a1 f0       	breq	.+40     	; 0x98c <__addsf3x+0x96>
 964:	ff 0f       	add	r31, r31
 966:	bb 1f       	adc	r27, r27
 968:	66 1f       	adc	r22, r22
 96a:	77 1f       	adc	r23, r23
 96c:	88 1f       	adc	r24, r24
 96e:	c2 f7       	brpl	.-16     	; 0x960 <__addsf3x+0x6a>
 970:	0e c0       	rjmp	.+28     	; 0x98e <__addsf3x+0x98>
 972:	ba 0f       	add	r27, r26
 974:	62 1f       	adc	r22, r18
 976:	73 1f       	adc	r23, r19
 978:	84 1f       	adc	r24, r20
 97a:	48 f4       	brcc	.+18     	; 0x98e <__addsf3x+0x98>
 97c:	87 95       	ror	r24
 97e:	77 95       	ror	r23
 980:	67 95       	ror	r22
 982:	b7 95       	ror	r27
 984:	f7 95       	ror	r31
 986:	9e 3f       	cpi	r25, 0xFE	; 254
 988:	08 f0       	brcs	.+2      	; 0x98c <__addsf3x+0x96>
 98a:	b3 cf       	rjmp	.-154    	; 0x8f2 <__addsf3+0x1e>
 98c:	93 95       	inc	r25
 98e:	88 0f       	add	r24, r24
 990:	08 f0       	brcs	.+2      	; 0x994 <__addsf3x+0x9e>
 992:	99 27       	eor	r25, r25
 994:	ee 0f       	add	r30, r30
 996:	97 95       	ror	r25
 998:	87 95       	ror	r24
 99a:	08 95       	ret

0000099c <__divsf3>:
 99c:	0c d0       	rcall	.+24     	; 0x9b6 <__divsf3x>
 99e:	82 c0       	rjmp	.+260    	; 0xaa4 <__fp_round>
 9a0:	7a d0       	rcall	.+244    	; 0xa96 <__fp_pscB>
 9a2:	40 f0       	brcs	.+16     	; 0x9b4 <__divsf3+0x18>
 9a4:	71 d0       	rcall	.+226    	; 0xa88 <__fp_pscA>
 9a6:	30 f0       	brcs	.+12     	; 0x9b4 <__divsf3+0x18>
 9a8:	21 f4       	brne	.+8      	; 0x9b2 <__divsf3+0x16>
 9aa:	5f 3f       	cpi	r21, 0xFF	; 255
 9ac:	19 f0       	breq	.+6      	; 0x9b4 <__divsf3+0x18>
 9ae:	4b ce       	rjmp	.-874    	; 0x646 <__fp_inf>
 9b0:	51 11       	cpse	r21, r1
 9b2:	c6 cd       	rjmp	.-1140   	; 0x540 <__fp_szero>
 9b4:	4e ce       	rjmp	.-868    	; 0x652 <__fp_nan>

000009b6 <__divsf3x>:
 9b6:	a1 dd       	rcall	.-1214   	; 0x4fa <__fp_split3>
 9b8:	98 f3       	brcs	.-26     	; 0x9a0 <__divsf3+0x4>

000009ba <__divsf3_pse>:
 9ba:	99 23       	and	r25, r25
 9bc:	c9 f3       	breq	.-14     	; 0x9b0 <__divsf3+0x14>
 9be:	55 23       	and	r21, r21
 9c0:	b1 f3       	breq	.-20     	; 0x9ae <__divsf3+0x12>
 9c2:	95 1b       	sub	r25, r21
 9c4:	55 0b       	sbc	r21, r21
 9c6:	bb 27       	eor	r27, r27
 9c8:	aa 27       	eor	r26, r26
 9ca:	62 17       	cp	r22, r18
 9cc:	73 07       	cpc	r23, r19
 9ce:	84 07       	cpc	r24, r20
 9d0:	38 f0       	brcs	.+14     	; 0x9e0 <__divsf3_pse+0x26>
 9d2:	9f 5f       	subi	r25, 0xFF	; 255
 9d4:	5f 4f       	sbci	r21, 0xFF	; 255
 9d6:	22 0f       	add	r18, r18
 9d8:	33 1f       	adc	r19, r19
 9da:	44 1f       	adc	r20, r20
 9dc:	aa 1f       	adc	r26, r26
 9de:	a9 f3       	breq	.-22     	; 0x9ca <__divsf3_pse+0x10>
 9e0:	33 d0       	rcall	.+102    	; 0xa48 <__divsf3_pse+0x8e>
 9e2:	0e 2e       	mov	r0, r30
 9e4:	3a f0       	brmi	.+14     	; 0x9f4 <__divsf3_pse+0x3a>
 9e6:	e0 e8       	ldi	r30, 0x80	; 128
 9e8:	30 d0       	rcall	.+96     	; 0xa4a <__divsf3_pse+0x90>
 9ea:	91 50       	subi	r25, 0x01	; 1
 9ec:	50 40       	sbci	r21, 0x00	; 0
 9ee:	e6 95       	lsr	r30
 9f0:	00 1c       	adc	r0, r0
 9f2:	ca f7       	brpl	.-14     	; 0x9e6 <__divsf3_pse+0x2c>
 9f4:	29 d0       	rcall	.+82     	; 0xa48 <__divsf3_pse+0x8e>
 9f6:	fe 2f       	mov	r31, r30
 9f8:	27 d0       	rcall	.+78     	; 0xa48 <__divsf3_pse+0x8e>
 9fa:	66 0f       	add	r22, r22
 9fc:	77 1f       	adc	r23, r23
 9fe:	88 1f       	adc	r24, r24
 a00:	bb 1f       	adc	r27, r27
 a02:	26 17       	cp	r18, r22
 a04:	37 07       	cpc	r19, r23
 a06:	48 07       	cpc	r20, r24
 a08:	ab 07       	cpc	r26, r27
 a0a:	b0 e8       	ldi	r27, 0x80	; 128
 a0c:	09 f0       	breq	.+2      	; 0xa10 <__divsf3_pse+0x56>
 a0e:	bb 0b       	sbc	r27, r27
 a10:	80 2d       	mov	r24, r0
 a12:	bf 01       	movw	r22, r30
 a14:	ff 27       	eor	r31, r31
 a16:	93 58       	subi	r25, 0x83	; 131
 a18:	5f 4f       	sbci	r21, 0xFF	; 255
 a1a:	2a f0       	brmi	.+10     	; 0xa26 <__divsf3_pse+0x6c>
 a1c:	9e 3f       	cpi	r25, 0xFE	; 254
 a1e:	51 05       	cpc	r21, r1
 a20:	68 f0       	brcs	.+26     	; 0xa3c <__divsf3_pse+0x82>
 a22:	11 ce       	rjmp	.-990    	; 0x646 <__fp_inf>
 a24:	8d cd       	rjmp	.-1254   	; 0x540 <__fp_szero>
 a26:	5f 3f       	cpi	r21, 0xFF	; 255
 a28:	ec f3       	brlt	.-6      	; 0xa24 <__divsf3_pse+0x6a>
 a2a:	98 3e       	cpi	r25, 0xE8	; 232
 a2c:	dc f3       	brlt	.-10     	; 0xa24 <__divsf3_pse+0x6a>
 a2e:	86 95       	lsr	r24
 a30:	77 95       	ror	r23
 a32:	67 95       	ror	r22
 a34:	b7 95       	ror	r27
 a36:	f7 95       	ror	r31
 a38:	9f 5f       	subi	r25, 0xFF	; 255
 a3a:	c9 f7       	brne	.-14     	; 0xa2e <__divsf3_pse+0x74>
 a3c:	88 0f       	add	r24, r24
 a3e:	91 1d       	adc	r25, r1
 a40:	96 95       	lsr	r25
 a42:	87 95       	ror	r24
 a44:	97 f9       	bld	r25, 7
 a46:	08 95       	ret
 a48:	e1 e0       	ldi	r30, 0x01	; 1
 a4a:	66 0f       	add	r22, r22
 a4c:	77 1f       	adc	r23, r23
 a4e:	88 1f       	adc	r24, r24
 a50:	bb 1f       	adc	r27, r27
 a52:	62 17       	cp	r22, r18
 a54:	73 07       	cpc	r23, r19
 a56:	84 07       	cpc	r24, r20
 a58:	ba 07       	cpc	r27, r26
 a5a:	20 f0       	brcs	.+8      	; 0xa64 <__divsf3_pse+0xaa>
 a5c:	62 1b       	sub	r22, r18
 a5e:	73 0b       	sbc	r23, r19
 a60:	84 0b       	sbc	r24, r20
 a62:	ba 0b       	sbc	r27, r26
 a64:	ee 1f       	adc	r30, r30
 a66:	88 f7       	brcc	.-30     	; 0xa4a <__divsf3_pse+0x90>
 a68:	e0 95       	com	r30
 a6a:	08 95       	ret

00000a6c <__fp_mpack>:
 a6c:	9f 3f       	cpi	r25, 0xFF	; 255
 a6e:	31 f0       	breq	.+12     	; 0xa7c <__fp_mpack_finite+0xc>

00000a70 <__fp_mpack_finite>:
 a70:	91 50       	subi	r25, 0x01	; 1
 a72:	20 f4       	brcc	.+8      	; 0xa7c <__fp_mpack_finite+0xc>
 a74:	87 95       	ror	r24
 a76:	77 95       	ror	r23
 a78:	67 95       	ror	r22
 a7a:	b7 95       	ror	r27
 a7c:	88 0f       	add	r24, r24
 a7e:	91 1d       	adc	r25, r1
 a80:	96 95       	lsr	r25
 a82:	87 95       	ror	r24
 a84:	97 f9       	bld	r25, 7
 a86:	08 95       	ret

00000a88 <__fp_pscA>:
 a88:	00 24       	eor	r0, r0
 a8a:	0a 94       	dec	r0
 a8c:	16 16       	cp	r1, r22
 a8e:	17 06       	cpc	r1, r23
 a90:	18 06       	cpc	r1, r24
 a92:	09 06       	cpc	r0, r25
 a94:	08 95       	ret

00000a96 <__fp_pscB>:
 a96:	00 24       	eor	r0, r0
 a98:	0a 94       	dec	r0
 a9a:	12 16       	cp	r1, r18
 a9c:	13 06       	cpc	r1, r19
 a9e:	14 06       	cpc	r1, r20
 aa0:	05 06       	cpc	r0, r21
 aa2:	08 95       	ret

00000aa4 <__fp_round>:
 aa4:	09 2e       	mov	r0, r25
 aa6:	03 94       	inc	r0
 aa8:	00 0c       	add	r0, r0
 aaa:	11 f4       	brne	.+4      	; 0xab0 <__fp_round+0xc>
 aac:	88 23       	and	r24, r24
 aae:	52 f0       	brmi	.+20     	; 0xac4 <__fp_round+0x20>
 ab0:	bb 0f       	add	r27, r27
 ab2:	40 f4       	brcc	.+16     	; 0xac4 <__fp_round+0x20>
 ab4:	bf 2b       	or	r27, r31
 ab6:	11 f4       	brne	.+4      	; 0xabc <__fp_round+0x18>
 ab8:	60 ff       	sbrs	r22, 0
 aba:	04 c0       	rjmp	.+8      	; 0xac4 <__fp_round+0x20>
 abc:	6f 5f       	subi	r22, 0xFF	; 255
 abe:	7f 4f       	sbci	r23, 0xFF	; 255
 ac0:	8f 4f       	sbci	r24, 0xFF	; 255
 ac2:	9f 4f       	sbci	r25, 0xFF	; 255
 ac4:	08 95       	ret

00000ac6 <__udivmodhi4>:
 ac6:	aa 1b       	sub	r26, r26
 ac8:	bb 1b       	sub	r27, r27
 aca:	51 e1       	ldi	r21, 0x11	; 17
 acc:	07 c0       	rjmp	.+14     	; 0xadc <__udivmodhi4_ep>

00000ace <__udivmodhi4_loop>:
 ace:	aa 1f       	adc	r26, r26
 ad0:	bb 1f       	adc	r27, r27
 ad2:	a6 17       	cp	r26, r22
 ad4:	b7 07       	cpc	r27, r23
 ad6:	10 f0       	brcs	.+4      	; 0xadc <__udivmodhi4_ep>
 ad8:	a6 1b       	sub	r26, r22
 ada:	b7 0b       	sbc	r27, r23

00000adc <__udivmodhi4_ep>:
 adc:	88 1f       	adc	r24, r24
 ade:	99 1f       	adc	r25, r25
 ae0:	5a 95       	dec	r21
 ae2:	a9 f7       	brne	.-22     	; 0xace <__udivmodhi4_loop>
 ae4:	80 95       	com	r24
 ae6:	90 95       	com	r25
 ae8:	bc 01       	movw	r22, r24
 aea:	cd 01       	movw	r24, r26
 aec:	08 95       	ret

00000aee <__divmodhi4>:
 aee:	97 fb       	bst	r25, 7
 af0:	09 2e       	mov	r0, r25
 af2:	07 26       	eor	r0, r23
 af4:	0a d0       	rcall	.+20     	; 0xb0a <__divmodhi4_neg1>
 af6:	77 fd       	sbrc	r23, 7
 af8:	04 d0       	rcall	.+8      	; 0xb02 <__divmodhi4_neg2>
 afa:	e5 df       	rcall	.-54     	; 0xac6 <__udivmodhi4>
 afc:	06 d0       	rcall	.+12     	; 0xb0a <__divmodhi4_neg1>
 afe:	00 20       	and	r0, r0
 b00:	1a f4       	brpl	.+6      	; 0xb08 <__divmodhi4_exit>

00000b02 <__divmodhi4_neg2>:
 b02:	70 95       	com	r23
 b04:	61 95       	neg	r22
 b06:	7f 4f       	sbci	r23, 0xFF	; 255

00000b08 <__divmodhi4_exit>:
 b08:	08 95       	ret

00000b0a <__divmodhi4_neg1>:
 b0a:	f6 f7       	brtc	.-4      	; 0xb08 <__divmodhi4_exit>
 b0c:	90 95       	com	r25
 b0e:	81 95       	neg	r24
 b10:	9f 4f       	sbci	r25, 0xFF	; 255
 b12:	08 95       	ret

00000b14 <_exit>:
 b14:	f8 94       	cli

00000b16 <__stop_program>:
 b16:	ff cf       	rjmp	.-2      	; 0xb16 <__stop_program>
