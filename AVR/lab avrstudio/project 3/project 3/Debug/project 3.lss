
project 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ab2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  00000b26  2**0
                  ALLOC
  2 .stab         000033e4  00000000  00000000  00000b28  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000abd  00000000  00000000  00003f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000040  00000000  00000000  000049c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000000ed  00000000  00000000  00004a09  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000037e  00000000  00000000  00004af6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000015f  00000000  00000000  00004e74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000641  00000000  00000000  00004fd3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  00005614  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000014d  00000000  00000000  00005704  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000021b  00000000  00000000  00005851  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000056  00000000  00000000  00005a6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__vector_16>
  44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__addsf3x+0x40>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d4 e0       	ldi	r29, 0x04	; 4
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_clear_bss>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
  ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
  ec:	a1 36       	cpi	r26, 0x61	; 97
  ee:	b1 07       	cpc	r27, r17
  f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
  f2:	0e 94 b7 00 	call	0x16e	; 0x16e <main>
  f6:	0c 94 57 05 	jmp	0xaae	; 0xaae <_exit>

000000fa <__bad_interrupt>:
  fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <__vector_16>:
// Timer1 overflow interrupt service routine

// Analog Comparator interrupt service routine
volatile unsigned char val;
ISR(ANA_COMP_vect)
{
  fe:	1f 92       	push	r1
 100:	0f 92       	push	r0
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	0f 92       	push	r0
 106:	11 24       	eor	r1, r1
 108:	2f 93       	push	r18
 10a:	3f 93       	push	r19
 10c:	4f 93       	push	r20
 10e:	5f 93       	push	r21
 110:	6f 93       	push	r22
 112:	7f 93       	push	r23
 114:	8f 93       	push	r24
 116:	9f 93       	push	r25
 118:	af 93       	push	r26
 11a:	bf 93       	push	r27
 11c:	ef 93       	push	r30
 11e:	ff 93       	push	r31
// Place your code here
   if(bit_is_clear(ACSR,ACO)){
 120:	45 99       	sbic	0x08, 5	; 8
 122:	14 c0       	rjmp	.+40     	; 0x14c <__vector_16+0x4e>
     val=8;
 124:	88 e0       	ldi	r24, 0x08	; 8
 126:	80 93 60 00 	sts	0x0060, r24
	 movecursor(1,2);
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	62 e0       	ldi	r22, 0x02	; 2
 12e:	0e 94 48 01 	call	0x290	; 0x290 <movecursor>
	 printnumber_lcd(val);
 132:	80 91 60 00 	lds	r24, 0x0060
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <printnumber_lcd>
	 movecursor(2,2);
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	62 e0       	ldi	r22, 0x02	; 2
 140:	0e 94 48 01 	call	0x290	; 0x290 <movecursor>
	 printnumber_lcd(ICR1);
 144:	86 b5       	in	r24, 0x26	; 38
 146:	97 b5       	in	r25, 0x27	; 39
 148:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <printnumber_lcd>
	 }	
   
}
 14c:	ff 91       	pop	r31
 14e:	ef 91       	pop	r30
 150:	bf 91       	pop	r27
 152:	af 91       	pop	r26
 154:	9f 91       	pop	r25
 156:	8f 91       	pop	r24
 158:	7f 91       	pop	r23
 15a:	6f 91       	pop	r22
 15c:	5f 91       	pop	r21
 15e:	4f 91       	pop	r20
 160:	3f 91       	pop	r19
 162:	2f 91       	pop	r18
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <main>:

// Input/Output Ports initialization
// Port A initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T 
PORTA=0x00;
 16e:	1b ba       	out	0x1b, r1	; 27
DDRA=0x00;
 170:	1a ba       	out	0x1a, r1	; 26

// Port B initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T 
PORTB=0x00;
 172:	18 ba       	out	0x18, r1	; 24
DDRB=0x00;
 174:	17 ba       	out	0x17, r1	; 23

// Port C initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T 
PORTC=0x00;
 176:	15 ba       	out	0x15, r1	; 21
DDRC=0xFF;
 178:	8f ef       	ldi	r24, 0xFF	; 255
 17a:	84 bb       	out	0x14, r24	; 20

// Port D initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T 
PORTD=0x00;
 17c:	12 ba       	out	0x12, r1	; 18
DDRD=0x00;
 17e:	11 ba       	out	0x11, r1	; 17
// Timer/Counter 0 initialization
// Clock source: System Clock
// Clock value: Timer 0 Stopped
// Mode: Normal top=0xFF
// OC0 output: Disconnected
TCCR0=0x00;
 180:	13 be       	out	0x33, r1	; 51
TCNT0=0x00;
 182:	12 be       	out	0x32, r1	; 50
OCR0=0x00;
 184:	1c be       	out	0x3c, r1	; 60
// Input Capture on Falling Edge
// Timer1 Overflow Interrupt: On
// Input Capture Interrupt: Off
// Compare A Match Interrupt: Off
// Compare B Match Interrupt: Off
TCCR1A=0x00;
 186:	1f bc       	out	0x2f, r1	; 47
TCCR1B=0x19;
 188:	89 e1       	ldi	r24, 0x19	; 25
 18a:	8e bd       	out	0x2e, r24	; 46
TCNT1H=0x00;
 18c:	1d bc       	out	0x2d, r1	; 45
TCNT1L=0x00;
 18e:	1c bc       	out	0x2c, r1	; 44
ICR1H=0x00;
 190:	17 bc       	out	0x27, r1	; 39
ICR1L=0x00;
 192:	16 bc       	out	0x26, r1	; 38
OCR1AH=0x00;
 194:	1b bc       	out	0x2b, r1	; 43
OCR1AL=0x00;
 196:	1a bc       	out	0x2a, r1	; 42
OCR1BH=0x00;
 198:	19 bc       	out	0x29, r1	; 41
OCR1BL=0x00;
 19a:	18 bc       	out	0x28, r1	; 40
// Timer/Counter 2 initialization
// Clock source: System Clock
// Clock value: Timer2 Stopped
// Mode: Normal top=0xFF
// OC2 output: Disconnected
ASSR=0x00;
 19c:	12 bc       	out	0x22, r1	; 34
TCCR2=0x00;
 19e:	15 bc       	out	0x25, r1	; 37
TCNT2=0x00;
 1a0:	14 bc       	out	0x24, r1	; 36
OCR2=0x00;
 1a2:	13 bc       	out	0x23, r1	; 35

// External Interrupt(s) initialization
// INT0: Off
// INT1: Off
// INT2: Off
MCUCR=0x00;
 1a4:	15 be       	out	0x35, r1	; 53
MCUCSR=0x00;
 1a6:	14 be       	out	0x34, r1	; 52

// Timer(s)/Counter(s) Interrupt(s) initialization
TIMSK=0x04;
 1a8:	84 e0       	ldi	r24, 0x04	; 4
 1aa:	89 bf       	out	0x39, r24	; 57

// USART initialization
// USART disabled
UCSRB=0x00;
 1ac:	1a b8       	out	0x0a, r1	; 10

// Analog Comparator initialization
// Analog Comparator: On
// Interrupt on Output Toggle
// Analog Comparator Input Capture by Timer/Counter 1: On
ACSR=0x0C;
 1ae:	8c e0       	ldi	r24, 0x0C	; 12
 1b0:	88 b9       	out	0x08, r24	; 8
SFIOR=0x00;
 1b2:	10 be       	out	0x30, r1	; 48

// ADC initialization
// ADC disabled
ADCSRA=0x00;
 1b4:	16 b8       	out	0x06, r1	; 6

// SPI initialization
// SPI disabled
SPCR=0x00;
 1b6:	1d b8       	out	0x0d, r1	; 13

// TWI initialization
// TWI disabled
TWCR=0x00;
 1b8:	16 be       	out	0x36, r1	; 54

// Global enable interrupts
sei();
 1ba:	78 94       	sei
init_lcd();
 1bc:	0e 94 19 01 	call	0x232	; 0x232 <init_lcd>
 1c0:	ff cf       	rjmp	.-2      	; 0x1c0 <main+0x52>

000001c2 <read_2Nib>:


char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
 1c2:	aa 9a       	sbi	0x15, 2	; 21
	DDR_DATA=0x0F;
 1c4:	8f e0       	ldi	r24, 0x0F	; 15
 1c6:	84 bb       	out	0x14, r24	; 20
	HNib=DATA_input&0xF0;
 1c8:	83 b3       	in	r24, 0x13	; 19
	clearbit(CTRL,EN);
 1ca:	aa 98       	cbi	0x15, 2	; 21
	
	setbit(CTRL,EN);
 1cc:	aa 9a       	sbi	0x15, 2	; 21
	LNib=DATA_input&0xF0;
 1ce:	93 b3       	in	r25, 0x13	; 19
	clearbit(CTRL,EN);
 1d0:	aa 98       	cbi	0x15, 2	; 21
	LNib>>=4;
 1d2:	92 95       	swap	r25
 1d4:	9f 70       	andi	r25, 0x0F	; 15
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
	DDR_DATA=0x0F;
	HNib=DATA_input&0xF0;
 1d6:	80 7f       	andi	r24, 0xF0	; 240
	LNib=DATA_input&0xF0;
	clearbit(CTRL,EN);
	LNib>>=4;
	
	return (HNib|LNib);
}
 1d8:	89 2b       	or	r24, r25
 1da:	08 95       	ret

000001dc <write_2Nib>:
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
 1dc:	95 b3       	in	r25, 0x15	; 21
 1de:	9f 70       	andi	r25, 0x0F	; 15
	HNib=data&0xF0;
 1e0:	28 2f       	mov	r18, r24
 1e2:	20 7f       	andi	r18, 0xF0	; 240
	LNib=(data<<4)&0xF0;
	
	DATA_output=HNib|temp;
 1e4:	29 2b       	or	r18, r25
 1e6:	25 bb       	out	0x15, r18	; 21
	setbit(CTRL,EN);
 1e8:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 1ea:	aa 98       	cbi	0x15, 2	; 21
}
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
	HNib=data&0xF0;
	LNib=(data<<4)&0xF0;
 1ec:	82 95       	swap	r24
 1ee:	80 7f       	andi	r24, 0xF0	; 240
	
	DATA_output=HNib|temp;
	setbit(CTRL,EN);
	clearbit(CTRL,EN);
	
	DATA_output=LNib|temp;
 1f0:	98 2b       	or	r25, r24
 1f2:	95 bb       	out	0x15, r25	; 21
	setbit(CTRL,EN);
 1f4:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 1f6:	aa 98       	cbi	0x15, 2	; 21
	
}
 1f8:	08 95       	ret

000001fa <wait_lcd>:
void wait_lcd(void){
 1fa:	0f 93       	push	r16
 1fc:	1f 93       	push	r17
 1fe:	df 93       	push	r29
 200:	cf 93       	push	r28
 202:	0f 92       	push	r0
 204:	cd b7       	in	r28, 0x3d	; 61
 206:	de b7       	in	r29, 0x3e	; 62
	while(1){
     	clearbit(CTRL,RS);
		setbit(CTRL,RW);
		temp=read_2Nib();
		
		if(bit_is_clear(temp,7)) break;
 208:	8e 01       	movw	r16, r28
 20a:	0f 5f       	subi	r16, 0xFF	; 255
 20c:	1f 4f       	sbci	r17, 0xFF	; 255
}
void wait_lcd(void){
	unsigned char temp;
	
	while(1){
     	clearbit(CTRL,RS);
 20e:	a8 98       	cbi	0x15, 0	; 21
		setbit(CTRL,RW);
 210:	a9 9a       	sbi	0x15, 1	; 21
		temp=read_2Nib();
 212:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <read_2Nib>
 216:	89 83       	std	Y+1, r24	; 0x01
		
		if(bit_is_clear(temp,7)) break;
 218:	f8 01       	movw	r30, r16
 21a:	80 81       	ld	r24, Z
 21c:	88 23       	and	r24, r24
 21e:	bc f3       	brlt	.-18     	; 0x20e <wait_lcd+0x14>
	}
	clearbit(CTRL,RW);
 220:	a9 98       	cbi	0x15, 1	; 21
	DDR_DATA=0xFF;
 222:	8f ef       	ldi	r24, 0xFF	; 255
 224:	84 bb       	out	0x14, r24	; 20
	
}
 226:	0f 90       	pop	r0
 228:	cf 91       	pop	r28
 22a:	df 91       	pop	r29
 22c:	1f 91       	pop	r17
 22e:	0f 91       	pop	r16
 230:	08 95       	ret

00000232 <init_lcd>:

void init_lcd(){//uses mode 4 bit
	DDR_CTRL=0xFF;
 232:	8f ef       	ldi	r24, 0xFF	; 255
 234:	84 bb       	out	0x14, r24	; 20
	DDR_DATA=0xFF;
 236:	84 bb       	out	0x14, r24	; 20
	clearbit(CTRL,RS);
 238:	a8 98       	cbi	0x15, 0	; 21
	clearbit(CTRL,RW);
 23a:	a9 98       	cbi	0x15, 1	; 21
	clearbit(CTRL,EN);
 23c:	aa 98       	cbi	0x15, 2	; 21
	
//function set	
	setbit(CTRL,EN);
 23e:	aa 9a       	sbi	0x15, 2	; 21
	setbit(DATA_output,5);
 240:	ad 9a       	sbi	0x15, 5	; 21
	clearbit(CTRL,EN);
 242:	aa 98       	cbi	0x15, 2	; 21
	wait_lcd();
 244:	0e 94 fd 00 	call	0x1fa	; 0x1fa <wait_lcd>
	write_2Nib(0x28);
 248:	88 e2       	ldi	r24, 0x28	; 40
 24a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <write_2Nib>
	wait_lcd();
 24e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <wait_lcd>
//display on/off control
    write_2Nib(0x0E);
 252:	8e e0       	ldi	r24, 0x0E	; 14
 254:	0e 94 ee 00 	call	0x1dc	; 0x1dc <write_2Nib>
	wait_lcd();
 258:	0e 94 fd 00 	call	0x1fa	; 0x1fa <wait_lcd>

//entry mode set 
    
    write_2Nib(0x06);
 25c:	86 e0       	ldi	r24, 0x06	; 6
 25e:	0e 94 ee 00 	call	0x1dc	; 0x1dc <write_2Nib>
    wait_lcd();		
 262:	0e 94 fd 00 	call	0x1fa	; 0x1fa <wait_lcd>
}
 266:	08 95       	ret

00000268 <putchar_lcd>:
void putchar_lcd(unsigned char data){
	
	setbit(CTRL,RS);
 268:	a8 9a       	sbi	0x15, 0	; 21
	write_2Nib(data);
 26a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <write_2Nib>
	wait_lcd();
 26e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <wait_lcd>
}
 272:	08 95       	ret

00000274 <cursor_home>:
void cursor_home(){
	clearbit(CTRL,RS);
 274:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x03);
 276:	83 e0       	ldi	r24, 0x03	; 3
 278:	0e 94 ee 00 	call	0x1dc	; 0x1dc <write_2Nib>
	wait_lcd();
 27c:	0e 94 fd 00 	call	0x1fa	; 0x1fa <wait_lcd>
}
 280:	08 95       	ret

00000282 <clear_lcd>:
void clear_lcd(){
	clearbit(CTRL,RS);
 282:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	0e 94 ee 00 	call	0x1dc	; 0x1dc <write_2Nib>
	wait_lcd();
 28a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <wait_lcd>
}
 28e:	08 95       	ret

00000290 <movecursor>:
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
	clearbit(CTRL,RS);
 290:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
	wait_lcd();
}
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
 292:	82 95       	swap	r24
 294:	88 0f       	add	r24, r24
 296:	88 0f       	add	r24, r24
 298:	80 7c       	andi	r24, 0xC0	; 192
 29a:	86 0f       	add	r24, r22
	clearbit(CTRL,RS);
	write_2Nib(x);
 29c:	81 5c       	subi	r24, 0xC1	; 193
 29e:	0e 94 ee 00 	call	0x1dc	; 0x1dc <write_2Nib>
	wait_lcd();
 2a2:	0e 94 fd 00 	call	0x1fa	; 0x1fa <wait_lcd>
}
 2a6:	08 95       	ret

000002a8 <count_number>:
int count_number(unsigned int number){
 2a8:	bc 01       	movw	r22, r24
	int dem=0;
	while(number){
 2aa:	00 97       	sbiw	r24, 0x00	; 0
 2ac:	71 f0       	breq	.+28     	; 0x2ca <count_number+0x22>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 2ae:	20 e0       	ldi	r18, 0x00	; 0
 2b0:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
 2b2:	ea e0       	ldi	r30, 0x0A	; 10
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	cb 01       	movw	r24, r22
 2b8:	bf 01       	movw	r22, r30
 2ba:	0e 94 30 05 	call	0xa60	; 0xa60 <__udivmodhi4>
		dem++;
 2be:	2f 5f       	subi	r18, 0xFF	; 255
 2c0:	3f 4f       	sbci	r19, 0xFF	; 255
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
	while(number){
 2c2:	61 15       	cp	r22, r1
 2c4:	71 05       	cpc	r23, r1
 2c6:	b9 f7       	brne	.-18     	; 0x2b6 <count_number+0xe>
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <count_number+0x26>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 2ca:	20 e0       	ldi	r18, 0x00	; 0
 2cc:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
		dem++;
	}
	return dem;
}
 2ce:	82 2f       	mov	r24, r18
 2d0:	93 2f       	mov	r25, r19
 2d2:	08 95       	ret

000002d4 <printnumber_lcd>:
void printnumber_lcd(unsigned int number){
 2d4:	af 92       	push	r10
 2d6:	bf 92       	push	r11
 2d8:	cf 92       	push	r12
 2da:	df 92       	push	r13
 2dc:	ef 92       	push	r14
 2de:	ff 92       	push	r15
 2e0:	0f 93       	push	r16
 2e2:	1f 93       	push	r17
 2e4:	cf 93       	push	r28
 2e6:	df 93       	push	r29
 2e8:	e8 2e       	mov	r14, r24
 2ea:	f9 2e       	mov	r15, r25
	int a,n,i,temp;
	n= count_number(number);
 2ec:	0e 94 54 01 	call	0x2a8	; 0x2a8 <count_number>
 2f0:	6c 01       	movw	r12, r24
	temp=pow(10,n-1);
 2f2:	bc 01       	movw	r22, r24
 2f4:	61 50       	subi	r22, 0x01	; 1
 2f6:	70 40       	sbci	r23, 0x00	; 0
 2f8:	88 27       	eor	r24, r24
 2fa:	77 fd       	sbrc	r23, 7
 2fc:	80 95       	com	r24
 2fe:	98 2f       	mov	r25, r24
 300:	0e 94 0f 02 	call	0x41e	; 0x41e <__floatsisf>
 304:	9b 01       	movw	r18, r22
 306:	ac 01       	movw	r20, r24
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	80 e2       	ldi	r24, 0x20	; 32
 30e:	91 e4       	ldi	r25, 0x41	; 65
 310:	0e 94 73 02 	call	0x4e6	; 0x4e6 <pow>
	for(i=0;i<n;i++){
 314:	1c 14       	cp	r1, r12
 316:	1d 04       	cpc	r1, r13
 318:	04 f5       	brge	.+64     	; 0x35a <printnumber_lcd+0x86>
	return dem;
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
 31a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__fixsfsi>
 31e:	eb 01       	movw	r28, r22
	for(i=0;i<n;i++){
 320:	00 e0       	ldi	r16, 0x00	; 0
 322:	10 e0       	ldi	r17, 0x00	; 0
		a=number/temp;
		number=number%temp;
		temp=temp/10;
 324:	0f 2e       	mov	r0, r31
 326:	fa e0       	ldi	r31, 0x0A	; 10
 328:	af 2e       	mov	r10, r31
 32a:	bb 24       	eor	r11, r11
 32c:	f0 2d       	mov	r31, r0
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
		a=number/temp;
 32e:	8e 2d       	mov	r24, r14
 330:	9f 2d       	mov	r25, r15
 332:	be 01       	movw	r22, r28
 334:	0e 94 30 05 	call	0xa60	; 0xa60 <__udivmodhi4>
 338:	26 2f       	mov	r18, r22
		number=number%temp;
 33a:	e8 2e       	mov	r14, r24
 33c:	f9 2e       	mov	r15, r25
		temp=temp/10;
 33e:	ce 01       	movw	r24, r28
 340:	b5 01       	movw	r22, r10
 342:	0e 94 44 05 	call	0xa88	; 0xa88 <__divmodhi4>
 346:	eb 01       	movw	r28, r22
		putchar_lcd(a+48);
 348:	82 2f       	mov	r24, r18
 34a:	80 5d       	subi	r24, 0xD0	; 208
 34c:	0e 94 34 01 	call	0x268	; 0x268 <putchar_lcd>
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
 350:	0f 5f       	subi	r16, 0xFF	; 255
 352:	1f 4f       	sbci	r17, 0xFF	; 255
 354:	0c 15       	cp	r16, r12
 356:	1d 05       	cpc	r17, r13
 358:	54 f3       	brlt	.-44     	; 0x32e <printnumber_lcd+0x5a>
	number=number%100;
	d=number/10;
	putchar_lcd(d+48);
	e=number%10;
	putchar_lcd(e+48);*/
}
 35a:	df 91       	pop	r29
 35c:	cf 91       	pop	r28
 35e:	1f 91       	pop	r17
 360:	0f 91       	pop	r16
 362:	ff 90       	pop	r15
 364:	ef 90       	pop	r14
 366:	df 90       	pop	r13
 368:	cf 90       	pop	r12
 36a:	bf 90       	pop	r11
 36c:	af 90       	pop	r10
 36e:	08 95       	ret

00000370 <putstr_lcd>:
putstr_lcd(unsigned char *str, unsigned int lenght){
 370:	ef 92       	push	r14
 372:	ff 92       	push	r15
 374:	0f 93       	push	r16
 376:	1f 93       	push	r17
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	7b 01       	movw	r14, r22
	unsigned int i;
	for(i=0;i<lenght;i++){
 37e:	61 15       	cp	r22, r1
 380:	71 05       	cpc	r23, r1
 382:	99 f0       	breq	.+38     	; 0x3aa <putstr_lcd+0x3a>
 384:	08 2f       	mov	r16, r24
 386:	19 2f       	mov	r17, r25
 388:	c0 e0       	ldi	r28, 0x00	; 0
 38a:	d0 e0       	ldi	r29, 0x00	; 0
		if(*(str+i)>0){ 
 38c:	f8 01       	movw	r30, r16
 38e:	81 91       	ld	r24, Z+
 390:	8f 01       	movw	r16, r30
 392:	88 23       	and	r24, r24
 394:	19 f0       	breq	.+6      	; 0x39c <putstr_lcd+0x2c>
			putchar_lcd(*(str+i));
 396:	0e 94 34 01 	call	0x268	; 0x268 <putchar_lcd>
 39a:	03 c0       	rjmp	.+6      	; 0x3a2 <putstr_lcd+0x32>
			}
		else putchar_lcd(0);	
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	0e 94 34 01 	call	0x268	; 0x268 <putchar_lcd>
	e=number%10;
	putchar_lcd(e+48);*/
}
putstr_lcd(unsigned char *str, unsigned int lenght){
	unsigned int i;
	for(i=0;i<lenght;i++){
 3a2:	21 96       	adiw	r28, 0x01	; 1
 3a4:	ce 15       	cp	r28, r14
 3a6:	df 05       	cpc	r29, r15
 3a8:	88 f3       	brcs	.-30     	; 0x38c <putstr_lcd+0x1c>
		if(*(str+i)>0){ 
			putchar_lcd(*(str+i));
			}
		else putchar_lcd(0);	
}
}
 3aa:	df 91       	pop	r29
 3ac:	cf 91       	pop	r28
 3ae:	1f 91       	pop	r17
 3b0:	0f 91       	pop	r16
 3b2:	ff 90       	pop	r15
 3b4:	ef 90       	pop	r14
 3b6:	08 95       	ret

000003b8 <__fixsfsi>:
 3b8:	04 d0       	rcall	.+8      	; 0x3c2 <__fixunssfsi>
 3ba:	68 94       	set
 3bc:	b1 11       	cpse	r27, r1
 3be:	8d c0       	rjmp	.+282    	; 0x4da <__fp_szero>
 3c0:	08 95       	ret

000003c2 <__fixunssfsi>:
 3c2:	70 d0       	rcall	.+224    	; 0x4a4 <__fp_splitA>
 3c4:	88 f0       	brcs	.+34     	; 0x3e8 <__fixunssfsi+0x26>
 3c6:	9f 57       	subi	r25, 0x7F	; 127
 3c8:	90 f0       	brcs	.+36     	; 0x3ee <__fixunssfsi+0x2c>
 3ca:	b9 2f       	mov	r27, r25
 3cc:	99 27       	eor	r25, r25
 3ce:	b7 51       	subi	r27, 0x17	; 23
 3d0:	a0 f0       	brcs	.+40     	; 0x3fa <__fixunssfsi+0x38>
 3d2:	d1 f0       	breq	.+52     	; 0x408 <__fixunssfsi+0x46>
 3d4:	66 0f       	add	r22, r22
 3d6:	77 1f       	adc	r23, r23
 3d8:	88 1f       	adc	r24, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	1a f0       	brmi	.+6      	; 0x3e4 <__fixunssfsi+0x22>
 3de:	ba 95       	dec	r27
 3e0:	c9 f7       	brne	.-14     	; 0x3d4 <__fixunssfsi+0x12>
 3e2:	12 c0       	rjmp	.+36     	; 0x408 <__fixunssfsi+0x46>
 3e4:	b1 30       	cpi	r27, 0x01	; 1
 3e6:	81 f0       	breq	.+32     	; 0x408 <__fixunssfsi+0x46>
 3e8:	77 d0       	rcall	.+238    	; 0x4d8 <__fp_zero>
 3ea:	b1 e0       	ldi	r27, 0x01	; 1
 3ec:	08 95       	ret
 3ee:	74 c0       	rjmp	.+232    	; 0x4d8 <__fp_zero>
 3f0:	67 2f       	mov	r22, r23
 3f2:	78 2f       	mov	r23, r24
 3f4:	88 27       	eor	r24, r24
 3f6:	b8 5f       	subi	r27, 0xF8	; 248
 3f8:	39 f0       	breq	.+14     	; 0x408 <__fixunssfsi+0x46>
 3fa:	b9 3f       	cpi	r27, 0xF9	; 249
 3fc:	cc f3       	brlt	.-14     	; 0x3f0 <__fixunssfsi+0x2e>
 3fe:	86 95       	lsr	r24
 400:	77 95       	ror	r23
 402:	67 95       	ror	r22
 404:	b3 95       	inc	r27
 406:	d9 f7       	brne	.-10     	; 0x3fe <__fixunssfsi+0x3c>
 408:	3e f4       	brtc	.+14     	; 0x418 <__fixunssfsi+0x56>
 40a:	90 95       	com	r25
 40c:	80 95       	com	r24
 40e:	70 95       	com	r23
 410:	61 95       	neg	r22
 412:	7f 4f       	sbci	r23, 0xFF	; 255
 414:	8f 4f       	sbci	r24, 0xFF	; 255
 416:	9f 4f       	sbci	r25, 0xFF	; 255
 418:	08 95       	ret

0000041a <__floatunsisf>:
 41a:	e8 94       	clt
 41c:	09 c0       	rjmp	.+18     	; 0x430 <__floatsisf+0x12>

0000041e <__floatsisf>:
 41e:	97 fb       	bst	r25, 7
 420:	3e f4       	brtc	.+14     	; 0x430 <__floatsisf+0x12>
 422:	90 95       	com	r25
 424:	80 95       	com	r24
 426:	70 95       	com	r23
 428:	61 95       	neg	r22
 42a:	7f 4f       	sbci	r23, 0xFF	; 255
 42c:	8f 4f       	sbci	r24, 0xFF	; 255
 42e:	9f 4f       	sbci	r25, 0xFF	; 255
 430:	99 23       	and	r25, r25
 432:	a9 f0       	breq	.+42     	; 0x45e <__floatsisf+0x40>
 434:	f9 2f       	mov	r31, r25
 436:	96 e9       	ldi	r25, 0x96	; 150
 438:	bb 27       	eor	r27, r27
 43a:	93 95       	inc	r25
 43c:	f6 95       	lsr	r31
 43e:	87 95       	ror	r24
 440:	77 95       	ror	r23
 442:	67 95       	ror	r22
 444:	b7 95       	ror	r27
 446:	f1 11       	cpse	r31, r1
 448:	f8 cf       	rjmp	.-16     	; 0x43a <__floatsisf+0x1c>
 44a:	fa f4       	brpl	.+62     	; 0x48a <__stack+0x2b>
 44c:	bb 0f       	add	r27, r27
 44e:	11 f4       	brne	.+4      	; 0x454 <__floatsisf+0x36>
 450:	60 ff       	sbrs	r22, 0
 452:	1b c0       	rjmp	.+54     	; 0x48a <__stack+0x2b>
 454:	6f 5f       	subi	r22, 0xFF	; 255
 456:	7f 4f       	sbci	r23, 0xFF	; 255
 458:	8f 4f       	sbci	r24, 0xFF	; 255
 45a:	9f 4f       	sbci	r25, 0xFF	; 255
 45c:	16 c0       	rjmp	.+44     	; 0x48a <__stack+0x2b>
 45e:	88 23       	and	r24, r24
 460:	11 f0       	breq	.+4      	; 0x466 <__stack+0x7>
 462:	96 e9       	ldi	r25, 0x96	; 150
 464:	11 c0       	rjmp	.+34     	; 0x488 <__stack+0x29>
 466:	77 23       	and	r23, r23
 468:	21 f0       	breq	.+8      	; 0x472 <__stack+0x13>
 46a:	9e e8       	ldi	r25, 0x8E	; 142
 46c:	87 2f       	mov	r24, r23
 46e:	76 2f       	mov	r23, r22
 470:	05 c0       	rjmp	.+10     	; 0x47c <__stack+0x1d>
 472:	66 23       	and	r22, r22
 474:	71 f0       	breq	.+28     	; 0x492 <__stack+0x33>
 476:	96 e8       	ldi	r25, 0x86	; 134
 478:	86 2f       	mov	r24, r22
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	60 e0       	ldi	r22, 0x00	; 0
 47e:	2a f0       	brmi	.+10     	; 0x48a <__stack+0x2b>
 480:	9a 95       	dec	r25
 482:	66 0f       	add	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	88 1f       	adc	r24, r24
 488:	da f7       	brpl	.-10     	; 0x480 <__stack+0x21>
 48a:	88 0f       	add	r24, r24
 48c:	96 95       	lsr	r25
 48e:	87 95       	ror	r24
 490:	97 f9       	bld	r25, 7
 492:	08 95       	ret

00000494 <__fp_split3>:
 494:	57 fd       	sbrc	r21, 7
 496:	90 58       	subi	r25, 0x80	; 128
 498:	44 0f       	add	r20, r20
 49a:	55 1f       	adc	r21, r21
 49c:	59 f0       	breq	.+22     	; 0x4b4 <__fp_splitA+0x10>
 49e:	5f 3f       	cpi	r21, 0xFF	; 255
 4a0:	71 f0       	breq	.+28     	; 0x4be <__fp_splitA+0x1a>
 4a2:	47 95       	ror	r20

000004a4 <__fp_splitA>:
 4a4:	88 0f       	add	r24, r24
 4a6:	97 fb       	bst	r25, 7
 4a8:	99 1f       	adc	r25, r25
 4aa:	61 f0       	breq	.+24     	; 0x4c4 <__fp_splitA+0x20>
 4ac:	9f 3f       	cpi	r25, 0xFF	; 255
 4ae:	79 f0       	breq	.+30     	; 0x4ce <__fp_splitA+0x2a>
 4b0:	87 95       	ror	r24
 4b2:	08 95       	ret
 4b4:	12 16       	cp	r1, r18
 4b6:	13 06       	cpc	r1, r19
 4b8:	14 06       	cpc	r1, r20
 4ba:	55 1f       	adc	r21, r21
 4bc:	f2 cf       	rjmp	.-28     	; 0x4a2 <__fp_split3+0xe>
 4be:	46 95       	lsr	r20
 4c0:	f1 df       	rcall	.-30     	; 0x4a4 <__fp_splitA>
 4c2:	08 c0       	rjmp	.+16     	; 0x4d4 <__fp_splitA+0x30>
 4c4:	16 16       	cp	r1, r22
 4c6:	17 06       	cpc	r1, r23
 4c8:	18 06       	cpc	r1, r24
 4ca:	99 1f       	adc	r25, r25
 4cc:	f1 cf       	rjmp	.-30     	; 0x4b0 <__fp_splitA+0xc>
 4ce:	86 95       	lsr	r24
 4d0:	71 05       	cpc	r23, r1
 4d2:	61 05       	cpc	r22, r1
 4d4:	08 94       	sec
 4d6:	08 95       	ret

000004d8 <__fp_zero>:
 4d8:	e8 94       	clt

000004da <__fp_szero>:
 4da:	bb 27       	eor	r27, r27
 4dc:	66 27       	eor	r22, r22
 4de:	77 27       	eor	r23, r23
 4e0:	cb 01       	movw	r24, r22
 4e2:	97 f9       	bld	r25, 7
 4e4:	08 95       	ret

000004e6 <pow>:
 4e6:	fa 01       	movw	r30, r20
 4e8:	ee 0f       	add	r30, r30
 4ea:	ff 1f       	adc	r31, r31
 4ec:	30 96       	adiw	r30, 0x00	; 0
 4ee:	21 05       	cpc	r18, r1
 4f0:	31 05       	cpc	r19, r1
 4f2:	99 f1       	breq	.+102    	; 0x55a <pow+0x74>
 4f4:	61 15       	cp	r22, r1
 4f6:	71 05       	cpc	r23, r1
 4f8:	61 f4       	brne	.+24     	; 0x512 <pow+0x2c>
 4fa:	80 38       	cpi	r24, 0x80	; 128
 4fc:	bf e3       	ldi	r27, 0x3F	; 63
 4fe:	9b 07       	cpc	r25, r27
 500:	49 f1       	breq	.+82     	; 0x554 <pow+0x6e>
 502:	68 94       	set
 504:	90 38       	cpi	r25, 0x80	; 128
 506:	81 05       	cpc	r24, r1
 508:	61 f0       	breq	.+24     	; 0x522 <pow+0x3c>
 50a:	80 38       	cpi	r24, 0x80	; 128
 50c:	bf ef       	ldi	r27, 0xFF	; 255
 50e:	9b 07       	cpc	r25, r27
 510:	41 f0       	breq	.+16     	; 0x522 <pow+0x3c>
 512:	99 23       	and	r25, r25
 514:	42 f5       	brpl	.+80     	; 0x566 <pow+0x80>
 516:	ff 3f       	cpi	r31, 0xFF	; 255
 518:	e1 05       	cpc	r30, r1
 51a:	31 05       	cpc	r19, r1
 51c:	21 05       	cpc	r18, r1
 51e:	11 f1       	breq	.+68     	; 0x564 <pow+0x7e>
 520:	e8 94       	clt
 522:	08 94       	sec
 524:	e7 95       	ror	r30
 526:	d9 01       	movw	r26, r18
 528:	aa 23       	and	r26, r26
 52a:	29 f4       	brne	.+10     	; 0x536 <pow+0x50>
 52c:	ab 2f       	mov	r26, r27
 52e:	be 2f       	mov	r27, r30
 530:	f8 5f       	subi	r31, 0xF8	; 248
 532:	d0 f3       	brcs	.-12     	; 0x528 <pow+0x42>
 534:	10 c0       	rjmp	.+32     	; 0x556 <pow+0x70>
 536:	ff 5f       	subi	r31, 0xFF	; 255
 538:	70 f4       	brcc	.+28     	; 0x556 <pow+0x70>
 53a:	a6 95       	lsr	r26
 53c:	e0 f7       	brcc	.-8      	; 0x536 <pow+0x50>
 53e:	f7 39       	cpi	r31, 0x97	; 151
 540:	50 f0       	brcs	.+20     	; 0x556 <pow+0x70>
 542:	19 f0       	breq	.+6      	; 0x54a <pow+0x64>
 544:	ff 3a       	cpi	r31, 0xAF	; 175
 546:	38 f4       	brcc	.+14     	; 0x556 <pow+0x70>
 548:	9f 77       	andi	r25, 0x7F	; 127
 54a:	9f 93       	push	r25
 54c:	0c d0       	rcall	.+24     	; 0x566 <pow+0x80>
 54e:	0f 90       	pop	r0
 550:	07 fc       	sbrc	r0, 7
 552:	90 58       	subi	r25, 0x80	; 128
 554:	08 95       	ret
 556:	3e f0       	brts	.+14     	; 0x566 <pow+0x80>
 558:	49 c0       	rjmp	.+146    	; 0x5ec <__fp_nan>
 55a:	60 e0       	ldi	r22, 0x00	; 0
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	80 e8       	ldi	r24, 0x80	; 128
 560:	9f e3       	ldi	r25, 0x3F	; 63
 562:	08 95       	ret
 564:	4f e7       	ldi	r20, 0x7F	; 127
 566:	9f 77       	andi	r25, 0x7F	; 127
 568:	5f 93       	push	r21
 56a:	4f 93       	push	r20
 56c:	3f 93       	push	r19
 56e:	2f 93       	push	r18
 570:	a7 d0       	rcall	.+334    	; 0x6c0 <log>
 572:	2f 91       	pop	r18
 574:	3f 91       	pop	r19
 576:	4f 91       	pop	r20
 578:	5f 91       	pop	r21
 57a:	15 d1       	rcall	.+554    	; 0x7a6 <__mulsf3>
 57c:	05 c0       	rjmp	.+10     	; 0x588 <exp>
 57e:	19 f4       	brne	.+6      	; 0x586 <pow+0xa0>
 580:	0e f0       	brts	.+2      	; 0x584 <pow+0x9e>
 582:	2e c0       	rjmp	.+92     	; 0x5e0 <__fp_inf>
 584:	a9 cf       	rjmp	.-174    	; 0x4d8 <__fp_zero>
 586:	32 c0       	rjmp	.+100    	; 0x5ec <__fp_nan>

00000588 <exp>:
 588:	8d df       	rcall	.-230    	; 0x4a4 <__fp_splitA>
 58a:	c8 f3       	brcs	.-14     	; 0x57e <pow+0x98>
 58c:	96 38       	cpi	r25, 0x86	; 134
 58e:	c0 f7       	brcc	.-16     	; 0x580 <pow+0x9a>
 590:	07 f8       	bld	r0, 7
 592:	0f 92       	push	r0
 594:	e8 94       	clt
 596:	2b e3       	ldi	r18, 0x3B	; 59
 598:	3a ea       	ldi	r19, 0xAA	; 170
 59a:	48 eb       	ldi	r20, 0xB8	; 184
 59c:	5f e7       	ldi	r21, 0x7F	; 127
 59e:	11 d1       	rcall	.+546    	; 0x7c2 <__mulsf3_pse>
 5a0:	0f 92       	push	r0
 5a2:	0f 92       	push	r0
 5a4:	0f 92       	push	r0
 5a6:	4d b7       	in	r20, 0x3d	; 61
 5a8:	5e b7       	in	r21, 0x3e	; 62
 5aa:	0f 92       	push	r0
 5ac:	c9 d0       	rcall	.+402    	; 0x740 <modf>
 5ae:	e4 e5       	ldi	r30, 0x54	; 84
 5b0:	f0 e0       	ldi	r31, 0x00	; 0
 5b2:	1f d0       	rcall	.+62     	; 0x5f2 <__fp_powser>
 5b4:	4f 91       	pop	r20
 5b6:	5f 91       	pop	r21
 5b8:	ef 91       	pop	r30
 5ba:	ff 91       	pop	r31
 5bc:	e5 95       	asr	r30
 5be:	ee 1f       	adc	r30, r30
 5c0:	ff 1f       	adc	r31, r31
 5c2:	49 f0       	breq	.+18     	; 0x5d6 <exp+0x4e>
 5c4:	fe 57       	subi	r31, 0x7E	; 126
 5c6:	e0 68       	ori	r30, 0x80	; 128
 5c8:	44 27       	eor	r20, r20
 5ca:	ee 0f       	add	r30, r30
 5cc:	44 1f       	adc	r20, r20
 5ce:	fa 95       	dec	r31
 5d0:	e1 f7       	brne	.-8      	; 0x5ca <exp+0x42>
 5d2:	41 95       	neg	r20
 5d4:	55 0b       	sbc	r21, r21
 5d6:	3b d0       	rcall	.+118    	; 0x64e <ldexp>
 5d8:	0f 90       	pop	r0
 5da:	07 fe       	sbrs	r0, 7
 5dc:	2f c0       	rjmp	.+94     	; 0x63c <inverse>
 5de:	08 95       	ret

000005e0 <__fp_inf>:
 5e0:	97 f9       	bld	r25, 7
 5e2:	9f 67       	ori	r25, 0x7F	; 127
 5e4:	80 e8       	ldi	r24, 0x80	; 128
 5e6:	70 e0       	ldi	r23, 0x00	; 0
 5e8:	60 e0       	ldi	r22, 0x00	; 0
 5ea:	08 95       	ret

000005ec <__fp_nan>:
 5ec:	9f ef       	ldi	r25, 0xFF	; 255
 5ee:	80 ec       	ldi	r24, 0xC0	; 192
 5f0:	08 95       	ret

000005f2 <__fp_powser>:
 5f2:	df 93       	push	r29
 5f4:	cf 93       	push	r28
 5f6:	1f 93       	push	r17
 5f8:	0f 93       	push	r16
 5fa:	ff 92       	push	r15
 5fc:	ef 92       	push	r14
 5fe:	df 92       	push	r13
 600:	7b 01       	movw	r14, r22
 602:	8c 01       	movw	r16, r24
 604:	68 94       	set
 606:	05 c0       	rjmp	.+10     	; 0x612 <__fp_powser+0x20>
 608:	da 2e       	mov	r13, r26
 60a:	ef 01       	movw	r28, r30
 60c:	d8 d0       	rcall	.+432    	; 0x7be <__mulsf3x>
 60e:	fe 01       	movw	r30, r28
 610:	e8 94       	clt
 612:	a5 91       	lpm	r26, Z+
 614:	25 91       	lpm	r18, Z+
 616:	35 91       	lpm	r19, Z+
 618:	45 91       	lpm	r20, Z+
 61a:	55 91       	lpm	r21, Z+
 61c:	ae f3       	brts	.-22     	; 0x608 <__fp_powser+0x16>
 61e:	ef 01       	movw	r28, r30
 620:	37 d1       	rcall	.+622    	; 0x890 <__addsf3x>
 622:	fe 01       	movw	r30, r28
 624:	97 01       	movw	r18, r14
 626:	a8 01       	movw	r20, r16
 628:	da 94       	dec	r13
 62a:	79 f7       	brne	.-34     	; 0x60a <__fp_powser+0x18>
 62c:	df 90       	pop	r13
 62e:	ef 90       	pop	r14
 630:	ff 90       	pop	r15
 632:	0f 91       	pop	r16
 634:	1f 91       	pop	r17
 636:	cf 91       	pop	r28
 638:	df 91       	pop	r29
 63a:	08 95       	ret

0000063c <inverse>:
 63c:	9b 01       	movw	r18, r22
 63e:	ac 01       	movw	r20, r24
 640:	60 e0       	ldi	r22, 0x00	; 0
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	80 e8       	ldi	r24, 0x80	; 128
 646:	9f e3       	ldi	r25, 0x3F	; 63
 648:	76 c1       	rjmp	.+748    	; 0x936 <__divsf3>
 64a:	ca cf       	rjmp	.-108    	; 0x5e0 <__fp_inf>
 64c:	dc c1       	rjmp	.+952    	; 0xa06 <__fp_mpack>

0000064e <ldexp>:
 64e:	2a df       	rcall	.-428    	; 0x4a4 <__fp_splitA>
 650:	e8 f3       	brcs	.-6      	; 0x64c <inverse+0x10>
 652:	99 23       	and	r25, r25
 654:	d9 f3       	breq	.-10     	; 0x64c <inverse+0x10>
 656:	94 0f       	add	r25, r20
 658:	51 1d       	adc	r21, r1
 65a:	bb f3       	brvs	.-18     	; 0x64a <inverse+0xe>
 65c:	91 50       	subi	r25, 0x01	; 1
 65e:	50 40       	sbci	r21, 0x00	; 0
 660:	94 f0       	brlt	.+36     	; 0x686 <ldexp+0x38>
 662:	59 f0       	breq	.+22     	; 0x67a <ldexp+0x2c>
 664:	88 23       	and	r24, r24
 666:	32 f0       	brmi	.+12     	; 0x674 <ldexp+0x26>
 668:	66 0f       	add	r22, r22
 66a:	77 1f       	adc	r23, r23
 66c:	88 1f       	adc	r24, r24
 66e:	91 50       	subi	r25, 0x01	; 1
 670:	50 40       	sbci	r21, 0x00	; 0
 672:	c1 f7       	brne	.-16     	; 0x664 <ldexp+0x16>
 674:	9e 3f       	cpi	r25, 0xFE	; 254
 676:	51 05       	cpc	r21, r1
 678:	44 f7       	brge	.-48     	; 0x64a <inverse+0xe>
 67a:	88 0f       	add	r24, r24
 67c:	91 1d       	adc	r25, r1
 67e:	96 95       	lsr	r25
 680:	87 95       	ror	r24
 682:	97 f9       	bld	r25, 7
 684:	08 95       	ret
 686:	5f 3f       	cpi	r21, 0xFF	; 255
 688:	ac f0       	brlt	.+42     	; 0x6b4 <ldexp+0x66>
 68a:	98 3e       	cpi	r25, 0xE8	; 232
 68c:	9c f0       	brlt	.+38     	; 0x6b4 <ldexp+0x66>
 68e:	bb 27       	eor	r27, r27
 690:	86 95       	lsr	r24
 692:	77 95       	ror	r23
 694:	67 95       	ror	r22
 696:	b7 95       	ror	r27
 698:	08 f4       	brcc	.+2      	; 0x69c <ldexp+0x4e>
 69a:	b1 60       	ori	r27, 0x01	; 1
 69c:	93 95       	inc	r25
 69e:	c1 f7       	brne	.-16     	; 0x690 <ldexp+0x42>
 6a0:	bb 0f       	add	r27, r27
 6a2:	58 f7       	brcc	.-42     	; 0x67a <ldexp+0x2c>
 6a4:	11 f4       	brne	.+4      	; 0x6aa <ldexp+0x5c>
 6a6:	60 ff       	sbrs	r22, 0
 6a8:	e8 cf       	rjmp	.-48     	; 0x67a <ldexp+0x2c>
 6aa:	6f 5f       	subi	r22, 0xFF	; 255
 6ac:	7f 4f       	sbci	r23, 0xFF	; 255
 6ae:	8f 4f       	sbci	r24, 0xFF	; 255
 6b0:	9f 4f       	sbci	r25, 0xFF	; 255
 6b2:	e3 cf       	rjmp	.-58     	; 0x67a <ldexp+0x2c>
 6b4:	12 cf       	rjmp	.-476    	; 0x4da <__fp_szero>
 6b6:	0e f0       	brts	.+2      	; 0x6ba <ldexp+0x6c>
 6b8:	a6 c1       	rjmp	.+844    	; 0xa06 <__fp_mpack>
 6ba:	98 cf       	rjmp	.-208    	; 0x5ec <__fp_nan>
 6bc:	68 94       	set
 6be:	90 cf       	rjmp	.-224    	; 0x5e0 <__fp_inf>

000006c0 <log>:
 6c0:	f1 de       	rcall	.-542    	; 0x4a4 <__fp_splitA>
 6c2:	c8 f3       	brcs	.-14     	; 0x6b6 <ldexp+0x68>
 6c4:	99 23       	and	r25, r25
 6c6:	d1 f3       	breq	.-12     	; 0x6bc <ldexp+0x6e>
 6c8:	c6 f3       	brts	.-16     	; 0x6ba <ldexp+0x6c>
 6ca:	df 93       	push	r29
 6cc:	cf 93       	push	r28
 6ce:	1f 93       	push	r17
 6d0:	0f 93       	push	r16
 6d2:	ff 92       	push	r15
 6d4:	c9 2f       	mov	r28, r25
 6d6:	dd 27       	eor	r29, r29
 6d8:	88 23       	and	r24, r24
 6da:	2a f0       	brmi	.+10     	; 0x6e6 <log+0x26>
 6dc:	21 97       	sbiw	r28, 0x01	; 1
 6de:	66 0f       	add	r22, r22
 6e0:	77 1f       	adc	r23, r23
 6e2:	88 1f       	adc	r24, r24
 6e4:	da f7       	brpl	.-10     	; 0x6dc <log+0x1c>
 6e6:	20 e0       	ldi	r18, 0x00	; 0
 6e8:	30 e0       	ldi	r19, 0x00	; 0
 6ea:	40 e8       	ldi	r20, 0x80	; 128
 6ec:	5f eb       	ldi	r21, 0xBF	; 191
 6ee:	9f e3       	ldi	r25, 0x3F	; 63
 6f0:	88 39       	cpi	r24, 0x98	; 152
 6f2:	20 f0       	brcs	.+8      	; 0x6fc <log+0x3c>
 6f4:	80 3e       	cpi	r24, 0xE0	; 224
 6f6:	30 f0       	brcs	.+12     	; 0x704 <log+0x44>
 6f8:	21 96       	adiw	r28, 0x01	; 1
 6fa:	8f 77       	andi	r24, 0x7F	; 127
 6fc:	b8 d0       	rcall	.+368    	; 0x86e <__addsf3>
 6fe:	ec e7       	ldi	r30, 0x7C	; 124
 700:	f0 e0       	ldi	r31, 0x00	; 0
 702:	03 c0       	rjmp	.+6      	; 0x70a <log+0x4a>
 704:	b4 d0       	rcall	.+360    	; 0x86e <__addsf3>
 706:	e9 ea       	ldi	r30, 0xA9	; 169
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	73 df       	rcall	.-282    	; 0x5f2 <__fp_powser>
 70c:	8b 01       	movw	r16, r22
 70e:	be 01       	movw	r22, r28
 710:	ec 01       	movw	r28, r24
 712:	fb 2e       	mov	r15, r27
 714:	6f 57       	subi	r22, 0x7F	; 127
 716:	71 09       	sbc	r23, r1
 718:	75 95       	asr	r23
 71a:	77 1f       	adc	r23, r23
 71c:	88 0b       	sbc	r24, r24
 71e:	99 0b       	sbc	r25, r25
 720:	7e de       	rcall	.-772    	; 0x41e <__floatsisf>
 722:	28 e1       	ldi	r18, 0x18	; 24
 724:	32 e7       	ldi	r19, 0x72	; 114
 726:	41 e3       	ldi	r20, 0x31	; 49
 728:	5f e3       	ldi	r21, 0x3F	; 63
 72a:	49 d0       	rcall	.+146    	; 0x7be <__mulsf3x>
 72c:	af 2d       	mov	r26, r15
 72e:	98 01       	movw	r18, r16
 730:	ae 01       	movw	r20, r28
 732:	ff 90       	pop	r15
 734:	0f 91       	pop	r16
 736:	1f 91       	pop	r17
 738:	cf 91       	pop	r28
 73a:	df 91       	pop	r29
 73c:	a9 d0       	rcall	.+338    	; 0x890 <__addsf3x>
 73e:	7f c1       	rjmp	.+766    	; 0xa3e <__fp_round>

00000740 <modf>:
 740:	fa 01       	movw	r30, r20
 742:	dc 01       	movw	r26, r24
 744:	aa 0f       	add	r26, r26
 746:	bb 1f       	adc	r27, r27
 748:	9b 01       	movw	r18, r22
 74a:	ac 01       	movw	r20, r24
 74c:	bf 57       	subi	r27, 0x7F	; 127
 74e:	28 f4       	brcc	.+10     	; 0x75a <modf+0x1a>
 750:	22 27       	eor	r18, r18
 752:	33 27       	eor	r19, r19
 754:	44 27       	eor	r20, r20
 756:	50 78       	andi	r21, 0x80	; 128
 758:	1f c0       	rjmp	.+62     	; 0x798 <modf+0x58>
 75a:	b7 51       	subi	r27, 0x17	; 23
 75c:	88 f4       	brcc	.+34     	; 0x780 <modf+0x40>
 75e:	ab 2f       	mov	r26, r27
 760:	00 24       	eor	r0, r0
 762:	46 95       	lsr	r20
 764:	37 95       	ror	r19
 766:	27 95       	ror	r18
 768:	01 1c       	adc	r0, r1
 76a:	a3 95       	inc	r26
 76c:	d2 f3       	brmi	.-12     	; 0x762 <modf+0x22>
 76e:	00 20       	and	r0, r0
 770:	69 f0       	breq	.+26     	; 0x78c <modf+0x4c>
 772:	22 0f       	add	r18, r18
 774:	33 1f       	adc	r19, r19
 776:	44 1f       	adc	r20, r20
 778:	b3 95       	inc	r27
 77a:	da f3       	brmi	.-10     	; 0x772 <modf+0x32>
 77c:	0d d0       	rcall	.+26     	; 0x798 <modf+0x58>
 77e:	76 c0       	rjmp	.+236    	; 0x86c <__subsf3>
 780:	61 30       	cpi	r22, 0x01	; 1
 782:	71 05       	cpc	r23, r1
 784:	a0 e8       	ldi	r26, 0x80	; 128
 786:	8a 07       	cpc	r24, r26
 788:	b9 46       	sbci	r27, 0x69	; 105
 78a:	30 f4       	brcc	.+12     	; 0x798 <modf+0x58>
 78c:	9b 01       	movw	r18, r22
 78e:	ac 01       	movw	r20, r24
 790:	66 27       	eor	r22, r22
 792:	77 27       	eor	r23, r23
 794:	88 27       	eor	r24, r24
 796:	90 78       	andi	r25, 0x80	; 128
 798:	30 96       	adiw	r30, 0x00	; 0
 79a:	21 f0       	breq	.+8      	; 0x7a4 <modf+0x64>
 79c:	20 83       	st	Z, r18
 79e:	31 83       	std	Z+1, r19	; 0x01
 7a0:	42 83       	std	Z+2, r20	; 0x02
 7a2:	53 83       	std	Z+3, r21	; 0x03
 7a4:	08 95       	ret

000007a6 <__mulsf3>:
 7a6:	0b d0       	rcall	.+22     	; 0x7be <__mulsf3x>
 7a8:	4a c1       	rjmp	.+660    	; 0xa3e <__fp_round>
 7aa:	3b d1       	rcall	.+630    	; 0xa22 <__fp_pscA>
 7ac:	28 f0       	brcs	.+10     	; 0x7b8 <__mulsf3+0x12>
 7ae:	40 d1       	rcall	.+640    	; 0xa30 <__fp_pscB>
 7b0:	18 f0       	brcs	.+6      	; 0x7b8 <__mulsf3+0x12>
 7b2:	95 23       	and	r25, r21
 7b4:	09 f0       	breq	.+2      	; 0x7b8 <__mulsf3+0x12>
 7b6:	14 cf       	rjmp	.-472    	; 0x5e0 <__fp_inf>
 7b8:	19 cf       	rjmp	.-462    	; 0x5ec <__fp_nan>
 7ba:	11 24       	eor	r1, r1
 7bc:	8e ce       	rjmp	.-740    	; 0x4da <__fp_szero>

000007be <__mulsf3x>:
 7be:	6a de       	rcall	.-812    	; 0x494 <__fp_split3>
 7c0:	a0 f3       	brcs	.-24     	; 0x7aa <__mulsf3+0x4>

000007c2 <__mulsf3_pse>:
 7c2:	95 9f       	mul	r25, r21
 7c4:	d1 f3       	breq	.-12     	; 0x7ba <__mulsf3+0x14>
 7c6:	95 0f       	add	r25, r21
 7c8:	50 e0       	ldi	r21, 0x00	; 0
 7ca:	55 1f       	adc	r21, r21
 7cc:	62 9f       	mul	r22, r18
 7ce:	f0 01       	movw	r30, r0
 7d0:	72 9f       	mul	r23, r18
 7d2:	bb 27       	eor	r27, r27
 7d4:	f0 0d       	add	r31, r0
 7d6:	b1 1d       	adc	r27, r1
 7d8:	63 9f       	mul	r22, r19
 7da:	aa 27       	eor	r26, r26
 7dc:	f0 0d       	add	r31, r0
 7de:	b1 1d       	adc	r27, r1
 7e0:	aa 1f       	adc	r26, r26
 7e2:	64 9f       	mul	r22, r20
 7e4:	66 27       	eor	r22, r22
 7e6:	b0 0d       	add	r27, r0
 7e8:	a1 1d       	adc	r26, r1
 7ea:	66 1f       	adc	r22, r22
 7ec:	82 9f       	mul	r24, r18
 7ee:	22 27       	eor	r18, r18
 7f0:	b0 0d       	add	r27, r0
 7f2:	a1 1d       	adc	r26, r1
 7f4:	62 1f       	adc	r22, r18
 7f6:	73 9f       	mul	r23, r19
 7f8:	b0 0d       	add	r27, r0
 7fa:	a1 1d       	adc	r26, r1
 7fc:	62 1f       	adc	r22, r18
 7fe:	83 9f       	mul	r24, r19
 800:	a0 0d       	add	r26, r0
 802:	61 1d       	adc	r22, r1
 804:	22 1f       	adc	r18, r18
 806:	74 9f       	mul	r23, r20
 808:	33 27       	eor	r19, r19
 80a:	a0 0d       	add	r26, r0
 80c:	61 1d       	adc	r22, r1
 80e:	23 1f       	adc	r18, r19
 810:	84 9f       	mul	r24, r20
 812:	60 0d       	add	r22, r0
 814:	21 1d       	adc	r18, r1
 816:	82 2f       	mov	r24, r18
 818:	76 2f       	mov	r23, r22
 81a:	6a 2f       	mov	r22, r26
 81c:	11 24       	eor	r1, r1
 81e:	9f 57       	subi	r25, 0x7F	; 127
 820:	50 40       	sbci	r21, 0x00	; 0
 822:	8a f0       	brmi	.+34     	; 0x846 <__mulsf3_pse+0x84>
 824:	e1 f0       	breq	.+56     	; 0x85e <__mulsf3_pse+0x9c>
 826:	88 23       	and	r24, r24
 828:	4a f0       	brmi	.+18     	; 0x83c <__mulsf3_pse+0x7a>
 82a:	ee 0f       	add	r30, r30
 82c:	ff 1f       	adc	r31, r31
 82e:	bb 1f       	adc	r27, r27
 830:	66 1f       	adc	r22, r22
 832:	77 1f       	adc	r23, r23
 834:	88 1f       	adc	r24, r24
 836:	91 50       	subi	r25, 0x01	; 1
 838:	50 40       	sbci	r21, 0x00	; 0
 83a:	a9 f7       	brne	.-22     	; 0x826 <__mulsf3_pse+0x64>
 83c:	9e 3f       	cpi	r25, 0xFE	; 254
 83e:	51 05       	cpc	r21, r1
 840:	70 f0       	brcs	.+28     	; 0x85e <__mulsf3_pse+0x9c>
 842:	ce ce       	rjmp	.-612    	; 0x5e0 <__fp_inf>
 844:	4a ce       	rjmp	.-876    	; 0x4da <__fp_szero>
 846:	5f 3f       	cpi	r21, 0xFF	; 255
 848:	ec f3       	brlt	.-6      	; 0x844 <__mulsf3_pse+0x82>
 84a:	98 3e       	cpi	r25, 0xE8	; 232
 84c:	dc f3       	brlt	.-10     	; 0x844 <__mulsf3_pse+0x82>
 84e:	86 95       	lsr	r24
 850:	77 95       	ror	r23
 852:	67 95       	ror	r22
 854:	b7 95       	ror	r27
 856:	f7 95       	ror	r31
 858:	e7 95       	ror	r30
 85a:	9f 5f       	subi	r25, 0xFF	; 255
 85c:	c1 f7       	brne	.-16     	; 0x84e <__mulsf3_pse+0x8c>
 85e:	fe 2b       	or	r31, r30
 860:	88 0f       	add	r24, r24
 862:	91 1d       	adc	r25, r1
 864:	96 95       	lsr	r25
 866:	87 95       	ror	r24
 868:	97 f9       	bld	r25, 7
 86a:	08 95       	ret

0000086c <__subsf3>:
 86c:	50 58       	subi	r21, 0x80	; 128

0000086e <__addsf3>:
 86e:	bb 27       	eor	r27, r27
 870:	aa 27       	eor	r26, r26
 872:	0e d0       	rcall	.+28     	; 0x890 <__addsf3x>
 874:	e4 c0       	rjmp	.+456    	; 0xa3e <__fp_round>
 876:	d5 d0       	rcall	.+426    	; 0xa22 <__fp_pscA>
 878:	30 f0       	brcs	.+12     	; 0x886 <__addsf3+0x18>
 87a:	da d0       	rcall	.+436    	; 0xa30 <__fp_pscB>
 87c:	20 f0       	brcs	.+8      	; 0x886 <__addsf3+0x18>
 87e:	31 f4       	brne	.+12     	; 0x88c <__addsf3+0x1e>
 880:	9f 3f       	cpi	r25, 0xFF	; 255
 882:	11 f4       	brne	.+4      	; 0x888 <__addsf3+0x1a>
 884:	1e f4       	brtc	.+6      	; 0x88c <__addsf3+0x1e>
 886:	b2 ce       	rjmp	.-668    	; 0x5ec <__fp_nan>
 888:	0e f4       	brtc	.+2      	; 0x88c <__addsf3+0x1e>
 88a:	e0 95       	com	r30
 88c:	e7 fb       	bst	r30, 7
 88e:	a8 ce       	rjmp	.-688    	; 0x5e0 <__fp_inf>

00000890 <__addsf3x>:
 890:	e9 2f       	mov	r30, r25
 892:	00 de       	rcall	.-1024   	; 0x494 <__fp_split3>
 894:	80 f3       	brcs	.-32     	; 0x876 <__addsf3+0x8>
 896:	ba 17       	cp	r27, r26
 898:	62 07       	cpc	r22, r18
 89a:	73 07       	cpc	r23, r19
 89c:	84 07       	cpc	r24, r20
 89e:	95 07       	cpc	r25, r21
 8a0:	18 f0       	brcs	.+6      	; 0x8a8 <__addsf3x+0x18>
 8a2:	71 f4       	brne	.+28     	; 0x8c0 <__addsf3x+0x30>
 8a4:	9e f5       	brtc	.+102    	; 0x90c <__addsf3x+0x7c>
 8a6:	18 ce       	rjmp	.-976    	; 0x4d8 <__fp_zero>
 8a8:	0e f4       	brtc	.+2      	; 0x8ac <__addsf3x+0x1c>
 8aa:	e0 95       	com	r30
 8ac:	0b 2e       	mov	r0, r27
 8ae:	ba 2f       	mov	r27, r26
 8b0:	a0 2d       	mov	r26, r0
 8b2:	0b 01       	movw	r0, r22
 8b4:	b9 01       	movw	r22, r18
 8b6:	90 01       	movw	r18, r0
 8b8:	0c 01       	movw	r0, r24
 8ba:	ca 01       	movw	r24, r20
 8bc:	a0 01       	movw	r20, r0
 8be:	11 24       	eor	r1, r1
 8c0:	ff 27       	eor	r31, r31
 8c2:	59 1b       	sub	r21, r25
 8c4:	99 f0       	breq	.+38     	; 0x8ec <__addsf3x+0x5c>
 8c6:	59 3f       	cpi	r21, 0xF9	; 249
 8c8:	50 f4       	brcc	.+20     	; 0x8de <__addsf3x+0x4e>
 8ca:	50 3e       	cpi	r21, 0xE0	; 224
 8cc:	68 f1       	brcs	.+90     	; 0x928 <__addsf3x+0x98>
 8ce:	1a 16       	cp	r1, r26
 8d0:	f0 40       	sbci	r31, 0x00	; 0
 8d2:	a2 2f       	mov	r26, r18
 8d4:	23 2f       	mov	r18, r19
 8d6:	34 2f       	mov	r19, r20
 8d8:	44 27       	eor	r20, r20
 8da:	58 5f       	subi	r21, 0xF8	; 248
 8dc:	f3 cf       	rjmp	.-26     	; 0x8c4 <__addsf3x+0x34>
 8de:	46 95       	lsr	r20
 8e0:	37 95       	ror	r19
 8e2:	27 95       	ror	r18
 8e4:	a7 95       	ror	r26
 8e6:	f0 40       	sbci	r31, 0x00	; 0
 8e8:	53 95       	inc	r21
 8ea:	c9 f7       	brne	.-14     	; 0x8de <__addsf3x+0x4e>
 8ec:	7e f4       	brtc	.+30     	; 0x90c <__addsf3x+0x7c>
 8ee:	1f 16       	cp	r1, r31
 8f0:	ba 0b       	sbc	r27, r26
 8f2:	62 0b       	sbc	r22, r18
 8f4:	73 0b       	sbc	r23, r19
 8f6:	84 0b       	sbc	r24, r20
 8f8:	ba f0       	brmi	.+46     	; 0x928 <__addsf3x+0x98>
 8fa:	91 50       	subi	r25, 0x01	; 1
 8fc:	a1 f0       	breq	.+40     	; 0x926 <__addsf3x+0x96>
 8fe:	ff 0f       	add	r31, r31
 900:	bb 1f       	adc	r27, r27
 902:	66 1f       	adc	r22, r22
 904:	77 1f       	adc	r23, r23
 906:	88 1f       	adc	r24, r24
 908:	c2 f7       	brpl	.-16     	; 0x8fa <__addsf3x+0x6a>
 90a:	0e c0       	rjmp	.+28     	; 0x928 <__addsf3x+0x98>
 90c:	ba 0f       	add	r27, r26
 90e:	62 1f       	adc	r22, r18
 910:	73 1f       	adc	r23, r19
 912:	84 1f       	adc	r24, r20
 914:	48 f4       	brcc	.+18     	; 0x928 <__addsf3x+0x98>
 916:	87 95       	ror	r24
 918:	77 95       	ror	r23
 91a:	67 95       	ror	r22
 91c:	b7 95       	ror	r27
 91e:	f7 95       	ror	r31
 920:	9e 3f       	cpi	r25, 0xFE	; 254
 922:	08 f0       	brcs	.+2      	; 0x926 <__addsf3x+0x96>
 924:	b3 cf       	rjmp	.-154    	; 0x88c <__addsf3+0x1e>
 926:	93 95       	inc	r25
 928:	88 0f       	add	r24, r24
 92a:	08 f0       	brcs	.+2      	; 0x92e <__addsf3x+0x9e>
 92c:	99 27       	eor	r25, r25
 92e:	ee 0f       	add	r30, r30
 930:	97 95       	ror	r25
 932:	87 95       	ror	r24
 934:	08 95       	ret

00000936 <__divsf3>:
 936:	0c d0       	rcall	.+24     	; 0x950 <__divsf3x>
 938:	82 c0       	rjmp	.+260    	; 0xa3e <__fp_round>
 93a:	7a d0       	rcall	.+244    	; 0xa30 <__fp_pscB>
 93c:	40 f0       	brcs	.+16     	; 0x94e <__divsf3+0x18>
 93e:	71 d0       	rcall	.+226    	; 0xa22 <__fp_pscA>
 940:	30 f0       	brcs	.+12     	; 0x94e <__divsf3+0x18>
 942:	21 f4       	brne	.+8      	; 0x94c <__divsf3+0x16>
 944:	5f 3f       	cpi	r21, 0xFF	; 255
 946:	19 f0       	breq	.+6      	; 0x94e <__divsf3+0x18>
 948:	4b ce       	rjmp	.-874    	; 0x5e0 <__fp_inf>
 94a:	51 11       	cpse	r21, r1
 94c:	c6 cd       	rjmp	.-1140   	; 0x4da <__fp_szero>
 94e:	4e ce       	rjmp	.-868    	; 0x5ec <__fp_nan>

00000950 <__divsf3x>:
 950:	a1 dd       	rcall	.-1214   	; 0x494 <__fp_split3>
 952:	98 f3       	brcs	.-26     	; 0x93a <__divsf3+0x4>

00000954 <__divsf3_pse>:
 954:	99 23       	and	r25, r25
 956:	c9 f3       	breq	.-14     	; 0x94a <__divsf3+0x14>
 958:	55 23       	and	r21, r21
 95a:	b1 f3       	breq	.-20     	; 0x948 <__divsf3+0x12>
 95c:	95 1b       	sub	r25, r21
 95e:	55 0b       	sbc	r21, r21
 960:	bb 27       	eor	r27, r27
 962:	aa 27       	eor	r26, r26
 964:	62 17       	cp	r22, r18
 966:	73 07       	cpc	r23, r19
 968:	84 07       	cpc	r24, r20
 96a:	38 f0       	brcs	.+14     	; 0x97a <__divsf3_pse+0x26>
 96c:	9f 5f       	subi	r25, 0xFF	; 255
 96e:	5f 4f       	sbci	r21, 0xFF	; 255
 970:	22 0f       	add	r18, r18
 972:	33 1f       	adc	r19, r19
 974:	44 1f       	adc	r20, r20
 976:	aa 1f       	adc	r26, r26
 978:	a9 f3       	breq	.-22     	; 0x964 <__divsf3_pse+0x10>
 97a:	33 d0       	rcall	.+102    	; 0x9e2 <__divsf3_pse+0x8e>
 97c:	0e 2e       	mov	r0, r30
 97e:	3a f0       	brmi	.+14     	; 0x98e <__divsf3_pse+0x3a>
 980:	e0 e8       	ldi	r30, 0x80	; 128
 982:	30 d0       	rcall	.+96     	; 0x9e4 <__divsf3_pse+0x90>
 984:	91 50       	subi	r25, 0x01	; 1
 986:	50 40       	sbci	r21, 0x00	; 0
 988:	e6 95       	lsr	r30
 98a:	00 1c       	adc	r0, r0
 98c:	ca f7       	brpl	.-14     	; 0x980 <__divsf3_pse+0x2c>
 98e:	29 d0       	rcall	.+82     	; 0x9e2 <__divsf3_pse+0x8e>
 990:	fe 2f       	mov	r31, r30
 992:	27 d0       	rcall	.+78     	; 0x9e2 <__divsf3_pse+0x8e>
 994:	66 0f       	add	r22, r22
 996:	77 1f       	adc	r23, r23
 998:	88 1f       	adc	r24, r24
 99a:	bb 1f       	adc	r27, r27
 99c:	26 17       	cp	r18, r22
 99e:	37 07       	cpc	r19, r23
 9a0:	48 07       	cpc	r20, r24
 9a2:	ab 07       	cpc	r26, r27
 9a4:	b0 e8       	ldi	r27, 0x80	; 128
 9a6:	09 f0       	breq	.+2      	; 0x9aa <__divsf3_pse+0x56>
 9a8:	bb 0b       	sbc	r27, r27
 9aa:	80 2d       	mov	r24, r0
 9ac:	bf 01       	movw	r22, r30
 9ae:	ff 27       	eor	r31, r31
 9b0:	93 58       	subi	r25, 0x83	; 131
 9b2:	5f 4f       	sbci	r21, 0xFF	; 255
 9b4:	2a f0       	brmi	.+10     	; 0x9c0 <__divsf3_pse+0x6c>
 9b6:	9e 3f       	cpi	r25, 0xFE	; 254
 9b8:	51 05       	cpc	r21, r1
 9ba:	68 f0       	brcs	.+26     	; 0x9d6 <__divsf3_pse+0x82>
 9bc:	11 ce       	rjmp	.-990    	; 0x5e0 <__fp_inf>
 9be:	8d cd       	rjmp	.-1254   	; 0x4da <__fp_szero>
 9c0:	5f 3f       	cpi	r21, 0xFF	; 255
 9c2:	ec f3       	brlt	.-6      	; 0x9be <__divsf3_pse+0x6a>
 9c4:	98 3e       	cpi	r25, 0xE8	; 232
 9c6:	dc f3       	brlt	.-10     	; 0x9be <__divsf3_pse+0x6a>
 9c8:	86 95       	lsr	r24
 9ca:	77 95       	ror	r23
 9cc:	67 95       	ror	r22
 9ce:	b7 95       	ror	r27
 9d0:	f7 95       	ror	r31
 9d2:	9f 5f       	subi	r25, 0xFF	; 255
 9d4:	c9 f7       	brne	.-14     	; 0x9c8 <__divsf3_pse+0x74>
 9d6:	88 0f       	add	r24, r24
 9d8:	91 1d       	adc	r25, r1
 9da:	96 95       	lsr	r25
 9dc:	87 95       	ror	r24
 9de:	97 f9       	bld	r25, 7
 9e0:	08 95       	ret
 9e2:	e1 e0       	ldi	r30, 0x01	; 1
 9e4:	66 0f       	add	r22, r22
 9e6:	77 1f       	adc	r23, r23
 9e8:	88 1f       	adc	r24, r24
 9ea:	bb 1f       	adc	r27, r27
 9ec:	62 17       	cp	r22, r18
 9ee:	73 07       	cpc	r23, r19
 9f0:	84 07       	cpc	r24, r20
 9f2:	ba 07       	cpc	r27, r26
 9f4:	20 f0       	brcs	.+8      	; 0x9fe <__divsf3_pse+0xaa>
 9f6:	62 1b       	sub	r22, r18
 9f8:	73 0b       	sbc	r23, r19
 9fa:	84 0b       	sbc	r24, r20
 9fc:	ba 0b       	sbc	r27, r26
 9fe:	ee 1f       	adc	r30, r30
 a00:	88 f7       	brcc	.-30     	; 0x9e4 <__divsf3_pse+0x90>
 a02:	e0 95       	com	r30
 a04:	08 95       	ret

00000a06 <__fp_mpack>:
 a06:	9f 3f       	cpi	r25, 0xFF	; 255
 a08:	31 f0       	breq	.+12     	; 0xa16 <__fp_mpack_finite+0xc>

00000a0a <__fp_mpack_finite>:
 a0a:	91 50       	subi	r25, 0x01	; 1
 a0c:	20 f4       	brcc	.+8      	; 0xa16 <__fp_mpack_finite+0xc>
 a0e:	87 95       	ror	r24
 a10:	77 95       	ror	r23
 a12:	67 95       	ror	r22
 a14:	b7 95       	ror	r27
 a16:	88 0f       	add	r24, r24
 a18:	91 1d       	adc	r25, r1
 a1a:	96 95       	lsr	r25
 a1c:	87 95       	ror	r24
 a1e:	97 f9       	bld	r25, 7
 a20:	08 95       	ret

00000a22 <__fp_pscA>:
 a22:	00 24       	eor	r0, r0
 a24:	0a 94       	dec	r0
 a26:	16 16       	cp	r1, r22
 a28:	17 06       	cpc	r1, r23
 a2a:	18 06       	cpc	r1, r24
 a2c:	09 06       	cpc	r0, r25
 a2e:	08 95       	ret

00000a30 <__fp_pscB>:
 a30:	00 24       	eor	r0, r0
 a32:	0a 94       	dec	r0
 a34:	12 16       	cp	r1, r18
 a36:	13 06       	cpc	r1, r19
 a38:	14 06       	cpc	r1, r20
 a3a:	05 06       	cpc	r0, r21
 a3c:	08 95       	ret

00000a3e <__fp_round>:
 a3e:	09 2e       	mov	r0, r25
 a40:	03 94       	inc	r0
 a42:	00 0c       	add	r0, r0
 a44:	11 f4       	brne	.+4      	; 0xa4a <__fp_round+0xc>
 a46:	88 23       	and	r24, r24
 a48:	52 f0       	brmi	.+20     	; 0xa5e <__fp_round+0x20>
 a4a:	bb 0f       	add	r27, r27
 a4c:	40 f4       	brcc	.+16     	; 0xa5e <__fp_round+0x20>
 a4e:	bf 2b       	or	r27, r31
 a50:	11 f4       	brne	.+4      	; 0xa56 <__fp_round+0x18>
 a52:	60 ff       	sbrs	r22, 0
 a54:	04 c0       	rjmp	.+8      	; 0xa5e <__fp_round+0x20>
 a56:	6f 5f       	subi	r22, 0xFF	; 255
 a58:	7f 4f       	sbci	r23, 0xFF	; 255
 a5a:	8f 4f       	sbci	r24, 0xFF	; 255
 a5c:	9f 4f       	sbci	r25, 0xFF	; 255
 a5e:	08 95       	ret

00000a60 <__udivmodhi4>:
 a60:	aa 1b       	sub	r26, r26
 a62:	bb 1b       	sub	r27, r27
 a64:	51 e1       	ldi	r21, 0x11	; 17
 a66:	07 c0       	rjmp	.+14     	; 0xa76 <__udivmodhi4_ep>

00000a68 <__udivmodhi4_loop>:
 a68:	aa 1f       	adc	r26, r26
 a6a:	bb 1f       	adc	r27, r27
 a6c:	a6 17       	cp	r26, r22
 a6e:	b7 07       	cpc	r27, r23
 a70:	10 f0       	brcs	.+4      	; 0xa76 <__udivmodhi4_ep>
 a72:	a6 1b       	sub	r26, r22
 a74:	b7 0b       	sbc	r27, r23

00000a76 <__udivmodhi4_ep>:
 a76:	88 1f       	adc	r24, r24
 a78:	99 1f       	adc	r25, r25
 a7a:	5a 95       	dec	r21
 a7c:	a9 f7       	brne	.-22     	; 0xa68 <__udivmodhi4_loop>
 a7e:	80 95       	com	r24
 a80:	90 95       	com	r25
 a82:	bc 01       	movw	r22, r24
 a84:	cd 01       	movw	r24, r26
 a86:	08 95       	ret

00000a88 <__divmodhi4>:
 a88:	97 fb       	bst	r25, 7
 a8a:	09 2e       	mov	r0, r25
 a8c:	07 26       	eor	r0, r23
 a8e:	0a d0       	rcall	.+20     	; 0xaa4 <__divmodhi4_neg1>
 a90:	77 fd       	sbrc	r23, 7
 a92:	04 d0       	rcall	.+8      	; 0xa9c <__divmodhi4_neg2>
 a94:	e5 df       	rcall	.-54     	; 0xa60 <__udivmodhi4>
 a96:	06 d0       	rcall	.+12     	; 0xaa4 <__divmodhi4_neg1>
 a98:	00 20       	and	r0, r0
 a9a:	1a f4       	brpl	.+6      	; 0xaa2 <__divmodhi4_exit>

00000a9c <__divmodhi4_neg2>:
 a9c:	70 95       	com	r23
 a9e:	61 95       	neg	r22
 aa0:	7f 4f       	sbci	r23, 0xFF	; 255

00000aa2 <__divmodhi4_exit>:
 aa2:	08 95       	ret

00000aa4 <__divmodhi4_neg1>:
 aa4:	f6 f7       	brtc	.-4      	; 0xaa2 <__divmodhi4_exit>
 aa6:	90 95       	com	r25
 aa8:	81 95       	neg	r24
 aaa:	9f 4f       	sbci	r25, 0xFF	; 255
 aac:	08 95       	ret

00000aae <_exit>:
 aae:	f8 94       	cli

00000ab0 <__stop_program>:
 ab0:	ff cf       	rjmp	.-2      	; 0xab0 <__stop_program>
