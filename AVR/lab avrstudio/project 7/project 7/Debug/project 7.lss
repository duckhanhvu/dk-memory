
project 7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f40  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000032  00800060  00000f40  00000fd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  00800092  00800092  00001006  2**0
                  ALLOC
  3 .stab         000033e4  00000000  00000000  00001008  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000abd  00000000  00000000  000043ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  00004ea9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000019c  00000000  00000000  00004ee9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000635  00000000  00000000  00005085  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000027d  00000000  00000000  000056ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000755  00000000  00000000  00005937  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000110  00000000  00000000  0000608c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000218  00000000  00000000  0000619c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000024f  00000000  00000000  000063b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000063  00000000  00000000  00006603  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   c:	0c 94 91 02 	jmp	0x522	; 0x522 <__vector_3>
  10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  14:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__vector_5>
  18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <pow+0x14>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e0 e4       	ldi	r30, 0x40	; 64
  ea:	ff e0       	ldi	r31, 0x0F	; 15
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	a2 39       	cpi	r26, 0x92	; 146
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
  f8:	10 e0       	ldi	r17, 0x00	; 0
  fa:	a2 e9       	ldi	r26, 0x92	; 146
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
 100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
 102:	a7 3b       	cpi	r26, 0xB7	; 183
 104:	b1 07       	cpc	r27, r17
 106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
 108:	0e 94 e7 01 	call	0x3ce	; 0x3ce <main>
 10c:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <_exit>

00000110 <__bad_interrupt>:
 110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <MOTOR_Speed_PID>:
volatile long int pPart=0, iPart=0, dPart=0;
volatile long int Ctrl_speed=5;
volatile long int output;
volatile unsigned char sample_count=0;

void MOTOR_Speed_PID(long int des_speed){
 114:	af 92       	push	r10
 116:	bf 92       	push	r11
 118:	cf 92       	push	r12
 11a:	df 92       	push	r13
 11c:	ef 92       	push	r14
 11e:	ff 92       	push	r15
 120:	0f 93       	push	r16
 122:	1f 93       	push	r17
 124:	9b 01       	movw	r18, r22
 126:	ac 01       	movw	r20, r24
	rSpeed=pulse-pre_pulse;
 128:	e0 90 af 00 	lds	r14, 0x00AF
 12c:	f0 90 b0 00 	lds	r15, 0x00B0
 130:	00 91 b1 00 	lds	r16, 0x00B1
 134:	10 91 b2 00 	lds	r17, 0x00B2
 138:	60 91 a7 00 	lds	r22, 0x00A7
 13c:	70 91 a8 00 	lds	r23, 0x00A8
 140:	80 91 a9 00 	lds	r24, 0x00A9
 144:	90 91 aa 00 	lds	r25, 0x00AA
 148:	57 01       	movw	r10, r14
 14a:	68 01       	movw	r12, r16
 14c:	a6 1a       	sub	r10, r22
 14e:	b7 0a       	sbc	r11, r23
 150:	c8 0a       	sbc	r12, r24
 152:	d9 0a       	sbc	r13, r25
 154:	a0 92 b3 00 	sts	0x00B3, r10
 158:	b0 92 b4 00 	sts	0x00B4, r11
 15c:	c0 92 b5 00 	sts	0x00B5, r12
 160:	d0 92 b6 00 	sts	0x00B6, r13
	pre_pulse=pulse;
 164:	80 91 af 00 	lds	r24, 0x00AF
 168:	90 91 b0 00 	lds	r25, 0x00B0
 16c:	a0 91 b1 00 	lds	r26, 0x00B1
 170:	b0 91 b2 00 	lds	r27, 0x00B2
 174:	80 93 a7 00 	sts	0x00A7, r24
 178:	90 93 a8 00 	sts	0x00A8, r25
 17c:	a0 93 a9 00 	sts	0x00A9, r26
 180:	b0 93 aa 00 	sts	0x00AA, r27
	
	Err=des_speed-abs(rSpeed);
 184:	80 91 b3 00 	lds	r24, 0x00B3
 188:	90 91 b4 00 	lds	r25, 0x00B4
 18c:	a0 91 b5 00 	lds	r26, 0x00B5
 190:	b0 91 b6 00 	lds	r27, 0x00B6
 194:	99 23       	and	r25, r25
 196:	1c f4       	brge	.+6      	; 0x19e <MOTOR_Speed_PID+0x8a>
 198:	90 95       	com	r25
 19a:	81 95       	neg	r24
 19c:	9f 4f       	sbci	r25, 0xFF	; 255
 19e:	aa 27       	eor	r26, r26
 1a0:	97 fd       	sbrc	r25, 7
 1a2:	a0 95       	com	r26
 1a4:	ba 2f       	mov	r27, r26
 1a6:	69 01       	movw	r12, r18
 1a8:	7a 01       	movw	r14, r20
 1aa:	c8 1a       	sub	r12, r24
 1ac:	d9 0a       	sbc	r13, r25
 1ae:	ea 0a       	sbc	r14, r26
 1b0:	fb 0a       	sbc	r15, r27
 1b2:	c0 92 ab 00 	sts	0x00AB, r12
 1b6:	d0 92 ac 00 	sts	0x00AC, r13
 1ba:	e0 92 ad 00 	sts	0x00AD, r14
 1be:	f0 92 ae 00 	sts	0x00AE, r15
	
	pPart=kp*Err;
 1c2:	20 91 81 00 	lds	r18, 0x0081
 1c6:	30 91 82 00 	lds	r19, 0x0082
 1ca:	40 91 83 00 	lds	r20, 0x0083
 1ce:	50 91 84 00 	lds	r21, 0x0084
 1d2:	60 91 ab 00 	lds	r22, 0x00AB
 1d6:	70 91 ac 00 	lds	r23, 0x00AC
 1da:	80 91 ad 00 	lds	r24, 0x00AD
 1de:	90 91 ae 00 	lds	r25, 0x00AE
 1e2:	0e 94 1b 07 	call	0xe36	; 0xe36 <__mulsi3>
 1e6:	60 93 92 00 	sts	0x0092, r22
 1ea:	70 93 93 00 	sts	0x0093, r23
 1ee:	80 93 94 00 	sts	0x0094, r24
 1f2:	90 93 95 00 	sts	0x0095, r25
	dPart=kd*(Err-pre_Err)*inv_Sampling_time;
 1f6:	e0 90 ab 00 	lds	r14, 0x00AB
 1fa:	f0 90 ac 00 	lds	r15, 0x00AC
 1fe:	00 91 ad 00 	lds	r16, 0x00AD
 202:	10 91 ae 00 	lds	r17, 0x00AE
 206:	a0 90 a3 00 	lds	r10, 0x00A3
 20a:	b0 90 a4 00 	lds	r11, 0x00A4
 20e:	c0 90 a5 00 	lds	r12, 0x00A5
 212:	d0 90 a6 00 	lds	r13, 0x00A6
 216:	60 91 85 00 	lds	r22, 0x0085
 21a:	70 91 86 00 	lds	r23, 0x0086
 21e:	80 91 87 00 	lds	r24, 0x0087
 222:	90 91 88 00 	lds	r25, 0x0088
 226:	28 e2       	ldi	r18, 0x28	; 40
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	40 e0       	ldi	r20, 0x00	; 0
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	0e 94 1b 07 	call	0xe36	; 0xe36 <__mulsi3>
 232:	a8 01       	movw	r20, r16
 234:	97 01       	movw	r18, r14
 236:	2a 19       	sub	r18, r10
 238:	3b 09       	sbc	r19, r11
 23a:	4c 09       	sbc	r20, r12
 23c:	5d 09       	sbc	r21, r13
 23e:	0e 94 1b 07 	call	0xe36	; 0xe36 <__mulsi3>
 242:	60 93 9a 00 	sts	0x009A, r22
 246:	70 93 9b 00 	sts	0x009B, r23
 24a:	80 93 9c 00 	sts	0x009C, r24
 24e:	90 93 9d 00 	sts	0x009D, r25
	iPart+=ki*Err*Sampling_time/1000;
 252:	60 91 89 00 	lds	r22, 0x0089
 256:	70 91 8a 00 	lds	r23, 0x008A
 25a:	80 91 8b 00 	lds	r24, 0x008B
 25e:	90 91 8c 00 	lds	r25, 0x008C
 262:	20 91 ab 00 	lds	r18, 0x00AB
 266:	30 91 ac 00 	lds	r19, 0x00AC
 26a:	40 91 ad 00 	lds	r20, 0x00AD
 26e:	50 91 ae 00 	lds	r21, 0x00AE
 272:	e0 90 96 00 	lds	r14, 0x0096
 276:	f0 90 97 00 	lds	r15, 0x0097
 27a:	00 91 98 00 	lds	r16, 0x0098
 27e:	10 91 99 00 	lds	r17, 0x0099
 282:	0e 94 1b 07 	call	0xe36	; 0xe36 <__mulsi3>
 286:	29 e1       	ldi	r18, 0x19	; 25
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	40 e0       	ldi	r20, 0x00	; 0
 28c:	50 e0       	ldi	r21, 0x00	; 0
 28e:	0e 94 1b 07 	call	0xe36	; 0xe36 <__mulsi3>
 292:	28 ee       	ldi	r18, 0xE8	; 232
 294:	33 e0       	ldi	r19, 0x03	; 3
 296:	40 e0       	ldi	r20, 0x00	; 0
 298:	50 e0       	ldi	r21, 0x00	; 0
 29a:	0e 94 61 07 	call	0xec2	; 0xec2 <__divmodsi4>
 29e:	2e 0d       	add	r18, r14
 2a0:	3f 1d       	adc	r19, r15
 2a2:	40 1f       	adc	r20, r16
 2a4:	51 1f       	adc	r21, r17
 2a6:	20 93 96 00 	sts	0x0096, r18
 2aa:	30 93 97 00 	sts	0x0097, r19
 2ae:	40 93 98 00 	sts	0x0098, r20
 2b2:	50 93 99 00 	sts	0x0099, r21
	
	output+=pPart+dPart+iPart;
 2b6:	20 91 92 00 	lds	r18, 0x0092
 2ba:	30 91 93 00 	lds	r19, 0x0093
 2be:	40 91 94 00 	lds	r20, 0x0094
 2c2:	50 91 95 00 	lds	r21, 0x0095
 2c6:	e0 90 9a 00 	lds	r14, 0x009A
 2ca:	f0 90 9b 00 	lds	r15, 0x009B
 2ce:	00 91 9c 00 	lds	r16, 0x009C
 2d2:	10 91 9d 00 	lds	r17, 0x009D
 2d6:	80 91 96 00 	lds	r24, 0x0096
 2da:	90 91 97 00 	lds	r25, 0x0097
 2de:	a0 91 98 00 	lds	r26, 0x0098
 2e2:	b0 91 99 00 	lds	r27, 0x0099
 2e6:	a0 90 9f 00 	lds	r10, 0x009F
 2ea:	b0 90 a0 00 	lds	r11, 0x00A0
 2ee:	c0 90 a1 00 	lds	r12, 0x00A1
 2f2:	d0 90 a2 00 	lds	r13, 0x00A2
 2f6:	2e 0d       	add	r18, r14
 2f8:	3f 1d       	adc	r19, r15
 2fa:	40 1f       	adc	r20, r16
 2fc:	51 1f       	adc	r21, r17
 2fe:	82 0f       	add	r24, r18
 300:	93 1f       	adc	r25, r19
 302:	a4 1f       	adc	r26, r20
 304:	b5 1f       	adc	r27, r21
 306:	a8 0e       	add	r10, r24
 308:	b9 1e       	adc	r11, r25
 30a:	ca 1e       	adc	r12, r26
 30c:	db 1e       	adc	r13, r27
 30e:	a0 92 9f 00 	sts	0x009F, r10
 312:	b0 92 a0 00 	sts	0x00A0, r11
 316:	c0 92 a1 00 	sts	0x00A1, r12
 31a:	d0 92 a2 00 	sts	0x00A2, r13
	
	if(output>=PWM_period) output=PWM_period-1;
 31e:	80 91 9f 00 	lds	r24, 0x009F
 322:	90 91 a0 00 	lds	r25, 0x00A0
 326:	a0 91 a1 00 	lds	r26, 0x00A1
 32a:	b0 91 a2 00 	lds	r27, 0x00A2
 32e:	80 34       	cpi	r24, 0x40	; 64
 330:	0f e1       	ldi	r16, 0x1F	; 31
 332:	90 07       	cpc	r25, r16
 334:	00 e0       	ldi	r16, 0x00	; 0
 336:	a0 07       	cpc	r26, r16
 338:	00 e0       	ldi	r16, 0x00	; 0
 33a:	b0 07       	cpc	r27, r16
 33c:	64 f0       	brlt	.+24     	; 0x356 <MOTOR_Speed_PID+0x242>
 33e:	8f e3       	ldi	r24, 0x3F	; 63
 340:	9f e1       	ldi	r25, 0x1F	; 31
 342:	a0 e0       	ldi	r26, 0x00	; 0
 344:	b0 e0       	ldi	r27, 0x00	; 0
 346:	80 93 9f 00 	sts	0x009F, r24
 34a:	90 93 a0 00 	sts	0x00A0, r25
 34e:	a0 93 a1 00 	sts	0x00A1, r26
 352:	b0 93 a2 00 	sts	0x00A2, r27
	if(output<=0) output=1;
 356:	80 91 9f 00 	lds	r24, 0x009F
 35a:	90 91 a0 00 	lds	r25, 0x00A0
 35e:	a0 91 a1 00 	lds	r26, 0x00A1
 362:	b0 91 a2 00 	lds	r27, 0x00A2
 366:	18 16       	cp	r1, r24
 368:	19 06       	cpc	r1, r25
 36a:	1a 06       	cpc	r1, r26
 36c:	1b 06       	cpc	r1, r27
 36e:	64 f0       	brlt	.+24     	; 0x388 <MOTOR_Speed_PID+0x274>
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	a0 e0       	ldi	r26, 0x00	; 0
 376:	b0 e0       	ldi	r27, 0x00	; 0
 378:	80 93 9f 00 	sts	0x009F, r24
 37c:	90 93 a0 00 	sts	0x00A0, r25
 380:	a0 93 a1 00 	sts	0x00A1, r26
 384:	b0 93 a2 00 	sts	0x00A2, r27
	
	OCR1A=output;
 388:	80 91 9f 00 	lds	r24, 0x009F
 38c:	90 91 a0 00 	lds	r25, 0x00A0
 390:	a0 91 a1 00 	lds	r26, 0x00A1
 394:	b0 91 a2 00 	lds	r27, 0x00A2
 398:	9b bd       	out	0x2b, r25	; 43
 39a:	8a bd       	out	0x2a, r24	; 42
	pre_Err=Err;
 39c:	80 91 ab 00 	lds	r24, 0x00AB
 3a0:	90 91 ac 00 	lds	r25, 0x00AC
 3a4:	a0 91 ad 00 	lds	r26, 0x00AD
 3a8:	b0 91 ae 00 	lds	r27, 0x00AE
 3ac:	80 93 a3 00 	sts	0x00A3, r24
 3b0:	90 93 a4 00 	sts	0x00A4, r25
 3b4:	a0 93 a5 00 	sts	0x00A5, r26
 3b8:	b0 93 a6 00 	sts	0x00A6, r27
	
}
 3bc:	1f 91       	pop	r17
 3be:	0f 91       	pop	r16
 3c0:	ff 90       	pop	r15
 3c2:	ef 90       	pop	r14
 3c4:	df 90       	pop	r13
 3c6:	cf 90       	pop	r12
 3c8:	bf 90       	pop	r11
 3ca:	af 90       	pop	r10
 3cc:	08 95       	ret

000003ce <main>:

int main(void)
{
	pulse=0;
 3ce:	10 92 af 00 	sts	0x00AF, r1
 3d2:	10 92 b0 00 	sts	0x00B0, r1
 3d6:	10 92 b1 00 	sts	0x00B1, r1
 3da:	10 92 b2 00 	sts	0x00B2, r1
	
	DDRA=0xFF;
 3de:	8f ef       	ldi	r24, 0xFF	; 255
 3e0:	8a bb       	out	0x1a, r24	; 26
	PORTA=0xFF;
 3e2:	8b bb       	out	0x1b, r24	; 27
	DDRB=0x00;
 3e4:	17 ba       	out	0x17, r1	; 23
	PORTB=0xFF;
 3e6:	88 bb       	out	0x18, r24	; 24
	
	DDRD=0xF0;
 3e8:	80 ef       	ldi	r24, 0xF0	; 240
 3ea:	81 bb       	out	0x11, r24	; 17
	sbi(MOTOR_PORT,MOTOR_DIR);
 3ec:	96 9a       	sbi	0x12, 6	; 18
	
	MCUCSR|=(0<<ISC2);
 3ee:	84 b7       	in	r24, 0x34	; 52
 3f0:	84 bf       	out	0x34, r24	; 52
	GICR|=(1<<INT2);
 3f2:	8b b7       	in	r24, 0x3b	; 59
 3f4:	80 62       	ori	r24, 0x20	; 32
 3f6:	8b bf       	out	0x3b, r24	; 59
	
	TCCR2=(1<<CS22)|(1<<CS21)|(1<<CS20);
 3f8:	87 e0       	ldi	r24, 0x07	; 7
 3fa:	85 bd       	out	0x25, r24	; 37
	TCNT2=60;
 3fc:	8c e3       	ldi	r24, 0x3C	; 60
 3fe:	84 bd       	out	0x24, r24	; 36
	TIMSK=(1<<TOIE2);
 400:	80 e4       	ldi	r24, 0x40	; 64
 402:	89 bf       	out	0x39, r24	; 57
	
	TCCR1A=(1<<COM1A1)|(1<<WGM11);
 404:	82 e8       	ldi	r24, 0x82	; 130
 406:	8f bd       	out	0x2f, r24	; 47
	TCCR1B=(1<<WGM13)|(1<<WGM12)|(1<<CS10);
 408:	89 e1       	ldi	r24, 0x19	; 25
 40a:	8e bd       	out	0x2e, r24	; 46
	
	init_lcd();
 40c:	0e 94 04 03 	call	0x608	; 0x608 <init_lcd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 410:	8f e3       	ldi	r24, 0x3F	; 63
 412:	9d e0       	ldi	r25, 0x0D	; 13
 414:	a3 e0       	ldi	r26, 0x03	; 3
 416:	81 50       	subi	r24, 0x01	; 1
 418:	90 40       	sbci	r25, 0x00	; 0
 41a:	a0 40       	sbci	r26, 0x00	; 0
 41c:	e1 f7       	brne	.-8      	; 0x416 <main+0x48>
 41e:	00 c0       	rjmp	.+0      	; 0x420 <main+0x52>
 420:	00 00       	nop
	_delay_ms(1000);
	clear_lcd();
 422:	0e 94 2c 03 	call	0x658	; 0x658 <clear_lcd>
	putstr_lcd("Actual:   /25ms",15);
 426:	80 e6       	ldi	r24, 0x60	; 96
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	6f e0       	ldi	r22, 0x0F	; 15
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	0e 94 a3 03 	call	0x746	; 0x746 <putstr_lcd>
	movecursor(2,1);
 432:	82 e0       	ldi	r24, 0x02	; 2
 434:	61 e0       	ldi	r22, 0x01	; 1
 436:	0e 94 33 03 	call	0x666	; 0x666 <movecursor>
	putstr_lcd("Desired:   /25ms",16);
 43a:	80 e7       	ldi	r24, 0x70	; 112
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	60 e1       	ldi	r22, 0x10	; 16
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	0e 94 a3 03 	call	0x746	; 0x746 <putstr_lcd>
	
	OCR1A=1;
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	9b bd       	out	0x2b, r25	; 43
 44c:	8a bd       	out	0x2a, r24	; 42
	ICR1=PWM_period;
 44e:	80 e4       	ldi	r24, 0x40	; 64
 450:	9f e1       	ldi	r25, 0x1F	; 31
 452:	97 bd       	out	0x27, r25	; 39
 454:	86 bd       	out	0x26, r24	; 38
	setbit(MOTOR_PORT,MOTOR_EN);
 456:	97 9a       	sbi	0x12, 7	; 18
	


	sei();
 458:	78 94       	sei
    while(1)
    {
		if(sample_count>=5){
 45a:	80 91 9e 00 	lds	r24, 0x009E
 45e:	85 30       	cpi	r24, 0x05	; 5
 460:	e0 f3       	brcs	.-8      	; 0x45a <main+0x8c>
			
			Ctrl_speed=(PINB>>4)&0x0F;
 462:	86 b3       	in	r24, 0x16	; 22
 464:	82 95       	swap	r24
 466:	8f 70       	andi	r24, 0x0F	; 15
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	a0 e0       	ldi	r26, 0x00	; 0
 46c:	b0 e0       	ldi	r27, 0x00	; 0
 46e:	80 93 8d 00 	sts	0x008D, r24
 472:	90 93 8e 00 	sts	0x008E, r25
 476:	a0 93 8f 00 	sts	0x008F, r26
 47a:	b0 93 90 00 	sts	0x0090, r27
			movecursor(1,8);
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	68 e0       	ldi	r22, 0x08	; 8
 482:	0e 94 33 03 	call	0x666	; 0x666 <movecursor>
			printnumber_lcd(rSpeed);
 486:	80 91 b3 00 	lds	r24, 0x00B3
 48a:	90 91 b4 00 	lds	r25, 0x00B4
 48e:	a0 91 b5 00 	lds	r26, 0x00B5
 492:	b0 91 b6 00 	lds	r27, 0x00B6
 496:	0e 94 55 03 	call	0x6aa	; 0x6aa <printnumber_lcd>
			movecursor(2,9);
 49a:	82 e0       	ldi	r24, 0x02	; 2
 49c:	69 e0       	ldi	r22, 0x09	; 9
 49e:	0e 94 33 03 	call	0x666	; 0x666 <movecursor>
			printnumber_lcd(Ctrl_speed);
 4a2:	80 91 8d 00 	lds	r24, 0x008D
 4a6:	90 91 8e 00 	lds	r25, 0x008E
 4aa:	a0 91 8f 00 	lds	r26, 0x008F
 4ae:	b0 91 90 00 	lds	r27, 0x0090
 4b2:	0e 94 55 03 	call	0x6aa	; 0x6aa <printnumber_lcd>
			sample_count=0;
 4b6:	10 92 9e 00 	sts	0x009E, r1
 4ba:	cf cf       	rjmp	.-98     	; 0x45a <main+0x8c>

000004bc <__vector_5>:
			
		}
    }
}
ISR(TIMER2_OVF_vect){
 4bc:	1f 92       	push	r1
 4be:	0f 92       	push	r0
 4c0:	0f b6       	in	r0, 0x3f	; 63
 4c2:	0f 92       	push	r0
 4c4:	11 24       	eor	r1, r1
 4c6:	2f 93       	push	r18
 4c8:	3f 93       	push	r19
 4ca:	4f 93       	push	r20
 4cc:	5f 93       	push	r21
 4ce:	6f 93       	push	r22
 4d0:	7f 93       	push	r23
 4d2:	8f 93       	push	r24
 4d4:	9f 93       	push	r25
 4d6:	af 93       	push	r26
 4d8:	bf 93       	push	r27
 4da:	ef 93       	push	r30
 4dc:	ff 93       	push	r31
	TCNT2=60;
 4de:	8c e3       	ldi	r24, 0x3C	; 60
 4e0:	84 bd       	out	0x24, r24	; 36
	MOTOR_Speed_PID(Ctrl_speed);
 4e2:	60 91 8d 00 	lds	r22, 0x008D
 4e6:	70 91 8e 00 	lds	r23, 0x008E
 4ea:	80 91 8f 00 	lds	r24, 0x008F
 4ee:	90 91 90 00 	lds	r25, 0x0090
 4f2:	0e 94 8a 00 	call	0x114	; 0x114 <MOTOR_Speed_PID>
	sample_count++;
 4f6:	80 91 9e 00 	lds	r24, 0x009E
 4fa:	8f 5f       	subi	r24, 0xFF	; 255
 4fc:	80 93 9e 00 	sts	0x009E, r24
}
 500:	ff 91       	pop	r31
 502:	ef 91       	pop	r30
 504:	bf 91       	pop	r27
 506:	af 91       	pop	r26
 508:	9f 91       	pop	r25
 50a:	8f 91       	pop	r24
 50c:	7f 91       	pop	r23
 50e:	6f 91       	pop	r22
 510:	5f 91       	pop	r21
 512:	4f 91       	pop	r20
 514:	3f 91       	pop	r19
 516:	2f 91       	pop	r18
 518:	0f 90       	pop	r0
 51a:	0f be       	out	0x3f, r0	; 63
 51c:	0f 90       	pop	r0
 51e:	1f 90       	pop	r1
 520:	18 95       	reti

00000522 <__vector_3>:
ISR(INT2_vect){
 522:	1f 92       	push	r1
 524:	0f 92       	push	r0
 526:	0f b6       	in	r0, 0x3f	; 63
 528:	0f 92       	push	r0
 52a:	11 24       	eor	r1, r1
 52c:	8f 93       	push	r24
 52e:	9f 93       	push	r25
 530:	af 93       	push	r26
 532:	bf 93       	push	r27
	if(bit_is_set(PORTB,0)) pulse++;
 534:	c0 9b       	sbis	0x18, 0	; 24
 536:	14 c0       	rjmp	.+40     	; 0x560 <__vector_3+0x3e>
 538:	80 91 af 00 	lds	r24, 0x00AF
 53c:	90 91 b0 00 	lds	r25, 0x00B0
 540:	a0 91 b1 00 	lds	r26, 0x00B1
 544:	b0 91 b2 00 	lds	r27, 0x00B2
 548:	01 96       	adiw	r24, 0x01	; 1
 54a:	a1 1d       	adc	r26, r1
 54c:	b1 1d       	adc	r27, r1
 54e:	80 93 af 00 	sts	0x00AF, r24
 552:	90 93 b0 00 	sts	0x00B0, r25
 556:	a0 93 b1 00 	sts	0x00B1, r26
 55a:	b0 93 b2 00 	sts	0x00B2, r27
 55e:	13 c0       	rjmp	.+38     	; 0x586 <__vector_3+0x64>
	else pulse--;
 560:	80 91 af 00 	lds	r24, 0x00AF
 564:	90 91 b0 00 	lds	r25, 0x00B0
 568:	a0 91 b1 00 	lds	r26, 0x00B1
 56c:	b0 91 b2 00 	lds	r27, 0x00B2
 570:	01 97       	sbiw	r24, 0x01	; 1
 572:	a1 09       	sbc	r26, r1
 574:	b1 09       	sbc	r27, r1
 576:	80 93 af 00 	sts	0x00AF, r24
 57a:	90 93 b0 00 	sts	0x00B0, r25
 57e:	a0 93 b1 00 	sts	0x00B1, r26
 582:	b0 93 b2 00 	sts	0x00B2, r27
 586:	bf 91       	pop	r27
 588:	af 91       	pop	r26
 58a:	9f 91       	pop	r25
 58c:	8f 91       	pop	r24
 58e:	0f 90       	pop	r0
 590:	0f be       	out	0x3f, r0	; 63
 592:	0f 90       	pop	r0
 594:	1f 90       	pop	r1
 596:	18 95       	reti

00000598 <read_2Nib>:


char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
 598:	aa 9a       	sbi	0x15, 2	; 21
	DDR_DATA=0x0F;
 59a:	8f e0       	ldi	r24, 0x0F	; 15
 59c:	84 bb       	out	0x14, r24	; 20
	HNib=DATA_input&0xF0;
 59e:	83 b3       	in	r24, 0x13	; 19
	clearbit(CTRL,EN);
 5a0:	aa 98       	cbi	0x15, 2	; 21
	
	setbit(CTRL,EN);
 5a2:	aa 9a       	sbi	0x15, 2	; 21
	LNib=DATA_input&0xF0;
 5a4:	93 b3       	in	r25, 0x13	; 19
	clearbit(CTRL,EN);
 5a6:	aa 98       	cbi	0x15, 2	; 21
	LNib>>=4;
 5a8:	92 95       	swap	r25
 5aa:	9f 70       	andi	r25, 0x0F	; 15
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
	DDR_DATA=0x0F;
	HNib=DATA_input&0xF0;
 5ac:	80 7f       	andi	r24, 0xF0	; 240
	LNib=DATA_input&0xF0;
	clearbit(CTRL,EN);
	LNib>>=4;
	
	return (HNib|LNib);
}
 5ae:	89 2b       	or	r24, r25
 5b0:	08 95       	ret

000005b2 <write_2Nib>:
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
 5b2:	95 b3       	in	r25, 0x15	; 21
 5b4:	9f 70       	andi	r25, 0x0F	; 15
	HNib=data&0xF0;
 5b6:	28 2f       	mov	r18, r24
 5b8:	20 7f       	andi	r18, 0xF0	; 240
	LNib=(data<<4)&0xF0;
	
	DATA_output=HNib|temp;
 5ba:	29 2b       	or	r18, r25
 5bc:	25 bb       	out	0x15, r18	; 21
	setbit(CTRL,EN);
 5be:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 5c0:	aa 98       	cbi	0x15, 2	; 21
}
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
	HNib=data&0xF0;
	LNib=(data<<4)&0xF0;
 5c2:	82 95       	swap	r24
 5c4:	80 7f       	andi	r24, 0xF0	; 240
	
	DATA_output=HNib|temp;
	setbit(CTRL,EN);
	clearbit(CTRL,EN);
	
	DATA_output=LNib|temp;
 5c6:	98 2b       	or	r25, r24
 5c8:	95 bb       	out	0x15, r25	; 21
	setbit(CTRL,EN);
 5ca:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 5cc:	aa 98       	cbi	0x15, 2	; 21
	
}
 5ce:	08 95       	ret

000005d0 <wait_lcd>:
void wait_lcd(void){
 5d0:	0f 93       	push	r16
 5d2:	1f 93       	push	r17
 5d4:	df 93       	push	r29
 5d6:	cf 93       	push	r28
 5d8:	0f 92       	push	r0
 5da:	cd b7       	in	r28, 0x3d	; 61
 5dc:	de b7       	in	r29, 0x3e	; 62
	while(1){
     	clearbit(CTRL,RS);
		setbit(CTRL,RW);
		temp=read_2Nib();
		
		if(bit_is_clear(temp,7)) break;
 5de:	8e 01       	movw	r16, r28
 5e0:	0f 5f       	subi	r16, 0xFF	; 255
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
}
void wait_lcd(void){
	unsigned char temp;
	
	while(1){
     	clearbit(CTRL,RS);
 5e4:	a8 98       	cbi	0x15, 0	; 21
		setbit(CTRL,RW);
 5e6:	a9 9a       	sbi	0x15, 1	; 21
		temp=read_2Nib();
 5e8:	0e 94 cc 02 	call	0x598	; 0x598 <read_2Nib>
 5ec:	89 83       	std	Y+1, r24	; 0x01
		
		if(bit_is_clear(temp,7)) break;
 5ee:	f8 01       	movw	r30, r16
 5f0:	80 81       	ld	r24, Z
 5f2:	88 23       	and	r24, r24
 5f4:	bc f3       	brlt	.-18     	; 0x5e4 <wait_lcd+0x14>
	}
	clearbit(CTRL,RW);
 5f6:	a9 98       	cbi	0x15, 1	; 21
	DDR_DATA=0xFF;
 5f8:	8f ef       	ldi	r24, 0xFF	; 255
 5fa:	84 bb       	out	0x14, r24	; 20
	
}
 5fc:	0f 90       	pop	r0
 5fe:	cf 91       	pop	r28
 600:	df 91       	pop	r29
 602:	1f 91       	pop	r17
 604:	0f 91       	pop	r16
 606:	08 95       	ret

00000608 <init_lcd>:

void init_lcd(){//uses mode 4 bit
	DDR_CTRL=0xFF;
 608:	8f ef       	ldi	r24, 0xFF	; 255
 60a:	84 bb       	out	0x14, r24	; 20
	DDR_DATA=0xFF;
 60c:	84 bb       	out	0x14, r24	; 20
	clearbit(CTRL,RS);
 60e:	a8 98       	cbi	0x15, 0	; 21
	clearbit(CTRL,RW);
 610:	a9 98       	cbi	0x15, 1	; 21
	clearbit(CTRL,EN);
 612:	aa 98       	cbi	0x15, 2	; 21
	
//function set	
	setbit(CTRL,EN);
 614:	aa 9a       	sbi	0x15, 2	; 21
	setbit(DATA_output,5);
 616:	ad 9a       	sbi	0x15, 5	; 21
	clearbit(CTRL,EN);
 618:	aa 98       	cbi	0x15, 2	; 21
	wait_lcd();
 61a:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <wait_lcd>
	write_2Nib(0x28);
 61e:	88 e2       	ldi	r24, 0x28	; 40
 620:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_2Nib>
	wait_lcd();
 624:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <wait_lcd>
//display on/off control
    write_2Nib(0x0E);
 628:	8e e0       	ldi	r24, 0x0E	; 14
 62a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_2Nib>
	wait_lcd();
 62e:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <wait_lcd>

//entry mode set 
    
    write_2Nib(0x06);
 632:	86 e0       	ldi	r24, 0x06	; 6
 634:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_2Nib>
    wait_lcd();		
 638:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <wait_lcd>
}
 63c:	08 95       	ret

0000063e <putchar_lcd>:
void putchar_lcd(unsigned char data){
	
	setbit(CTRL,RS);
 63e:	a8 9a       	sbi	0x15, 0	; 21
	write_2Nib(data);
 640:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_2Nib>
	wait_lcd();
 644:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <wait_lcd>
}
 648:	08 95       	ret

0000064a <cursor_home>:
void cursor_home(){
	clearbit(CTRL,RS);
 64a:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x03);
 64c:	83 e0       	ldi	r24, 0x03	; 3
 64e:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_2Nib>
	wait_lcd();
 652:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <wait_lcd>
}
 656:	08 95       	ret

00000658 <clear_lcd>:
void clear_lcd(){
	clearbit(CTRL,RS);
 658:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
 65a:	81 e0       	ldi	r24, 0x01	; 1
 65c:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_2Nib>
	wait_lcd();
 660:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <wait_lcd>
}
 664:	08 95       	ret

00000666 <movecursor>:
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
	clearbit(CTRL,RS);
 666:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
	wait_lcd();
}
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
 668:	82 95       	swap	r24
 66a:	88 0f       	add	r24, r24
 66c:	88 0f       	add	r24, r24
 66e:	80 7c       	andi	r24, 0xC0	; 192
 670:	86 0f       	add	r24, r22
	clearbit(CTRL,RS);
	write_2Nib(x);
 672:	81 5c       	subi	r24, 0xC1	; 193
 674:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_2Nib>
	wait_lcd();
 678:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <wait_lcd>
}
 67c:	08 95       	ret

0000067e <count_number>:
int count_number(unsigned int number){
 67e:	bc 01       	movw	r22, r24
	int dem=0;
	while(number){
 680:	00 97       	sbiw	r24, 0x00	; 0
 682:	71 f0       	breq	.+28     	; 0x6a0 <count_number+0x22>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 684:	20 e0       	ldi	r18, 0x00	; 0
 686:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
 688:	ea e0       	ldi	r30, 0x0A	; 10
 68a:	f0 e0       	ldi	r31, 0x00	; 0
 68c:	cb 01       	movw	r24, r22
 68e:	bf 01       	movw	r22, r30
 690:	0e 94 3a 07 	call	0xe74	; 0xe74 <__udivmodhi4>
		dem++;
 694:	2f 5f       	subi	r18, 0xFF	; 255
 696:	3f 4f       	sbci	r19, 0xFF	; 255
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
	while(number){
 698:	61 15       	cp	r22, r1
 69a:	71 05       	cpc	r23, r1
 69c:	b9 f7       	brne	.-18     	; 0x68c <count_number+0xe>
 69e:	02 c0       	rjmp	.+4      	; 0x6a4 <count_number+0x26>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 6a0:	20 e0       	ldi	r18, 0x00	; 0
 6a2:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
		dem++;
	}
	return dem;
}
 6a4:	82 2f       	mov	r24, r18
 6a6:	93 2f       	mov	r25, r19
 6a8:	08 95       	ret

000006aa <printnumber_lcd>:
void printnumber_lcd(unsigned int number){
 6aa:	af 92       	push	r10
 6ac:	bf 92       	push	r11
 6ae:	cf 92       	push	r12
 6b0:	df 92       	push	r13
 6b2:	ef 92       	push	r14
 6b4:	ff 92       	push	r15
 6b6:	0f 93       	push	r16
 6b8:	1f 93       	push	r17
 6ba:	cf 93       	push	r28
 6bc:	df 93       	push	r29
 6be:	e8 2e       	mov	r14, r24
 6c0:	f9 2e       	mov	r15, r25
	int a,n,i,temp;
	n= count_number(number);
 6c2:	0e 94 3f 03 	call	0x67e	; 0x67e <count_number>
 6c6:	6c 01       	movw	r12, r24
	temp=pow(10,n-1);
 6c8:	bc 01       	movw	r22, r24
 6ca:	61 50       	subi	r22, 0x01	; 1
 6cc:	70 40       	sbci	r23, 0x00	; 0
 6ce:	88 27       	eor	r24, r24
 6d0:	77 fd       	sbrc	r23, 7
 6d2:	80 95       	com	r24
 6d4:	98 2f       	mov	r25, r24
 6d6:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__floatsisf>
 6da:	9b 01       	movw	r18, r22
 6dc:	ac 01       	movw	r20, r24
 6de:	60 e0       	ldi	r22, 0x00	; 0
 6e0:	70 e0       	ldi	r23, 0x00	; 0
 6e2:	80 e2       	ldi	r24, 0x20	; 32
 6e4:	91 e4       	ldi	r25, 0x41	; 65
 6e6:	0e 94 5e 04 	call	0x8bc	; 0x8bc <pow>
	for(i=0;i<n;i++){
 6ea:	1c 14       	cp	r1, r12
 6ec:	1d 04       	cpc	r1, r13
 6ee:	04 f5       	brge	.+64     	; 0x730 <printnumber_lcd+0x86>
	return dem;
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
 6f0:	0e 94 c7 03 	call	0x78e	; 0x78e <__fixsfsi>
 6f4:	eb 01       	movw	r28, r22
	for(i=0;i<n;i++){
 6f6:	00 e0       	ldi	r16, 0x00	; 0
 6f8:	10 e0       	ldi	r17, 0x00	; 0
		a=number/temp;
		number=number%temp;
		temp=temp/10;
 6fa:	0f 2e       	mov	r0, r31
 6fc:	fa e0       	ldi	r31, 0x0A	; 10
 6fe:	af 2e       	mov	r10, r31
 700:	bb 24       	eor	r11, r11
 702:	f0 2d       	mov	r31, r0
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
		a=number/temp;
 704:	8e 2d       	mov	r24, r14
 706:	9f 2d       	mov	r25, r15
 708:	be 01       	movw	r22, r28
 70a:	0e 94 3a 07 	call	0xe74	; 0xe74 <__udivmodhi4>
 70e:	26 2f       	mov	r18, r22
		number=number%temp;
 710:	e8 2e       	mov	r14, r24
 712:	f9 2e       	mov	r15, r25
		temp=temp/10;
 714:	ce 01       	movw	r24, r28
 716:	b5 01       	movw	r22, r10
 718:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__divmodhi4>
 71c:	eb 01       	movw	r28, r22
		putchar_lcd(a+48);
 71e:	82 2f       	mov	r24, r18
 720:	80 5d       	subi	r24, 0xD0	; 208
 722:	0e 94 1f 03 	call	0x63e	; 0x63e <putchar_lcd>
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
 726:	0f 5f       	subi	r16, 0xFF	; 255
 728:	1f 4f       	sbci	r17, 0xFF	; 255
 72a:	0c 15       	cp	r16, r12
 72c:	1d 05       	cpc	r17, r13
 72e:	54 f3       	brlt	.-44     	; 0x704 <printnumber_lcd+0x5a>
	putchar_lcd(a+48);
	b=number%10;
	putchar_lcd(b+48);
	*/
	
}
 730:	df 91       	pop	r29
 732:	cf 91       	pop	r28
 734:	1f 91       	pop	r17
 736:	0f 91       	pop	r16
 738:	ff 90       	pop	r15
 73a:	ef 90       	pop	r14
 73c:	df 90       	pop	r13
 73e:	cf 90       	pop	r12
 740:	bf 90       	pop	r11
 742:	af 90       	pop	r10
 744:	08 95       	ret

00000746 <putstr_lcd>:
putstr_lcd(unsigned char *str, unsigned int lenght){
 746:	ef 92       	push	r14
 748:	ff 92       	push	r15
 74a:	0f 93       	push	r16
 74c:	1f 93       	push	r17
 74e:	cf 93       	push	r28
 750:	df 93       	push	r29
 752:	7b 01       	movw	r14, r22
	unsigned int i;
	for(i=0;i<lenght;i++){
 754:	61 15       	cp	r22, r1
 756:	71 05       	cpc	r23, r1
 758:	99 f0       	breq	.+38     	; 0x780 <putstr_lcd+0x3a>
 75a:	08 2f       	mov	r16, r24
 75c:	19 2f       	mov	r17, r25
 75e:	c0 e0       	ldi	r28, 0x00	; 0
 760:	d0 e0       	ldi	r29, 0x00	; 0
		if(*(str+i)>0){ 
 762:	f8 01       	movw	r30, r16
 764:	81 91       	ld	r24, Z+
 766:	8f 01       	movw	r16, r30
 768:	88 23       	and	r24, r24
 76a:	19 f0       	breq	.+6      	; 0x772 <putstr_lcd+0x2c>
			putchar_lcd(*(str+i));
 76c:	0e 94 1f 03 	call	0x63e	; 0x63e <putchar_lcd>
 770:	03 c0       	rjmp	.+6      	; 0x778 <putstr_lcd+0x32>
			}
		else putchar_lcd(0);	
 772:	80 e0       	ldi	r24, 0x00	; 0
 774:	0e 94 1f 03 	call	0x63e	; 0x63e <putchar_lcd>
	*/
	
}
putstr_lcd(unsigned char *str, unsigned int lenght){
	unsigned int i;
	for(i=0;i<lenght;i++){
 778:	21 96       	adiw	r28, 0x01	; 1
 77a:	ce 15       	cp	r28, r14
 77c:	df 05       	cpc	r29, r15
 77e:	88 f3       	brcs	.-30     	; 0x762 <putstr_lcd+0x1c>
		if(*(str+i)>0){ 
			putchar_lcd(*(str+i));
			}
		else putchar_lcd(0);	
}
}
 780:	df 91       	pop	r29
 782:	cf 91       	pop	r28
 784:	1f 91       	pop	r17
 786:	0f 91       	pop	r16
 788:	ff 90       	pop	r15
 78a:	ef 90       	pop	r14
 78c:	08 95       	ret

0000078e <__fixsfsi>:
 78e:	04 d0       	rcall	.+8      	; 0x798 <__fixunssfsi>
 790:	68 94       	set
 792:	b1 11       	cpse	r27, r1
 794:	8d c0       	rjmp	.+282    	; 0x8b0 <__fp_szero>
 796:	08 95       	ret

00000798 <__fixunssfsi>:
 798:	70 d0       	rcall	.+224    	; 0x87a <__fp_splitA>
 79a:	88 f0       	brcs	.+34     	; 0x7be <__fixunssfsi+0x26>
 79c:	9f 57       	subi	r25, 0x7F	; 127
 79e:	90 f0       	brcs	.+36     	; 0x7c4 <__fixunssfsi+0x2c>
 7a0:	b9 2f       	mov	r27, r25
 7a2:	99 27       	eor	r25, r25
 7a4:	b7 51       	subi	r27, 0x17	; 23
 7a6:	a0 f0       	brcs	.+40     	; 0x7d0 <__fixunssfsi+0x38>
 7a8:	d1 f0       	breq	.+52     	; 0x7de <__fixunssfsi+0x46>
 7aa:	66 0f       	add	r22, r22
 7ac:	77 1f       	adc	r23, r23
 7ae:	88 1f       	adc	r24, r24
 7b0:	99 1f       	adc	r25, r25
 7b2:	1a f0       	brmi	.+6      	; 0x7ba <__fixunssfsi+0x22>
 7b4:	ba 95       	dec	r27
 7b6:	c9 f7       	brne	.-14     	; 0x7aa <__fixunssfsi+0x12>
 7b8:	12 c0       	rjmp	.+36     	; 0x7de <__fixunssfsi+0x46>
 7ba:	b1 30       	cpi	r27, 0x01	; 1
 7bc:	81 f0       	breq	.+32     	; 0x7de <__fixunssfsi+0x46>
 7be:	77 d0       	rcall	.+238    	; 0x8ae <__fp_zero>
 7c0:	b1 e0       	ldi	r27, 0x01	; 1
 7c2:	08 95       	ret
 7c4:	74 c0       	rjmp	.+232    	; 0x8ae <__fp_zero>
 7c6:	67 2f       	mov	r22, r23
 7c8:	78 2f       	mov	r23, r24
 7ca:	88 27       	eor	r24, r24
 7cc:	b8 5f       	subi	r27, 0xF8	; 248
 7ce:	39 f0       	breq	.+14     	; 0x7de <__fixunssfsi+0x46>
 7d0:	b9 3f       	cpi	r27, 0xF9	; 249
 7d2:	cc f3       	brlt	.-14     	; 0x7c6 <__fixunssfsi+0x2e>
 7d4:	86 95       	lsr	r24
 7d6:	77 95       	ror	r23
 7d8:	67 95       	ror	r22
 7da:	b3 95       	inc	r27
 7dc:	d9 f7       	brne	.-10     	; 0x7d4 <__fixunssfsi+0x3c>
 7de:	3e f4       	brtc	.+14     	; 0x7ee <__fixunssfsi+0x56>
 7e0:	90 95       	com	r25
 7e2:	80 95       	com	r24
 7e4:	70 95       	com	r23
 7e6:	61 95       	neg	r22
 7e8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ea:	8f 4f       	sbci	r24, 0xFF	; 255
 7ec:	9f 4f       	sbci	r25, 0xFF	; 255
 7ee:	08 95       	ret

000007f0 <__floatunsisf>:
 7f0:	e8 94       	clt
 7f2:	09 c0       	rjmp	.+18     	; 0x806 <__floatsisf+0x12>

000007f4 <__floatsisf>:
 7f4:	97 fb       	bst	r25, 7
 7f6:	3e f4       	brtc	.+14     	; 0x806 <__floatsisf+0x12>
 7f8:	90 95       	com	r25
 7fa:	80 95       	com	r24
 7fc:	70 95       	com	r23
 7fe:	61 95       	neg	r22
 800:	7f 4f       	sbci	r23, 0xFF	; 255
 802:	8f 4f       	sbci	r24, 0xFF	; 255
 804:	9f 4f       	sbci	r25, 0xFF	; 255
 806:	99 23       	and	r25, r25
 808:	a9 f0       	breq	.+42     	; 0x834 <__floatsisf+0x40>
 80a:	f9 2f       	mov	r31, r25
 80c:	96 e9       	ldi	r25, 0x96	; 150
 80e:	bb 27       	eor	r27, r27
 810:	93 95       	inc	r25
 812:	f6 95       	lsr	r31
 814:	87 95       	ror	r24
 816:	77 95       	ror	r23
 818:	67 95       	ror	r22
 81a:	b7 95       	ror	r27
 81c:	f1 11       	cpse	r31, r1
 81e:	f8 cf       	rjmp	.-16     	; 0x810 <__floatsisf+0x1c>
 820:	fa f4       	brpl	.+62     	; 0x860 <__stack+0x1>
 822:	bb 0f       	add	r27, r27
 824:	11 f4       	brne	.+4      	; 0x82a <__floatsisf+0x36>
 826:	60 ff       	sbrs	r22, 0
 828:	1b c0       	rjmp	.+54     	; 0x860 <__stack+0x1>
 82a:	6f 5f       	subi	r22, 0xFF	; 255
 82c:	7f 4f       	sbci	r23, 0xFF	; 255
 82e:	8f 4f       	sbci	r24, 0xFF	; 255
 830:	9f 4f       	sbci	r25, 0xFF	; 255
 832:	16 c0       	rjmp	.+44     	; 0x860 <__stack+0x1>
 834:	88 23       	and	r24, r24
 836:	11 f0       	breq	.+4      	; 0x83c <__floatsisf+0x48>
 838:	96 e9       	ldi	r25, 0x96	; 150
 83a:	11 c0       	rjmp	.+34     	; 0x85e <__floatsisf+0x6a>
 83c:	77 23       	and	r23, r23
 83e:	21 f0       	breq	.+8      	; 0x848 <__floatsisf+0x54>
 840:	9e e8       	ldi	r25, 0x8E	; 142
 842:	87 2f       	mov	r24, r23
 844:	76 2f       	mov	r23, r22
 846:	05 c0       	rjmp	.+10     	; 0x852 <__floatsisf+0x5e>
 848:	66 23       	and	r22, r22
 84a:	71 f0       	breq	.+28     	; 0x868 <__stack+0x9>
 84c:	96 e8       	ldi	r25, 0x86	; 134
 84e:	86 2f       	mov	r24, r22
 850:	70 e0       	ldi	r23, 0x00	; 0
 852:	60 e0       	ldi	r22, 0x00	; 0
 854:	2a f0       	brmi	.+10     	; 0x860 <__stack+0x1>
 856:	9a 95       	dec	r25
 858:	66 0f       	add	r22, r22
 85a:	77 1f       	adc	r23, r23
 85c:	88 1f       	adc	r24, r24
 85e:	da f7       	brpl	.-10     	; 0x856 <__floatsisf+0x62>
 860:	88 0f       	add	r24, r24
 862:	96 95       	lsr	r25
 864:	87 95       	ror	r24
 866:	97 f9       	bld	r25, 7
 868:	08 95       	ret

0000086a <__fp_split3>:
 86a:	57 fd       	sbrc	r21, 7
 86c:	90 58       	subi	r25, 0x80	; 128
 86e:	44 0f       	add	r20, r20
 870:	55 1f       	adc	r21, r21
 872:	59 f0       	breq	.+22     	; 0x88a <__fp_splitA+0x10>
 874:	5f 3f       	cpi	r21, 0xFF	; 255
 876:	71 f0       	breq	.+28     	; 0x894 <__fp_splitA+0x1a>
 878:	47 95       	ror	r20

0000087a <__fp_splitA>:
 87a:	88 0f       	add	r24, r24
 87c:	97 fb       	bst	r25, 7
 87e:	99 1f       	adc	r25, r25
 880:	61 f0       	breq	.+24     	; 0x89a <__fp_splitA+0x20>
 882:	9f 3f       	cpi	r25, 0xFF	; 255
 884:	79 f0       	breq	.+30     	; 0x8a4 <__fp_splitA+0x2a>
 886:	87 95       	ror	r24
 888:	08 95       	ret
 88a:	12 16       	cp	r1, r18
 88c:	13 06       	cpc	r1, r19
 88e:	14 06       	cpc	r1, r20
 890:	55 1f       	adc	r21, r21
 892:	f2 cf       	rjmp	.-28     	; 0x878 <__fp_split3+0xe>
 894:	46 95       	lsr	r20
 896:	f1 df       	rcall	.-30     	; 0x87a <__fp_splitA>
 898:	08 c0       	rjmp	.+16     	; 0x8aa <__fp_splitA+0x30>
 89a:	16 16       	cp	r1, r22
 89c:	17 06       	cpc	r1, r23
 89e:	18 06       	cpc	r1, r24
 8a0:	99 1f       	adc	r25, r25
 8a2:	f1 cf       	rjmp	.-30     	; 0x886 <__fp_splitA+0xc>
 8a4:	86 95       	lsr	r24
 8a6:	71 05       	cpc	r23, r1
 8a8:	61 05       	cpc	r22, r1
 8aa:	08 94       	sec
 8ac:	08 95       	ret

000008ae <__fp_zero>:
 8ae:	e8 94       	clt

000008b0 <__fp_szero>:
 8b0:	bb 27       	eor	r27, r27
 8b2:	66 27       	eor	r22, r22
 8b4:	77 27       	eor	r23, r23
 8b6:	cb 01       	movw	r24, r22
 8b8:	97 f9       	bld	r25, 7
 8ba:	08 95       	ret

000008bc <pow>:
 8bc:	fa 01       	movw	r30, r20
 8be:	ee 0f       	add	r30, r30
 8c0:	ff 1f       	adc	r31, r31
 8c2:	30 96       	adiw	r30, 0x00	; 0
 8c4:	21 05       	cpc	r18, r1
 8c6:	31 05       	cpc	r19, r1
 8c8:	99 f1       	breq	.+102    	; 0x930 <pow+0x74>
 8ca:	61 15       	cp	r22, r1
 8cc:	71 05       	cpc	r23, r1
 8ce:	61 f4       	brne	.+24     	; 0x8e8 <pow+0x2c>
 8d0:	80 38       	cpi	r24, 0x80	; 128
 8d2:	bf e3       	ldi	r27, 0x3F	; 63
 8d4:	9b 07       	cpc	r25, r27
 8d6:	49 f1       	breq	.+82     	; 0x92a <pow+0x6e>
 8d8:	68 94       	set
 8da:	90 38       	cpi	r25, 0x80	; 128
 8dc:	81 05       	cpc	r24, r1
 8de:	61 f0       	breq	.+24     	; 0x8f8 <pow+0x3c>
 8e0:	80 38       	cpi	r24, 0x80	; 128
 8e2:	bf ef       	ldi	r27, 0xFF	; 255
 8e4:	9b 07       	cpc	r25, r27
 8e6:	41 f0       	breq	.+16     	; 0x8f8 <pow+0x3c>
 8e8:	99 23       	and	r25, r25
 8ea:	42 f5       	brpl	.+80     	; 0x93c <pow+0x80>
 8ec:	ff 3f       	cpi	r31, 0xFF	; 255
 8ee:	e1 05       	cpc	r30, r1
 8f0:	31 05       	cpc	r19, r1
 8f2:	21 05       	cpc	r18, r1
 8f4:	11 f1       	breq	.+68     	; 0x93a <pow+0x7e>
 8f6:	e8 94       	clt
 8f8:	08 94       	sec
 8fa:	e7 95       	ror	r30
 8fc:	d9 01       	movw	r26, r18
 8fe:	aa 23       	and	r26, r26
 900:	29 f4       	brne	.+10     	; 0x90c <pow+0x50>
 902:	ab 2f       	mov	r26, r27
 904:	be 2f       	mov	r27, r30
 906:	f8 5f       	subi	r31, 0xF8	; 248
 908:	d0 f3       	brcs	.-12     	; 0x8fe <pow+0x42>
 90a:	10 c0       	rjmp	.+32     	; 0x92c <pow+0x70>
 90c:	ff 5f       	subi	r31, 0xFF	; 255
 90e:	70 f4       	brcc	.+28     	; 0x92c <pow+0x70>
 910:	a6 95       	lsr	r26
 912:	e0 f7       	brcc	.-8      	; 0x90c <pow+0x50>
 914:	f7 39       	cpi	r31, 0x97	; 151
 916:	50 f0       	brcs	.+20     	; 0x92c <pow+0x70>
 918:	19 f0       	breq	.+6      	; 0x920 <pow+0x64>
 91a:	ff 3a       	cpi	r31, 0xAF	; 175
 91c:	38 f4       	brcc	.+14     	; 0x92c <pow+0x70>
 91e:	9f 77       	andi	r25, 0x7F	; 127
 920:	9f 93       	push	r25
 922:	0c d0       	rcall	.+24     	; 0x93c <pow+0x80>
 924:	0f 90       	pop	r0
 926:	07 fc       	sbrc	r0, 7
 928:	90 58       	subi	r25, 0x80	; 128
 92a:	08 95       	ret
 92c:	3e f0       	brts	.+14     	; 0x93c <pow+0x80>
 92e:	49 c0       	rjmp	.+146    	; 0x9c2 <__fp_nan>
 930:	60 e0       	ldi	r22, 0x00	; 0
 932:	70 e0       	ldi	r23, 0x00	; 0
 934:	80 e8       	ldi	r24, 0x80	; 128
 936:	9f e3       	ldi	r25, 0x3F	; 63
 938:	08 95       	ret
 93a:	4f e7       	ldi	r20, 0x7F	; 127
 93c:	9f 77       	andi	r25, 0x7F	; 127
 93e:	5f 93       	push	r21
 940:	4f 93       	push	r20
 942:	3f 93       	push	r19
 944:	2f 93       	push	r18
 946:	a7 d0       	rcall	.+334    	; 0xa96 <log>
 948:	2f 91       	pop	r18
 94a:	3f 91       	pop	r19
 94c:	4f 91       	pop	r20
 94e:	5f 91       	pop	r21
 950:	15 d1       	rcall	.+554    	; 0xb7c <__mulsf3>
 952:	05 c0       	rjmp	.+10     	; 0x95e <exp>
 954:	19 f4       	brne	.+6      	; 0x95c <pow+0xa0>
 956:	0e f0       	brts	.+2      	; 0x95a <pow+0x9e>
 958:	2e c0       	rjmp	.+92     	; 0x9b6 <__fp_inf>
 95a:	a9 cf       	rjmp	.-174    	; 0x8ae <__fp_zero>
 95c:	32 c0       	rjmp	.+100    	; 0x9c2 <__fp_nan>

0000095e <exp>:
 95e:	8d df       	rcall	.-230    	; 0x87a <__fp_splitA>
 960:	c8 f3       	brcs	.-14     	; 0x954 <pow+0x98>
 962:	96 38       	cpi	r25, 0x86	; 134
 964:	c0 f7       	brcc	.-16     	; 0x956 <pow+0x9a>
 966:	07 f8       	bld	r0, 7
 968:	0f 92       	push	r0
 96a:	e8 94       	clt
 96c:	2b e3       	ldi	r18, 0x3B	; 59
 96e:	3a ea       	ldi	r19, 0xAA	; 170
 970:	48 eb       	ldi	r20, 0xB8	; 184
 972:	5f e7       	ldi	r21, 0x7F	; 127
 974:	11 d1       	rcall	.+546    	; 0xb98 <__mulsf3_pse>
 976:	0f 92       	push	r0
 978:	0f 92       	push	r0
 97a:	0f 92       	push	r0
 97c:	4d b7       	in	r20, 0x3d	; 61
 97e:	5e b7       	in	r21, 0x3e	; 62
 980:	0f 92       	push	r0
 982:	c9 d0       	rcall	.+402    	; 0xb16 <modf>
 984:	e4 e5       	ldi	r30, 0x54	; 84
 986:	f0 e0       	ldi	r31, 0x00	; 0
 988:	1f d0       	rcall	.+62     	; 0x9c8 <__fp_powser>
 98a:	4f 91       	pop	r20
 98c:	5f 91       	pop	r21
 98e:	ef 91       	pop	r30
 990:	ff 91       	pop	r31
 992:	e5 95       	asr	r30
 994:	ee 1f       	adc	r30, r30
 996:	ff 1f       	adc	r31, r31
 998:	49 f0       	breq	.+18     	; 0x9ac <exp+0x4e>
 99a:	fe 57       	subi	r31, 0x7E	; 126
 99c:	e0 68       	ori	r30, 0x80	; 128
 99e:	44 27       	eor	r20, r20
 9a0:	ee 0f       	add	r30, r30
 9a2:	44 1f       	adc	r20, r20
 9a4:	fa 95       	dec	r31
 9a6:	e1 f7       	brne	.-8      	; 0x9a0 <exp+0x42>
 9a8:	41 95       	neg	r20
 9aa:	55 0b       	sbc	r21, r21
 9ac:	3b d0       	rcall	.+118    	; 0xa24 <ldexp>
 9ae:	0f 90       	pop	r0
 9b0:	07 fe       	sbrs	r0, 7
 9b2:	2f c0       	rjmp	.+94     	; 0xa12 <inverse>
 9b4:	08 95       	ret

000009b6 <__fp_inf>:
 9b6:	97 f9       	bld	r25, 7
 9b8:	9f 67       	ori	r25, 0x7F	; 127
 9ba:	80 e8       	ldi	r24, 0x80	; 128
 9bc:	70 e0       	ldi	r23, 0x00	; 0
 9be:	60 e0       	ldi	r22, 0x00	; 0
 9c0:	08 95       	ret

000009c2 <__fp_nan>:
 9c2:	9f ef       	ldi	r25, 0xFF	; 255
 9c4:	80 ec       	ldi	r24, 0xC0	; 192
 9c6:	08 95       	ret

000009c8 <__fp_powser>:
 9c8:	df 93       	push	r29
 9ca:	cf 93       	push	r28
 9cc:	1f 93       	push	r17
 9ce:	0f 93       	push	r16
 9d0:	ff 92       	push	r15
 9d2:	ef 92       	push	r14
 9d4:	df 92       	push	r13
 9d6:	7b 01       	movw	r14, r22
 9d8:	8c 01       	movw	r16, r24
 9da:	68 94       	set
 9dc:	05 c0       	rjmp	.+10     	; 0x9e8 <__fp_powser+0x20>
 9de:	da 2e       	mov	r13, r26
 9e0:	ef 01       	movw	r28, r30
 9e2:	d8 d0       	rcall	.+432    	; 0xb94 <__mulsf3x>
 9e4:	fe 01       	movw	r30, r28
 9e6:	e8 94       	clt
 9e8:	a5 91       	lpm	r26, Z+
 9ea:	25 91       	lpm	r18, Z+
 9ec:	35 91       	lpm	r19, Z+
 9ee:	45 91       	lpm	r20, Z+
 9f0:	55 91       	lpm	r21, Z+
 9f2:	ae f3       	brts	.-22     	; 0x9de <__fp_powser+0x16>
 9f4:	ef 01       	movw	r28, r30
 9f6:	37 d1       	rcall	.+622    	; 0xc66 <__addsf3x>
 9f8:	fe 01       	movw	r30, r28
 9fa:	97 01       	movw	r18, r14
 9fc:	a8 01       	movw	r20, r16
 9fe:	da 94       	dec	r13
 a00:	79 f7       	brne	.-34     	; 0x9e0 <__fp_powser+0x18>
 a02:	df 90       	pop	r13
 a04:	ef 90       	pop	r14
 a06:	ff 90       	pop	r15
 a08:	0f 91       	pop	r16
 a0a:	1f 91       	pop	r17
 a0c:	cf 91       	pop	r28
 a0e:	df 91       	pop	r29
 a10:	08 95       	ret

00000a12 <inverse>:
 a12:	9b 01       	movw	r18, r22
 a14:	ac 01       	movw	r20, r24
 a16:	60 e0       	ldi	r22, 0x00	; 0
 a18:	70 e0       	ldi	r23, 0x00	; 0
 a1a:	80 e8       	ldi	r24, 0x80	; 128
 a1c:	9f e3       	ldi	r25, 0x3F	; 63
 a1e:	76 c1       	rjmp	.+748    	; 0xd0c <__divsf3>
 a20:	ca cf       	rjmp	.-108    	; 0x9b6 <__fp_inf>
 a22:	dc c1       	rjmp	.+952    	; 0xddc <__fp_mpack>

00000a24 <ldexp>:
 a24:	2a df       	rcall	.-428    	; 0x87a <__fp_splitA>
 a26:	e8 f3       	brcs	.-6      	; 0xa22 <inverse+0x10>
 a28:	99 23       	and	r25, r25
 a2a:	d9 f3       	breq	.-10     	; 0xa22 <inverse+0x10>
 a2c:	94 0f       	add	r25, r20
 a2e:	51 1d       	adc	r21, r1
 a30:	bb f3       	brvs	.-18     	; 0xa20 <inverse+0xe>
 a32:	91 50       	subi	r25, 0x01	; 1
 a34:	50 40       	sbci	r21, 0x00	; 0
 a36:	94 f0       	brlt	.+36     	; 0xa5c <ldexp+0x38>
 a38:	59 f0       	breq	.+22     	; 0xa50 <ldexp+0x2c>
 a3a:	88 23       	and	r24, r24
 a3c:	32 f0       	brmi	.+12     	; 0xa4a <ldexp+0x26>
 a3e:	66 0f       	add	r22, r22
 a40:	77 1f       	adc	r23, r23
 a42:	88 1f       	adc	r24, r24
 a44:	91 50       	subi	r25, 0x01	; 1
 a46:	50 40       	sbci	r21, 0x00	; 0
 a48:	c1 f7       	brne	.-16     	; 0xa3a <ldexp+0x16>
 a4a:	9e 3f       	cpi	r25, 0xFE	; 254
 a4c:	51 05       	cpc	r21, r1
 a4e:	44 f7       	brge	.-48     	; 0xa20 <inverse+0xe>
 a50:	88 0f       	add	r24, r24
 a52:	91 1d       	adc	r25, r1
 a54:	96 95       	lsr	r25
 a56:	87 95       	ror	r24
 a58:	97 f9       	bld	r25, 7
 a5a:	08 95       	ret
 a5c:	5f 3f       	cpi	r21, 0xFF	; 255
 a5e:	ac f0       	brlt	.+42     	; 0xa8a <ldexp+0x66>
 a60:	98 3e       	cpi	r25, 0xE8	; 232
 a62:	9c f0       	brlt	.+38     	; 0xa8a <ldexp+0x66>
 a64:	bb 27       	eor	r27, r27
 a66:	86 95       	lsr	r24
 a68:	77 95       	ror	r23
 a6a:	67 95       	ror	r22
 a6c:	b7 95       	ror	r27
 a6e:	08 f4       	brcc	.+2      	; 0xa72 <ldexp+0x4e>
 a70:	b1 60       	ori	r27, 0x01	; 1
 a72:	93 95       	inc	r25
 a74:	c1 f7       	brne	.-16     	; 0xa66 <ldexp+0x42>
 a76:	bb 0f       	add	r27, r27
 a78:	58 f7       	brcc	.-42     	; 0xa50 <ldexp+0x2c>
 a7a:	11 f4       	brne	.+4      	; 0xa80 <ldexp+0x5c>
 a7c:	60 ff       	sbrs	r22, 0
 a7e:	e8 cf       	rjmp	.-48     	; 0xa50 <ldexp+0x2c>
 a80:	6f 5f       	subi	r22, 0xFF	; 255
 a82:	7f 4f       	sbci	r23, 0xFF	; 255
 a84:	8f 4f       	sbci	r24, 0xFF	; 255
 a86:	9f 4f       	sbci	r25, 0xFF	; 255
 a88:	e3 cf       	rjmp	.-58     	; 0xa50 <ldexp+0x2c>
 a8a:	12 cf       	rjmp	.-476    	; 0x8b0 <__fp_szero>
 a8c:	0e f0       	brts	.+2      	; 0xa90 <ldexp+0x6c>
 a8e:	a6 c1       	rjmp	.+844    	; 0xddc <__fp_mpack>
 a90:	98 cf       	rjmp	.-208    	; 0x9c2 <__fp_nan>
 a92:	68 94       	set
 a94:	90 cf       	rjmp	.-224    	; 0x9b6 <__fp_inf>

00000a96 <log>:
 a96:	f1 de       	rcall	.-542    	; 0x87a <__fp_splitA>
 a98:	c8 f3       	brcs	.-14     	; 0xa8c <ldexp+0x68>
 a9a:	99 23       	and	r25, r25
 a9c:	d1 f3       	breq	.-12     	; 0xa92 <ldexp+0x6e>
 a9e:	c6 f3       	brts	.-16     	; 0xa90 <ldexp+0x6c>
 aa0:	df 93       	push	r29
 aa2:	cf 93       	push	r28
 aa4:	1f 93       	push	r17
 aa6:	0f 93       	push	r16
 aa8:	ff 92       	push	r15
 aaa:	c9 2f       	mov	r28, r25
 aac:	dd 27       	eor	r29, r29
 aae:	88 23       	and	r24, r24
 ab0:	2a f0       	brmi	.+10     	; 0xabc <log+0x26>
 ab2:	21 97       	sbiw	r28, 0x01	; 1
 ab4:	66 0f       	add	r22, r22
 ab6:	77 1f       	adc	r23, r23
 ab8:	88 1f       	adc	r24, r24
 aba:	da f7       	brpl	.-10     	; 0xab2 <log+0x1c>
 abc:	20 e0       	ldi	r18, 0x00	; 0
 abe:	30 e0       	ldi	r19, 0x00	; 0
 ac0:	40 e8       	ldi	r20, 0x80	; 128
 ac2:	5f eb       	ldi	r21, 0xBF	; 191
 ac4:	9f e3       	ldi	r25, 0x3F	; 63
 ac6:	88 39       	cpi	r24, 0x98	; 152
 ac8:	20 f0       	brcs	.+8      	; 0xad2 <log+0x3c>
 aca:	80 3e       	cpi	r24, 0xE0	; 224
 acc:	30 f0       	brcs	.+12     	; 0xada <log+0x44>
 ace:	21 96       	adiw	r28, 0x01	; 1
 ad0:	8f 77       	andi	r24, 0x7F	; 127
 ad2:	b8 d0       	rcall	.+368    	; 0xc44 <__addsf3>
 ad4:	ec e7       	ldi	r30, 0x7C	; 124
 ad6:	f0 e0       	ldi	r31, 0x00	; 0
 ad8:	03 c0       	rjmp	.+6      	; 0xae0 <log+0x4a>
 ada:	b4 d0       	rcall	.+360    	; 0xc44 <__addsf3>
 adc:	e9 ea       	ldi	r30, 0xA9	; 169
 ade:	f0 e0       	ldi	r31, 0x00	; 0
 ae0:	73 df       	rcall	.-282    	; 0x9c8 <__fp_powser>
 ae2:	8b 01       	movw	r16, r22
 ae4:	be 01       	movw	r22, r28
 ae6:	ec 01       	movw	r28, r24
 ae8:	fb 2e       	mov	r15, r27
 aea:	6f 57       	subi	r22, 0x7F	; 127
 aec:	71 09       	sbc	r23, r1
 aee:	75 95       	asr	r23
 af0:	77 1f       	adc	r23, r23
 af2:	88 0b       	sbc	r24, r24
 af4:	99 0b       	sbc	r25, r25
 af6:	7e de       	rcall	.-772    	; 0x7f4 <__floatsisf>
 af8:	28 e1       	ldi	r18, 0x18	; 24
 afa:	32 e7       	ldi	r19, 0x72	; 114
 afc:	41 e3       	ldi	r20, 0x31	; 49
 afe:	5f e3       	ldi	r21, 0x3F	; 63
 b00:	49 d0       	rcall	.+146    	; 0xb94 <__mulsf3x>
 b02:	af 2d       	mov	r26, r15
 b04:	98 01       	movw	r18, r16
 b06:	ae 01       	movw	r20, r28
 b08:	ff 90       	pop	r15
 b0a:	0f 91       	pop	r16
 b0c:	1f 91       	pop	r17
 b0e:	cf 91       	pop	r28
 b10:	df 91       	pop	r29
 b12:	a9 d0       	rcall	.+338    	; 0xc66 <__addsf3x>
 b14:	7f c1       	rjmp	.+766    	; 0xe14 <__fp_round>

00000b16 <modf>:
 b16:	fa 01       	movw	r30, r20
 b18:	dc 01       	movw	r26, r24
 b1a:	aa 0f       	add	r26, r26
 b1c:	bb 1f       	adc	r27, r27
 b1e:	9b 01       	movw	r18, r22
 b20:	ac 01       	movw	r20, r24
 b22:	bf 57       	subi	r27, 0x7F	; 127
 b24:	28 f4       	brcc	.+10     	; 0xb30 <modf+0x1a>
 b26:	22 27       	eor	r18, r18
 b28:	33 27       	eor	r19, r19
 b2a:	44 27       	eor	r20, r20
 b2c:	50 78       	andi	r21, 0x80	; 128
 b2e:	1f c0       	rjmp	.+62     	; 0xb6e <modf+0x58>
 b30:	b7 51       	subi	r27, 0x17	; 23
 b32:	88 f4       	brcc	.+34     	; 0xb56 <modf+0x40>
 b34:	ab 2f       	mov	r26, r27
 b36:	00 24       	eor	r0, r0
 b38:	46 95       	lsr	r20
 b3a:	37 95       	ror	r19
 b3c:	27 95       	ror	r18
 b3e:	01 1c       	adc	r0, r1
 b40:	a3 95       	inc	r26
 b42:	d2 f3       	brmi	.-12     	; 0xb38 <modf+0x22>
 b44:	00 20       	and	r0, r0
 b46:	69 f0       	breq	.+26     	; 0xb62 <modf+0x4c>
 b48:	22 0f       	add	r18, r18
 b4a:	33 1f       	adc	r19, r19
 b4c:	44 1f       	adc	r20, r20
 b4e:	b3 95       	inc	r27
 b50:	da f3       	brmi	.-10     	; 0xb48 <modf+0x32>
 b52:	0d d0       	rcall	.+26     	; 0xb6e <modf+0x58>
 b54:	76 c0       	rjmp	.+236    	; 0xc42 <__subsf3>
 b56:	61 30       	cpi	r22, 0x01	; 1
 b58:	71 05       	cpc	r23, r1
 b5a:	a0 e8       	ldi	r26, 0x80	; 128
 b5c:	8a 07       	cpc	r24, r26
 b5e:	b9 46       	sbci	r27, 0x69	; 105
 b60:	30 f4       	brcc	.+12     	; 0xb6e <modf+0x58>
 b62:	9b 01       	movw	r18, r22
 b64:	ac 01       	movw	r20, r24
 b66:	66 27       	eor	r22, r22
 b68:	77 27       	eor	r23, r23
 b6a:	88 27       	eor	r24, r24
 b6c:	90 78       	andi	r25, 0x80	; 128
 b6e:	30 96       	adiw	r30, 0x00	; 0
 b70:	21 f0       	breq	.+8      	; 0xb7a <modf+0x64>
 b72:	20 83       	st	Z, r18
 b74:	31 83       	std	Z+1, r19	; 0x01
 b76:	42 83       	std	Z+2, r20	; 0x02
 b78:	53 83       	std	Z+3, r21	; 0x03
 b7a:	08 95       	ret

00000b7c <__mulsf3>:
 b7c:	0b d0       	rcall	.+22     	; 0xb94 <__mulsf3x>
 b7e:	4a c1       	rjmp	.+660    	; 0xe14 <__fp_round>
 b80:	3b d1       	rcall	.+630    	; 0xdf8 <__fp_pscA>
 b82:	28 f0       	brcs	.+10     	; 0xb8e <__mulsf3+0x12>
 b84:	40 d1       	rcall	.+640    	; 0xe06 <__fp_pscB>
 b86:	18 f0       	brcs	.+6      	; 0xb8e <__mulsf3+0x12>
 b88:	95 23       	and	r25, r21
 b8a:	09 f0       	breq	.+2      	; 0xb8e <__mulsf3+0x12>
 b8c:	14 cf       	rjmp	.-472    	; 0x9b6 <__fp_inf>
 b8e:	19 cf       	rjmp	.-462    	; 0x9c2 <__fp_nan>
 b90:	11 24       	eor	r1, r1
 b92:	8e ce       	rjmp	.-740    	; 0x8b0 <__fp_szero>

00000b94 <__mulsf3x>:
 b94:	6a de       	rcall	.-812    	; 0x86a <__fp_split3>
 b96:	a0 f3       	brcs	.-24     	; 0xb80 <__mulsf3+0x4>

00000b98 <__mulsf3_pse>:
 b98:	95 9f       	mul	r25, r21
 b9a:	d1 f3       	breq	.-12     	; 0xb90 <__mulsf3+0x14>
 b9c:	95 0f       	add	r25, r21
 b9e:	50 e0       	ldi	r21, 0x00	; 0
 ba0:	55 1f       	adc	r21, r21
 ba2:	62 9f       	mul	r22, r18
 ba4:	f0 01       	movw	r30, r0
 ba6:	72 9f       	mul	r23, r18
 ba8:	bb 27       	eor	r27, r27
 baa:	f0 0d       	add	r31, r0
 bac:	b1 1d       	adc	r27, r1
 bae:	63 9f       	mul	r22, r19
 bb0:	aa 27       	eor	r26, r26
 bb2:	f0 0d       	add	r31, r0
 bb4:	b1 1d       	adc	r27, r1
 bb6:	aa 1f       	adc	r26, r26
 bb8:	64 9f       	mul	r22, r20
 bba:	66 27       	eor	r22, r22
 bbc:	b0 0d       	add	r27, r0
 bbe:	a1 1d       	adc	r26, r1
 bc0:	66 1f       	adc	r22, r22
 bc2:	82 9f       	mul	r24, r18
 bc4:	22 27       	eor	r18, r18
 bc6:	b0 0d       	add	r27, r0
 bc8:	a1 1d       	adc	r26, r1
 bca:	62 1f       	adc	r22, r18
 bcc:	73 9f       	mul	r23, r19
 bce:	b0 0d       	add	r27, r0
 bd0:	a1 1d       	adc	r26, r1
 bd2:	62 1f       	adc	r22, r18
 bd4:	83 9f       	mul	r24, r19
 bd6:	a0 0d       	add	r26, r0
 bd8:	61 1d       	adc	r22, r1
 bda:	22 1f       	adc	r18, r18
 bdc:	74 9f       	mul	r23, r20
 bde:	33 27       	eor	r19, r19
 be0:	a0 0d       	add	r26, r0
 be2:	61 1d       	adc	r22, r1
 be4:	23 1f       	adc	r18, r19
 be6:	84 9f       	mul	r24, r20
 be8:	60 0d       	add	r22, r0
 bea:	21 1d       	adc	r18, r1
 bec:	82 2f       	mov	r24, r18
 bee:	76 2f       	mov	r23, r22
 bf0:	6a 2f       	mov	r22, r26
 bf2:	11 24       	eor	r1, r1
 bf4:	9f 57       	subi	r25, 0x7F	; 127
 bf6:	50 40       	sbci	r21, 0x00	; 0
 bf8:	8a f0       	brmi	.+34     	; 0xc1c <__mulsf3_pse+0x84>
 bfa:	e1 f0       	breq	.+56     	; 0xc34 <__mulsf3_pse+0x9c>
 bfc:	88 23       	and	r24, r24
 bfe:	4a f0       	brmi	.+18     	; 0xc12 <__mulsf3_pse+0x7a>
 c00:	ee 0f       	add	r30, r30
 c02:	ff 1f       	adc	r31, r31
 c04:	bb 1f       	adc	r27, r27
 c06:	66 1f       	adc	r22, r22
 c08:	77 1f       	adc	r23, r23
 c0a:	88 1f       	adc	r24, r24
 c0c:	91 50       	subi	r25, 0x01	; 1
 c0e:	50 40       	sbci	r21, 0x00	; 0
 c10:	a9 f7       	brne	.-22     	; 0xbfc <__mulsf3_pse+0x64>
 c12:	9e 3f       	cpi	r25, 0xFE	; 254
 c14:	51 05       	cpc	r21, r1
 c16:	70 f0       	brcs	.+28     	; 0xc34 <__mulsf3_pse+0x9c>
 c18:	ce ce       	rjmp	.-612    	; 0x9b6 <__fp_inf>
 c1a:	4a ce       	rjmp	.-876    	; 0x8b0 <__fp_szero>
 c1c:	5f 3f       	cpi	r21, 0xFF	; 255
 c1e:	ec f3       	brlt	.-6      	; 0xc1a <__mulsf3_pse+0x82>
 c20:	98 3e       	cpi	r25, 0xE8	; 232
 c22:	dc f3       	brlt	.-10     	; 0xc1a <__mulsf3_pse+0x82>
 c24:	86 95       	lsr	r24
 c26:	77 95       	ror	r23
 c28:	67 95       	ror	r22
 c2a:	b7 95       	ror	r27
 c2c:	f7 95       	ror	r31
 c2e:	e7 95       	ror	r30
 c30:	9f 5f       	subi	r25, 0xFF	; 255
 c32:	c1 f7       	brne	.-16     	; 0xc24 <__mulsf3_pse+0x8c>
 c34:	fe 2b       	or	r31, r30
 c36:	88 0f       	add	r24, r24
 c38:	91 1d       	adc	r25, r1
 c3a:	96 95       	lsr	r25
 c3c:	87 95       	ror	r24
 c3e:	97 f9       	bld	r25, 7
 c40:	08 95       	ret

00000c42 <__subsf3>:
 c42:	50 58       	subi	r21, 0x80	; 128

00000c44 <__addsf3>:
 c44:	bb 27       	eor	r27, r27
 c46:	aa 27       	eor	r26, r26
 c48:	0e d0       	rcall	.+28     	; 0xc66 <__addsf3x>
 c4a:	e4 c0       	rjmp	.+456    	; 0xe14 <__fp_round>
 c4c:	d5 d0       	rcall	.+426    	; 0xdf8 <__fp_pscA>
 c4e:	30 f0       	brcs	.+12     	; 0xc5c <__addsf3+0x18>
 c50:	da d0       	rcall	.+436    	; 0xe06 <__fp_pscB>
 c52:	20 f0       	brcs	.+8      	; 0xc5c <__addsf3+0x18>
 c54:	31 f4       	brne	.+12     	; 0xc62 <__addsf3+0x1e>
 c56:	9f 3f       	cpi	r25, 0xFF	; 255
 c58:	11 f4       	brne	.+4      	; 0xc5e <__addsf3+0x1a>
 c5a:	1e f4       	brtc	.+6      	; 0xc62 <__addsf3+0x1e>
 c5c:	b2 ce       	rjmp	.-668    	; 0x9c2 <__fp_nan>
 c5e:	0e f4       	brtc	.+2      	; 0xc62 <__addsf3+0x1e>
 c60:	e0 95       	com	r30
 c62:	e7 fb       	bst	r30, 7
 c64:	a8 ce       	rjmp	.-688    	; 0x9b6 <__fp_inf>

00000c66 <__addsf3x>:
 c66:	e9 2f       	mov	r30, r25
 c68:	00 de       	rcall	.-1024   	; 0x86a <__fp_split3>
 c6a:	80 f3       	brcs	.-32     	; 0xc4c <__addsf3+0x8>
 c6c:	ba 17       	cp	r27, r26
 c6e:	62 07       	cpc	r22, r18
 c70:	73 07       	cpc	r23, r19
 c72:	84 07       	cpc	r24, r20
 c74:	95 07       	cpc	r25, r21
 c76:	18 f0       	brcs	.+6      	; 0xc7e <__addsf3x+0x18>
 c78:	71 f4       	brne	.+28     	; 0xc96 <__addsf3x+0x30>
 c7a:	9e f5       	brtc	.+102    	; 0xce2 <__addsf3x+0x7c>
 c7c:	18 ce       	rjmp	.-976    	; 0x8ae <__fp_zero>
 c7e:	0e f4       	brtc	.+2      	; 0xc82 <__addsf3x+0x1c>
 c80:	e0 95       	com	r30
 c82:	0b 2e       	mov	r0, r27
 c84:	ba 2f       	mov	r27, r26
 c86:	a0 2d       	mov	r26, r0
 c88:	0b 01       	movw	r0, r22
 c8a:	b9 01       	movw	r22, r18
 c8c:	90 01       	movw	r18, r0
 c8e:	0c 01       	movw	r0, r24
 c90:	ca 01       	movw	r24, r20
 c92:	a0 01       	movw	r20, r0
 c94:	11 24       	eor	r1, r1
 c96:	ff 27       	eor	r31, r31
 c98:	59 1b       	sub	r21, r25
 c9a:	99 f0       	breq	.+38     	; 0xcc2 <__addsf3x+0x5c>
 c9c:	59 3f       	cpi	r21, 0xF9	; 249
 c9e:	50 f4       	brcc	.+20     	; 0xcb4 <__addsf3x+0x4e>
 ca0:	50 3e       	cpi	r21, 0xE0	; 224
 ca2:	68 f1       	brcs	.+90     	; 0xcfe <__addsf3x+0x98>
 ca4:	1a 16       	cp	r1, r26
 ca6:	f0 40       	sbci	r31, 0x00	; 0
 ca8:	a2 2f       	mov	r26, r18
 caa:	23 2f       	mov	r18, r19
 cac:	34 2f       	mov	r19, r20
 cae:	44 27       	eor	r20, r20
 cb0:	58 5f       	subi	r21, 0xF8	; 248
 cb2:	f3 cf       	rjmp	.-26     	; 0xc9a <__addsf3x+0x34>
 cb4:	46 95       	lsr	r20
 cb6:	37 95       	ror	r19
 cb8:	27 95       	ror	r18
 cba:	a7 95       	ror	r26
 cbc:	f0 40       	sbci	r31, 0x00	; 0
 cbe:	53 95       	inc	r21
 cc0:	c9 f7       	brne	.-14     	; 0xcb4 <__addsf3x+0x4e>
 cc2:	7e f4       	brtc	.+30     	; 0xce2 <__addsf3x+0x7c>
 cc4:	1f 16       	cp	r1, r31
 cc6:	ba 0b       	sbc	r27, r26
 cc8:	62 0b       	sbc	r22, r18
 cca:	73 0b       	sbc	r23, r19
 ccc:	84 0b       	sbc	r24, r20
 cce:	ba f0       	brmi	.+46     	; 0xcfe <__addsf3x+0x98>
 cd0:	91 50       	subi	r25, 0x01	; 1
 cd2:	a1 f0       	breq	.+40     	; 0xcfc <__addsf3x+0x96>
 cd4:	ff 0f       	add	r31, r31
 cd6:	bb 1f       	adc	r27, r27
 cd8:	66 1f       	adc	r22, r22
 cda:	77 1f       	adc	r23, r23
 cdc:	88 1f       	adc	r24, r24
 cde:	c2 f7       	brpl	.-16     	; 0xcd0 <__addsf3x+0x6a>
 ce0:	0e c0       	rjmp	.+28     	; 0xcfe <__addsf3x+0x98>
 ce2:	ba 0f       	add	r27, r26
 ce4:	62 1f       	adc	r22, r18
 ce6:	73 1f       	adc	r23, r19
 ce8:	84 1f       	adc	r24, r20
 cea:	48 f4       	brcc	.+18     	; 0xcfe <__addsf3x+0x98>
 cec:	87 95       	ror	r24
 cee:	77 95       	ror	r23
 cf0:	67 95       	ror	r22
 cf2:	b7 95       	ror	r27
 cf4:	f7 95       	ror	r31
 cf6:	9e 3f       	cpi	r25, 0xFE	; 254
 cf8:	08 f0       	brcs	.+2      	; 0xcfc <__addsf3x+0x96>
 cfa:	b3 cf       	rjmp	.-154    	; 0xc62 <__addsf3+0x1e>
 cfc:	93 95       	inc	r25
 cfe:	88 0f       	add	r24, r24
 d00:	08 f0       	brcs	.+2      	; 0xd04 <__addsf3x+0x9e>
 d02:	99 27       	eor	r25, r25
 d04:	ee 0f       	add	r30, r30
 d06:	97 95       	ror	r25
 d08:	87 95       	ror	r24
 d0a:	08 95       	ret

00000d0c <__divsf3>:
 d0c:	0c d0       	rcall	.+24     	; 0xd26 <__divsf3x>
 d0e:	82 c0       	rjmp	.+260    	; 0xe14 <__fp_round>
 d10:	7a d0       	rcall	.+244    	; 0xe06 <__fp_pscB>
 d12:	40 f0       	brcs	.+16     	; 0xd24 <__divsf3+0x18>
 d14:	71 d0       	rcall	.+226    	; 0xdf8 <__fp_pscA>
 d16:	30 f0       	brcs	.+12     	; 0xd24 <__divsf3+0x18>
 d18:	21 f4       	brne	.+8      	; 0xd22 <__divsf3+0x16>
 d1a:	5f 3f       	cpi	r21, 0xFF	; 255
 d1c:	19 f0       	breq	.+6      	; 0xd24 <__divsf3+0x18>
 d1e:	4b ce       	rjmp	.-874    	; 0x9b6 <__fp_inf>
 d20:	51 11       	cpse	r21, r1
 d22:	c6 cd       	rjmp	.-1140   	; 0x8b0 <__fp_szero>
 d24:	4e ce       	rjmp	.-868    	; 0x9c2 <__fp_nan>

00000d26 <__divsf3x>:
 d26:	a1 dd       	rcall	.-1214   	; 0x86a <__fp_split3>
 d28:	98 f3       	brcs	.-26     	; 0xd10 <__divsf3+0x4>

00000d2a <__divsf3_pse>:
 d2a:	99 23       	and	r25, r25
 d2c:	c9 f3       	breq	.-14     	; 0xd20 <__divsf3+0x14>
 d2e:	55 23       	and	r21, r21
 d30:	b1 f3       	breq	.-20     	; 0xd1e <__divsf3+0x12>
 d32:	95 1b       	sub	r25, r21
 d34:	55 0b       	sbc	r21, r21
 d36:	bb 27       	eor	r27, r27
 d38:	aa 27       	eor	r26, r26
 d3a:	62 17       	cp	r22, r18
 d3c:	73 07       	cpc	r23, r19
 d3e:	84 07       	cpc	r24, r20
 d40:	38 f0       	brcs	.+14     	; 0xd50 <__divsf3_pse+0x26>
 d42:	9f 5f       	subi	r25, 0xFF	; 255
 d44:	5f 4f       	sbci	r21, 0xFF	; 255
 d46:	22 0f       	add	r18, r18
 d48:	33 1f       	adc	r19, r19
 d4a:	44 1f       	adc	r20, r20
 d4c:	aa 1f       	adc	r26, r26
 d4e:	a9 f3       	breq	.-22     	; 0xd3a <__divsf3_pse+0x10>
 d50:	33 d0       	rcall	.+102    	; 0xdb8 <__divsf3_pse+0x8e>
 d52:	0e 2e       	mov	r0, r30
 d54:	3a f0       	brmi	.+14     	; 0xd64 <__divsf3_pse+0x3a>
 d56:	e0 e8       	ldi	r30, 0x80	; 128
 d58:	30 d0       	rcall	.+96     	; 0xdba <__divsf3_pse+0x90>
 d5a:	91 50       	subi	r25, 0x01	; 1
 d5c:	50 40       	sbci	r21, 0x00	; 0
 d5e:	e6 95       	lsr	r30
 d60:	00 1c       	adc	r0, r0
 d62:	ca f7       	brpl	.-14     	; 0xd56 <__divsf3_pse+0x2c>
 d64:	29 d0       	rcall	.+82     	; 0xdb8 <__divsf3_pse+0x8e>
 d66:	fe 2f       	mov	r31, r30
 d68:	27 d0       	rcall	.+78     	; 0xdb8 <__divsf3_pse+0x8e>
 d6a:	66 0f       	add	r22, r22
 d6c:	77 1f       	adc	r23, r23
 d6e:	88 1f       	adc	r24, r24
 d70:	bb 1f       	adc	r27, r27
 d72:	26 17       	cp	r18, r22
 d74:	37 07       	cpc	r19, r23
 d76:	48 07       	cpc	r20, r24
 d78:	ab 07       	cpc	r26, r27
 d7a:	b0 e8       	ldi	r27, 0x80	; 128
 d7c:	09 f0       	breq	.+2      	; 0xd80 <__divsf3_pse+0x56>
 d7e:	bb 0b       	sbc	r27, r27
 d80:	80 2d       	mov	r24, r0
 d82:	bf 01       	movw	r22, r30
 d84:	ff 27       	eor	r31, r31
 d86:	93 58       	subi	r25, 0x83	; 131
 d88:	5f 4f       	sbci	r21, 0xFF	; 255
 d8a:	2a f0       	brmi	.+10     	; 0xd96 <__divsf3_pse+0x6c>
 d8c:	9e 3f       	cpi	r25, 0xFE	; 254
 d8e:	51 05       	cpc	r21, r1
 d90:	68 f0       	brcs	.+26     	; 0xdac <__divsf3_pse+0x82>
 d92:	11 ce       	rjmp	.-990    	; 0x9b6 <__fp_inf>
 d94:	8d cd       	rjmp	.-1254   	; 0x8b0 <__fp_szero>
 d96:	5f 3f       	cpi	r21, 0xFF	; 255
 d98:	ec f3       	brlt	.-6      	; 0xd94 <__divsf3_pse+0x6a>
 d9a:	98 3e       	cpi	r25, 0xE8	; 232
 d9c:	dc f3       	brlt	.-10     	; 0xd94 <__divsf3_pse+0x6a>
 d9e:	86 95       	lsr	r24
 da0:	77 95       	ror	r23
 da2:	67 95       	ror	r22
 da4:	b7 95       	ror	r27
 da6:	f7 95       	ror	r31
 da8:	9f 5f       	subi	r25, 0xFF	; 255
 daa:	c9 f7       	brne	.-14     	; 0xd9e <__divsf3_pse+0x74>
 dac:	88 0f       	add	r24, r24
 dae:	91 1d       	adc	r25, r1
 db0:	96 95       	lsr	r25
 db2:	87 95       	ror	r24
 db4:	97 f9       	bld	r25, 7
 db6:	08 95       	ret
 db8:	e1 e0       	ldi	r30, 0x01	; 1
 dba:	66 0f       	add	r22, r22
 dbc:	77 1f       	adc	r23, r23
 dbe:	88 1f       	adc	r24, r24
 dc0:	bb 1f       	adc	r27, r27
 dc2:	62 17       	cp	r22, r18
 dc4:	73 07       	cpc	r23, r19
 dc6:	84 07       	cpc	r24, r20
 dc8:	ba 07       	cpc	r27, r26
 dca:	20 f0       	brcs	.+8      	; 0xdd4 <__divsf3_pse+0xaa>
 dcc:	62 1b       	sub	r22, r18
 dce:	73 0b       	sbc	r23, r19
 dd0:	84 0b       	sbc	r24, r20
 dd2:	ba 0b       	sbc	r27, r26
 dd4:	ee 1f       	adc	r30, r30
 dd6:	88 f7       	brcc	.-30     	; 0xdba <__divsf3_pse+0x90>
 dd8:	e0 95       	com	r30
 dda:	08 95       	ret

00000ddc <__fp_mpack>:
 ddc:	9f 3f       	cpi	r25, 0xFF	; 255
 dde:	31 f0       	breq	.+12     	; 0xdec <__fp_mpack_finite+0xc>

00000de0 <__fp_mpack_finite>:
 de0:	91 50       	subi	r25, 0x01	; 1
 de2:	20 f4       	brcc	.+8      	; 0xdec <__fp_mpack_finite+0xc>
 de4:	87 95       	ror	r24
 de6:	77 95       	ror	r23
 de8:	67 95       	ror	r22
 dea:	b7 95       	ror	r27
 dec:	88 0f       	add	r24, r24
 dee:	91 1d       	adc	r25, r1
 df0:	96 95       	lsr	r25
 df2:	87 95       	ror	r24
 df4:	97 f9       	bld	r25, 7
 df6:	08 95       	ret

00000df8 <__fp_pscA>:
 df8:	00 24       	eor	r0, r0
 dfa:	0a 94       	dec	r0
 dfc:	16 16       	cp	r1, r22
 dfe:	17 06       	cpc	r1, r23
 e00:	18 06       	cpc	r1, r24
 e02:	09 06       	cpc	r0, r25
 e04:	08 95       	ret

00000e06 <__fp_pscB>:
 e06:	00 24       	eor	r0, r0
 e08:	0a 94       	dec	r0
 e0a:	12 16       	cp	r1, r18
 e0c:	13 06       	cpc	r1, r19
 e0e:	14 06       	cpc	r1, r20
 e10:	05 06       	cpc	r0, r21
 e12:	08 95       	ret

00000e14 <__fp_round>:
 e14:	09 2e       	mov	r0, r25
 e16:	03 94       	inc	r0
 e18:	00 0c       	add	r0, r0
 e1a:	11 f4       	brne	.+4      	; 0xe20 <__fp_round+0xc>
 e1c:	88 23       	and	r24, r24
 e1e:	52 f0       	brmi	.+20     	; 0xe34 <__fp_round+0x20>
 e20:	bb 0f       	add	r27, r27
 e22:	40 f4       	brcc	.+16     	; 0xe34 <__fp_round+0x20>
 e24:	bf 2b       	or	r27, r31
 e26:	11 f4       	brne	.+4      	; 0xe2c <__fp_round+0x18>
 e28:	60 ff       	sbrs	r22, 0
 e2a:	04 c0       	rjmp	.+8      	; 0xe34 <__fp_round+0x20>
 e2c:	6f 5f       	subi	r22, 0xFF	; 255
 e2e:	7f 4f       	sbci	r23, 0xFF	; 255
 e30:	8f 4f       	sbci	r24, 0xFF	; 255
 e32:	9f 4f       	sbci	r25, 0xFF	; 255
 e34:	08 95       	ret

00000e36 <__mulsi3>:
 e36:	62 9f       	mul	r22, r18
 e38:	d0 01       	movw	r26, r0
 e3a:	73 9f       	mul	r23, r19
 e3c:	f0 01       	movw	r30, r0
 e3e:	82 9f       	mul	r24, r18
 e40:	e0 0d       	add	r30, r0
 e42:	f1 1d       	adc	r31, r1
 e44:	64 9f       	mul	r22, r20
 e46:	e0 0d       	add	r30, r0
 e48:	f1 1d       	adc	r31, r1
 e4a:	92 9f       	mul	r25, r18
 e4c:	f0 0d       	add	r31, r0
 e4e:	83 9f       	mul	r24, r19
 e50:	f0 0d       	add	r31, r0
 e52:	74 9f       	mul	r23, r20
 e54:	f0 0d       	add	r31, r0
 e56:	65 9f       	mul	r22, r21
 e58:	f0 0d       	add	r31, r0
 e5a:	99 27       	eor	r25, r25
 e5c:	72 9f       	mul	r23, r18
 e5e:	b0 0d       	add	r27, r0
 e60:	e1 1d       	adc	r30, r1
 e62:	f9 1f       	adc	r31, r25
 e64:	63 9f       	mul	r22, r19
 e66:	b0 0d       	add	r27, r0
 e68:	e1 1d       	adc	r30, r1
 e6a:	f9 1f       	adc	r31, r25
 e6c:	bd 01       	movw	r22, r26
 e6e:	cf 01       	movw	r24, r30
 e70:	11 24       	eor	r1, r1
 e72:	08 95       	ret

00000e74 <__udivmodhi4>:
 e74:	aa 1b       	sub	r26, r26
 e76:	bb 1b       	sub	r27, r27
 e78:	51 e1       	ldi	r21, 0x11	; 17
 e7a:	07 c0       	rjmp	.+14     	; 0xe8a <__udivmodhi4_ep>

00000e7c <__udivmodhi4_loop>:
 e7c:	aa 1f       	adc	r26, r26
 e7e:	bb 1f       	adc	r27, r27
 e80:	a6 17       	cp	r26, r22
 e82:	b7 07       	cpc	r27, r23
 e84:	10 f0       	brcs	.+4      	; 0xe8a <__udivmodhi4_ep>
 e86:	a6 1b       	sub	r26, r22
 e88:	b7 0b       	sbc	r27, r23

00000e8a <__udivmodhi4_ep>:
 e8a:	88 1f       	adc	r24, r24
 e8c:	99 1f       	adc	r25, r25
 e8e:	5a 95       	dec	r21
 e90:	a9 f7       	brne	.-22     	; 0xe7c <__udivmodhi4_loop>
 e92:	80 95       	com	r24
 e94:	90 95       	com	r25
 e96:	bc 01       	movw	r22, r24
 e98:	cd 01       	movw	r24, r26
 e9a:	08 95       	ret

00000e9c <__divmodhi4>:
 e9c:	97 fb       	bst	r25, 7
 e9e:	09 2e       	mov	r0, r25
 ea0:	07 26       	eor	r0, r23
 ea2:	0a d0       	rcall	.+20     	; 0xeb8 <__divmodhi4_neg1>
 ea4:	77 fd       	sbrc	r23, 7
 ea6:	04 d0       	rcall	.+8      	; 0xeb0 <__divmodhi4_neg2>
 ea8:	e5 df       	rcall	.-54     	; 0xe74 <__udivmodhi4>
 eaa:	06 d0       	rcall	.+12     	; 0xeb8 <__divmodhi4_neg1>
 eac:	00 20       	and	r0, r0
 eae:	1a f4       	brpl	.+6      	; 0xeb6 <__divmodhi4_exit>

00000eb0 <__divmodhi4_neg2>:
 eb0:	70 95       	com	r23
 eb2:	61 95       	neg	r22
 eb4:	7f 4f       	sbci	r23, 0xFF	; 255

00000eb6 <__divmodhi4_exit>:
 eb6:	08 95       	ret

00000eb8 <__divmodhi4_neg1>:
 eb8:	f6 f7       	brtc	.-4      	; 0xeb6 <__divmodhi4_exit>
 eba:	90 95       	com	r25
 ebc:	81 95       	neg	r24
 ebe:	9f 4f       	sbci	r25, 0xFF	; 255
 ec0:	08 95       	ret

00000ec2 <__divmodsi4>:
 ec2:	97 fb       	bst	r25, 7
 ec4:	09 2e       	mov	r0, r25
 ec6:	05 26       	eor	r0, r21
 ec8:	0e d0       	rcall	.+28     	; 0xee6 <__divmodsi4_neg1>
 eca:	57 fd       	sbrc	r21, 7
 ecc:	04 d0       	rcall	.+8      	; 0xed6 <__divmodsi4_neg2>
 ece:	14 d0       	rcall	.+40     	; 0xef8 <__udivmodsi4>
 ed0:	0a d0       	rcall	.+20     	; 0xee6 <__divmodsi4_neg1>
 ed2:	00 1c       	adc	r0, r0
 ed4:	38 f4       	brcc	.+14     	; 0xee4 <__divmodsi4_exit>

00000ed6 <__divmodsi4_neg2>:
 ed6:	50 95       	com	r21
 ed8:	40 95       	com	r20
 eda:	30 95       	com	r19
 edc:	21 95       	neg	r18
 ede:	3f 4f       	sbci	r19, 0xFF	; 255
 ee0:	4f 4f       	sbci	r20, 0xFF	; 255
 ee2:	5f 4f       	sbci	r21, 0xFF	; 255

00000ee4 <__divmodsi4_exit>:
 ee4:	08 95       	ret

00000ee6 <__divmodsi4_neg1>:
 ee6:	f6 f7       	brtc	.-4      	; 0xee4 <__divmodsi4_exit>
 ee8:	90 95       	com	r25
 eea:	80 95       	com	r24
 eec:	70 95       	com	r23
 eee:	61 95       	neg	r22
 ef0:	7f 4f       	sbci	r23, 0xFF	; 255
 ef2:	8f 4f       	sbci	r24, 0xFF	; 255
 ef4:	9f 4f       	sbci	r25, 0xFF	; 255
 ef6:	08 95       	ret

00000ef8 <__udivmodsi4>:
 ef8:	a1 e2       	ldi	r26, 0x21	; 33
 efa:	1a 2e       	mov	r1, r26
 efc:	aa 1b       	sub	r26, r26
 efe:	bb 1b       	sub	r27, r27
 f00:	fd 01       	movw	r30, r26
 f02:	0d c0       	rjmp	.+26     	; 0xf1e <__udivmodsi4_ep>

00000f04 <__udivmodsi4_loop>:
 f04:	aa 1f       	adc	r26, r26
 f06:	bb 1f       	adc	r27, r27
 f08:	ee 1f       	adc	r30, r30
 f0a:	ff 1f       	adc	r31, r31
 f0c:	a2 17       	cp	r26, r18
 f0e:	b3 07       	cpc	r27, r19
 f10:	e4 07       	cpc	r30, r20
 f12:	f5 07       	cpc	r31, r21
 f14:	20 f0       	brcs	.+8      	; 0xf1e <__udivmodsi4_ep>
 f16:	a2 1b       	sub	r26, r18
 f18:	b3 0b       	sbc	r27, r19
 f1a:	e4 0b       	sbc	r30, r20
 f1c:	f5 0b       	sbc	r31, r21

00000f1e <__udivmodsi4_ep>:
 f1e:	66 1f       	adc	r22, r22
 f20:	77 1f       	adc	r23, r23
 f22:	88 1f       	adc	r24, r24
 f24:	99 1f       	adc	r25, r25
 f26:	1a 94       	dec	r1
 f28:	69 f7       	brne	.-38     	; 0xf04 <__udivmodsi4_loop>
 f2a:	60 95       	com	r22
 f2c:	70 95       	com	r23
 f2e:	80 95       	com	r24
 f30:	90 95       	com	r25
 f32:	9b 01       	movw	r18, r22
 f34:	ac 01       	movw	r20, r24
 f36:	bd 01       	movw	r22, r26
 f38:	cf 01       	movw	r24, r30
 f3a:	08 95       	ret

00000f3c <_exit>:
 f3c:	f8 94       	cli

00000f3e <__stop_program>:
 f3e:	ff cf       	rjmp	.-2      	; 0xf3e <__stop_program>
