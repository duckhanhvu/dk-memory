
project 12.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a4c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000033e4  00000000  00000000  00000aa0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000abd  00000000  00000000  00003e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000040  00000000  00000000  00004941  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000e4  00000000  00000000  00004981  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000039f  00000000  00000000  00004a65  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000181  00000000  00000000  00004e04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000053a  00000000  00000000  00004f85  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  000054c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000014f  00000000  00000000  000055b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000022b  00000000  00000000  000056ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000056  00000000  00000000  0000592a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
   8:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
   c:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  10:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  14:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  18:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  1c:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  20:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__vector_9>
  28:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  2c:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  30:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  34:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  38:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  3c:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  40:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  44:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  48:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  4c:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  50:	0c 94 75 00 	jmp	0xea	; 0xea <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__divsf3>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d4 e0       	ldi	r29, 0x04	; 4
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61
  e2:	0e 94 77 00 	call	0xee	; 0xee <main>
  e6:	0c 94 24 05 	jmp	0xa48	; 0xa48 <_exit>

000000ea <__bad_interrupt>:
  ea:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ee <main>:
#include <avr/delay.h>
#include <avr/interrupt.h>

int main(void)
{
	DDRA=0x00;
  ee:	1a ba       	out	0x1a, r1	; 26
	PORTA=0xFF;
  f0:	8f ef       	ldi	r24, 0xFF	; 255
  f2:	8b bb       	out	0x1b, r24	; 27
   init_lcd();
  f4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <init_lcd>
   clear_lcd();
  f8:	0e 94 0e 01 	call	0x21c	; 0x21c <clear_lcd>
   TCCR0=(1<<CS01);
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	83 bf       	out	0x33, r24	; 51
                 
   TIMSK=(1<<TOIE0);
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	89 bf       	out	0x39, r24	; 57
   sei();                      
 104:	78 94       	sei

 
   return 0;
}
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	08 95       	ret

0000010c <__vector_9>:
ISR(TIMER0_OVF_vect){
 10c:	1f 92       	push	r1
 10e:	0f 92       	push	r0
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	0f 92       	push	r0
 114:	11 24       	eor	r1, r1
 116:	2f 93       	push	r18
 118:	3f 93       	push	r19
 11a:	4f 93       	push	r20
 11c:	5f 93       	push	r21
 11e:	6f 93       	push	r22
 120:	7f 93       	push	r23
 122:	8f 93       	push	r24
 124:	9f 93       	push	r25
 126:	af 93       	push	r26
 128:	bf 93       	push	r27
 12a:	ef 93       	push	r30
 12c:	ff 93       	push	r31
	if(bit_is_clear(PINA,3)){
 12e:	cb 99       	sbic	0x19, 3	; 25
 130:	04 c0       	rjmp	.+8      	; 0x13a <__vector_9+0x2e>
		printnumber_lcd(3);
 132:	83 e0       	ldi	r24, 0x03	; 3
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	0e 94 37 01 	call	0x26e	; 0x26e <printnumber_lcd>
	}
 13a:	ff 91       	pop	r31
 13c:	ef 91       	pop	r30
 13e:	bf 91       	pop	r27
 140:	af 91       	pop	r26
 142:	9f 91       	pop	r25
 144:	8f 91       	pop	r24
 146:	7f 91       	pop	r23
 148:	6f 91       	pop	r22
 14a:	5f 91       	pop	r21
 14c:	4f 91       	pop	r20
 14e:	3f 91       	pop	r19
 150:	2f 91       	pop	r18
 152:	0f 90       	pop	r0
 154:	0f be       	out	0x3f, r0	; 63
 156:	0f 90       	pop	r0
 158:	1f 90       	pop	r1
 15a:	18 95       	reti

0000015c <read_2Nib>:


char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
 15c:	aa 9a       	sbi	0x15, 2	; 21
	DDR_DATA=0x0F;
 15e:	8f e0       	ldi	r24, 0x0F	; 15
 160:	84 bb       	out	0x14, r24	; 20
	HNib=DATA_input&0xF0;
 162:	83 b3       	in	r24, 0x13	; 19
	clearbit(CTRL,EN);
 164:	aa 98       	cbi	0x15, 2	; 21
	
	setbit(CTRL,EN);
 166:	aa 9a       	sbi	0x15, 2	; 21
	LNib=DATA_input&0xF0;
 168:	93 b3       	in	r25, 0x13	; 19
	clearbit(CTRL,EN);
 16a:	aa 98       	cbi	0x15, 2	; 21
	LNib>>=4;
 16c:	92 95       	swap	r25
 16e:	9f 70       	andi	r25, 0x0F	; 15
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
	DDR_DATA=0x0F;
	HNib=DATA_input&0xF0;
 170:	80 7f       	andi	r24, 0xF0	; 240
	LNib=DATA_input&0xF0;
	clearbit(CTRL,EN);
	LNib>>=4;
	
	return (HNib|LNib);
}
 172:	89 2b       	or	r24, r25
 174:	08 95       	ret

00000176 <write_2Nib>:
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
 176:	95 b3       	in	r25, 0x15	; 21
 178:	9f 70       	andi	r25, 0x0F	; 15
	HNib=data&0xF0;
 17a:	28 2f       	mov	r18, r24
 17c:	20 7f       	andi	r18, 0xF0	; 240
	LNib=(data<<4)&0xF0;
	
	DATA_output=HNib|temp;
 17e:	29 2b       	or	r18, r25
 180:	25 bb       	out	0x15, r18	; 21
	setbit(CTRL,EN);
 182:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 184:	aa 98       	cbi	0x15, 2	; 21
}
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
	HNib=data&0xF0;
	LNib=(data<<4)&0xF0;
 186:	82 95       	swap	r24
 188:	80 7f       	andi	r24, 0xF0	; 240
	
	DATA_output=HNib|temp;
	setbit(CTRL,EN);
	clearbit(CTRL,EN);
	
	DATA_output=LNib|temp;
 18a:	98 2b       	or	r25, r24
 18c:	95 bb       	out	0x15, r25	; 21
	setbit(CTRL,EN);
 18e:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 190:	aa 98       	cbi	0x15, 2	; 21
	
}
 192:	08 95       	ret

00000194 <wait_lcd>:
void wait_lcd(void){
 194:	0f 93       	push	r16
 196:	1f 93       	push	r17
 198:	df 93       	push	r29
 19a:	cf 93       	push	r28
 19c:	0f 92       	push	r0
 19e:	cd b7       	in	r28, 0x3d	; 61
 1a0:	de b7       	in	r29, 0x3e	; 62
	while(1){
     	clearbit(CTRL,RS);
		setbit(CTRL,RW);
		temp=read_2Nib();
		
		if(bit_is_clear(temp,7)) break;
 1a2:	8e 01       	movw	r16, r28
 1a4:	0f 5f       	subi	r16, 0xFF	; 255
 1a6:	1f 4f       	sbci	r17, 0xFF	; 255
}
void wait_lcd(void){
	unsigned char temp;
	
	while(1){
     	clearbit(CTRL,RS);
 1a8:	a8 98       	cbi	0x15, 0	; 21
		setbit(CTRL,RW);
 1aa:	a9 9a       	sbi	0x15, 1	; 21
		temp=read_2Nib();
 1ac:	0e 94 ae 00 	call	0x15c	; 0x15c <read_2Nib>
 1b0:	89 83       	std	Y+1, r24	; 0x01
		
		if(bit_is_clear(temp,7)) break;
 1b2:	f8 01       	movw	r30, r16
 1b4:	80 81       	ld	r24, Z
 1b6:	88 23       	and	r24, r24
 1b8:	bc f3       	brlt	.-18     	; 0x1a8 <wait_lcd+0x14>
	}
	clearbit(CTRL,RW);
 1ba:	a9 98       	cbi	0x15, 1	; 21
	DDR_DATA=0xFF;
 1bc:	8f ef       	ldi	r24, 0xFF	; 255
 1be:	84 bb       	out	0x14, r24	; 20
	
}
 1c0:	0f 90       	pop	r0
 1c2:	cf 91       	pop	r28
 1c4:	df 91       	pop	r29
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	08 95       	ret

000001cc <init_lcd>:

void init_lcd(){//uses mode 4 bit
	DDR_CTRL=0xFF;
 1cc:	8f ef       	ldi	r24, 0xFF	; 255
 1ce:	84 bb       	out	0x14, r24	; 20
	DDR_DATA=0xFF;
 1d0:	84 bb       	out	0x14, r24	; 20
	clearbit(CTRL,RS);
 1d2:	a8 98       	cbi	0x15, 0	; 21
	clearbit(CTRL,RW);
 1d4:	a9 98       	cbi	0x15, 1	; 21
	clearbit(CTRL,EN);
 1d6:	aa 98       	cbi	0x15, 2	; 21
	
//function set	
	setbit(CTRL,EN);
 1d8:	aa 9a       	sbi	0x15, 2	; 21
	setbit(DATA_output,5);
 1da:	ad 9a       	sbi	0x15, 5	; 21
	clearbit(CTRL,EN);
 1dc:	aa 98       	cbi	0x15, 2	; 21
	wait_lcd();
 1de:	0e 94 ca 00 	call	0x194	; 0x194 <wait_lcd>
	write_2Nib(0x28);
 1e2:	88 e2       	ldi	r24, 0x28	; 40
 1e4:	0e 94 bb 00 	call	0x176	; 0x176 <write_2Nib>
	wait_lcd();
 1e8:	0e 94 ca 00 	call	0x194	; 0x194 <wait_lcd>
//display on/off control
    write_2Nib(0x0E);
 1ec:	8e e0       	ldi	r24, 0x0E	; 14
 1ee:	0e 94 bb 00 	call	0x176	; 0x176 <write_2Nib>
	wait_lcd();
 1f2:	0e 94 ca 00 	call	0x194	; 0x194 <wait_lcd>

//entry mode set 
    
    write_2Nib(0x06);
 1f6:	86 e0       	ldi	r24, 0x06	; 6
 1f8:	0e 94 bb 00 	call	0x176	; 0x176 <write_2Nib>
    wait_lcd();		
 1fc:	0e 94 ca 00 	call	0x194	; 0x194 <wait_lcd>
}
 200:	08 95       	ret

00000202 <putchar_lcd>:
void putchar_lcd(unsigned char data){
	
	setbit(CTRL,RS);
 202:	a8 9a       	sbi	0x15, 0	; 21
	write_2Nib(data);
 204:	0e 94 bb 00 	call	0x176	; 0x176 <write_2Nib>
	wait_lcd();
 208:	0e 94 ca 00 	call	0x194	; 0x194 <wait_lcd>
}
 20c:	08 95       	ret

0000020e <cursor_home>:
void cursor_home(){
	clearbit(CTRL,RS);
 20e:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x03);
 210:	83 e0       	ldi	r24, 0x03	; 3
 212:	0e 94 bb 00 	call	0x176	; 0x176 <write_2Nib>
	wait_lcd();
 216:	0e 94 ca 00 	call	0x194	; 0x194 <wait_lcd>
}
 21a:	08 95       	ret

0000021c <clear_lcd>:
void clear_lcd(){
	clearbit(CTRL,RS);
 21c:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	0e 94 bb 00 	call	0x176	; 0x176 <write_2Nib>
	wait_lcd();
 224:	0e 94 ca 00 	call	0x194	; 0x194 <wait_lcd>
}
 228:	08 95       	ret

0000022a <movecursor>:
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
	clearbit(CTRL,RS);
 22a:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
	wait_lcd();
}
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
 22c:	82 95       	swap	r24
 22e:	88 0f       	add	r24, r24
 230:	88 0f       	add	r24, r24
 232:	80 7c       	andi	r24, 0xC0	; 192
 234:	86 0f       	add	r24, r22
	clearbit(CTRL,RS);
	write_2Nib(x);
 236:	81 5c       	subi	r24, 0xC1	; 193
 238:	0e 94 bb 00 	call	0x176	; 0x176 <write_2Nib>
	wait_lcd();
 23c:	0e 94 ca 00 	call	0x194	; 0x194 <wait_lcd>
}
 240:	08 95       	ret

00000242 <count_number>:
int count_number(unsigned int number){
 242:	bc 01       	movw	r22, r24
	int dem=0;
	if(number!=0) {
 244:	00 97       	sbiw	r24, 0x00	; 0
 246:	71 f0       	breq	.+28     	; 0x264 <count_number+0x22>
 248:	20 e0       	ldi	r18, 0x00	; 0
 24a:	30 e0       	ldi	r19, 0x00	; 0
	   while(number){
		number=number/10;
 24c:	ea e0       	ldi	r30, 0x0A	; 10
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	cb 01       	movw	r24, r22
 252:	bf 01       	movw	r22, r30
 254:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__udivmodhi4>
		dem++;
 258:	2f 5f       	subi	r18, 0xFF	; 255
 25a:	3f 4f       	sbci	r19, 0xFF	; 255
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
	if(number!=0) {
	   while(number){
 25c:	61 15       	cp	r22, r1
 25e:	71 05       	cpc	r23, r1
 260:	b9 f7       	brne	.-18     	; 0x250 <count_number+0xe>
 262:	02 c0       	rjmp	.+4      	; 0x268 <count_number+0x26>
		number=number/10;
		dem++;
	}	
    } 
	else dem=dem+1; 
 264:	21 e0       	ldi	r18, 0x01	; 1
 266:	30 e0       	ldi	r19, 0x00	; 0
	return dem;

}
 268:	82 2f       	mov	r24, r18
 26a:	93 2f       	mov	r25, r19
 26c:	08 95       	ret

0000026e <printnumber_lcd>:
void printnumber_lcd(unsigned int number){
 26e:	af 92       	push	r10
 270:	bf 92       	push	r11
 272:	cf 92       	push	r12
 274:	df 92       	push	r13
 276:	ef 92       	push	r14
 278:	ff 92       	push	r15
 27a:	0f 93       	push	r16
 27c:	1f 93       	push	r17
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	e8 2e       	mov	r14, r24
 284:	f9 2e       	mov	r15, r25
	int a,n,i,temp;
	n= count_number(number);
 286:	0e 94 21 01 	call	0x242	; 0x242 <count_number>
 28a:	6c 01       	movw	r12, r24
	temp=pow(10,n-1);
 28c:	bc 01       	movw	r22, r24
 28e:	61 50       	subi	r22, 0x01	; 1
 290:	70 40       	sbci	r23, 0x00	; 0
 292:	88 27       	eor	r24, r24
 294:	77 fd       	sbrc	r23, 7
 296:	80 95       	com	r24
 298:	98 2f       	mov	r25, r24
 29a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__floatsisf>
 29e:	9b 01       	movw	r18, r22
 2a0:	ac 01       	movw	r20, r24
 2a2:	60 e0       	ldi	r22, 0x00	; 0
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	80 e2       	ldi	r24, 0x20	; 32
 2a8:	91 e4       	ldi	r25, 0x41	; 65
 2aa:	0e 94 40 02 	call	0x480	; 0x480 <pow>
	for(i=0;i<n;i++){
 2ae:	1c 14       	cp	r1, r12
 2b0:	1d 04       	cpc	r1, r13
 2b2:	04 f5       	brge	.+64     	; 0x2f4 <printnumber_lcd+0x86>

}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
 2b4:	0e 94 a9 01 	call	0x352	; 0x352 <__fixsfsi>
 2b8:	eb 01       	movw	r28, r22
	for(i=0;i<n;i++){
 2ba:	00 e0       	ldi	r16, 0x00	; 0
 2bc:	10 e0       	ldi	r17, 0x00	; 0
		a=number/temp;
		number=number%temp;
		temp=temp/10;
 2be:	0f 2e       	mov	r0, r31
 2c0:	fa e0       	ldi	r31, 0x0A	; 10
 2c2:	af 2e       	mov	r10, r31
 2c4:	bb 24       	eor	r11, r11
 2c6:	f0 2d       	mov	r31, r0
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
		a=number/temp;
 2c8:	8e 2d       	mov	r24, r14
 2ca:	9f 2d       	mov	r25, r15
 2cc:	be 01       	movw	r22, r28
 2ce:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__udivmodhi4>
 2d2:	26 2f       	mov	r18, r22
		number=number%temp;
 2d4:	e8 2e       	mov	r14, r24
 2d6:	f9 2e       	mov	r15, r25
		temp=temp/10;
 2d8:	ce 01       	movw	r24, r28
 2da:	b5 01       	movw	r22, r10
 2dc:	0e 94 11 05 	call	0xa22	; 0xa22 <__divmodhi4>
 2e0:	eb 01       	movw	r28, r22
		putchar_lcd(a+48);
 2e2:	82 2f       	mov	r24, r18
 2e4:	80 5d       	subi	r24, 0xD0	; 208
 2e6:	0e 94 01 01 	call	0x202	; 0x202 <putchar_lcd>
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
 2ea:	0f 5f       	subi	r16, 0xFF	; 255
 2ec:	1f 4f       	sbci	r17, 0xFF	; 255
 2ee:	0c 15       	cp	r16, r12
 2f0:	1d 05       	cpc	r17, r13
 2f2:	54 f3       	brlt	.-44     	; 0x2c8 <printnumber_lcd+0x5a>
	putchar_lcd(a+48);
	b=number%10;
	putchar_lcd(b+48);
	*/
	
}
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	1f 91       	pop	r17
 2fa:	0f 91       	pop	r16
 2fc:	ff 90       	pop	r15
 2fe:	ef 90       	pop	r14
 300:	df 90       	pop	r13
 302:	cf 90       	pop	r12
 304:	bf 90       	pop	r11
 306:	af 90       	pop	r10
 308:	08 95       	ret

0000030a <putstr_lcd>:
putstr_lcd(unsigned char *str, unsigned int lenght){
 30a:	ef 92       	push	r14
 30c:	ff 92       	push	r15
 30e:	0f 93       	push	r16
 310:	1f 93       	push	r17
 312:	cf 93       	push	r28
 314:	df 93       	push	r29
 316:	7b 01       	movw	r14, r22
	unsigned int i;
	for(i=0;i<lenght;i++){
 318:	61 15       	cp	r22, r1
 31a:	71 05       	cpc	r23, r1
 31c:	99 f0       	breq	.+38     	; 0x344 <putstr_lcd+0x3a>
 31e:	08 2f       	mov	r16, r24
 320:	19 2f       	mov	r17, r25
 322:	c0 e0       	ldi	r28, 0x00	; 0
 324:	d0 e0       	ldi	r29, 0x00	; 0
		if(*(str+i)>0){ 
 326:	f8 01       	movw	r30, r16
 328:	81 91       	ld	r24, Z+
 32a:	8f 01       	movw	r16, r30
 32c:	88 23       	and	r24, r24
 32e:	19 f0       	breq	.+6      	; 0x336 <putstr_lcd+0x2c>
			putchar_lcd(*(str+i));
 330:	0e 94 01 01 	call	0x202	; 0x202 <putchar_lcd>
 334:	03 c0       	rjmp	.+6      	; 0x33c <putstr_lcd+0x32>
			}
		else putchar_lcd(0);	
 336:	80 e0       	ldi	r24, 0x00	; 0
 338:	0e 94 01 01 	call	0x202	; 0x202 <putchar_lcd>
	*/
	
}
putstr_lcd(unsigned char *str, unsigned int lenght){
	unsigned int i;
	for(i=0;i<lenght;i++){
 33c:	21 96       	adiw	r28, 0x01	; 1
 33e:	ce 15       	cp	r28, r14
 340:	df 05       	cpc	r29, r15
 342:	88 f3       	brcs	.-30     	; 0x326 <putstr_lcd+0x1c>
		if(*(str+i)>0){ 
			putchar_lcd(*(str+i));
			}
		else putchar_lcd(0);	
}
}
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	1f 91       	pop	r17
 34a:	0f 91       	pop	r16
 34c:	ff 90       	pop	r15
 34e:	ef 90       	pop	r14
 350:	08 95       	ret

00000352 <__fixsfsi>:
 352:	04 d0       	rcall	.+8      	; 0x35c <__fixunssfsi>
 354:	68 94       	set
 356:	b1 11       	cpse	r27, r1
 358:	8d c0       	rjmp	.+282    	; 0x474 <__fp_szero>
 35a:	08 95       	ret

0000035c <__fixunssfsi>:
 35c:	70 d0       	rcall	.+224    	; 0x43e <__fp_splitA>
 35e:	88 f0       	brcs	.+34     	; 0x382 <__fixunssfsi+0x26>
 360:	9f 57       	subi	r25, 0x7F	; 127
 362:	90 f0       	brcs	.+36     	; 0x388 <__fixunssfsi+0x2c>
 364:	b9 2f       	mov	r27, r25
 366:	99 27       	eor	r25, r25
 368:	b7 51       	subi	r27, 0x17	; 23
 36a:	a0 f0       	brcs	.+40     	; 0x394 <__fixunssfsi+0x38>
 36c:	d1 f0       	breq	.+52     	; 0x3a2 <__fixunssfsi+0x46>
 36e:	66 0f       	add	r22, r22
 370:	77 1f       	adc	r23, r23
 372:	88 1f       	adc	r24, r24
 374:	99 1f       	adc	r25, r25
 376:	1a f0       	brmi	.+6      	; 0x37e <__fixunssfsi+0x22>
 378:	ba 95       	dec	r27
 37a:	c9 f7       	brne	.-14     	; 0x36e <__fixunssfsi+0x12>
 37c:	12 c0       	rjmp	.+36     	; 0x3a2 <__fixunssfsi+0x46>
 37e:	b1 30       	cpi	r27, 0x01	; 1
 380:	81 f0       	breq	.+32     	; 0x3a2 <__fixunssfsi+0x46>
 382:	77 d0       	rcall	.+238    	; 0x472 <__fp_zero>
 384:	b1 e0       	ldi	r27, 0x01	; 1
 386:	08 95       	ret
 388:	74 c0       	rjmp	.+232    	; 0x472 <__fp_zero>
 38a:	67 2f       	mov	r22, r23
 38c:	78 2f       	mov	r23, r24
 38e:	88 27       	eor	r24, r24
 390:	b8 5f       	subi	r27, 0xF8	; 248
 392:	39 f0       	breq	.+14     	; 0x3a2 <__fixunssfsi+0x46>
 394:	b9 3f       	cpi	r27, 0xF9	; 249
 396:	cc f3       	brlt	.-14     	; 0x38a <__fixunssfsi+0x2e>
 398:	86 95       	lsr	r24
 39a:	77 95       	ror	r23
 39c:	67 95       	ror	r22
 39e:	b3 95       	inc	r27
 3a0:	d9 f7       	brne	.-10     	; 0x398 <__fixunssfsi+0x3c>
 3a2:	3e f4       	brtc	.+14     	; 0x3b2 <__fixunssfsi+0x56>
 3a4:	90 95       	com	r25
 3a6:	80 95       	com	r24
 3a8:	70 95       	com	r23
 3aa:	61 95       	neg	r22
 3ac:	7f 4f       	sbci	r23, 0xFF	; 255
 3ae:	8f 4f       	sbci	r24, 0xFF	; 255
 3b0:	9f 4f       	sbci	r25, 0xFF	; 255
 3b2:	08 95       	ret

000003b4 <__floatunsisf>:
 3b4:	e8 94       	clt
 3b6:	09 c0       	rjmp	.+18     	; 0x3ca <__floatsisf+0x12>

000003b8 <__floatsisf>:
 3b8:	97 fb       	bst	r25, 7
 3ba:	3e f4       	brtc	.+14     	; 0x3ca <__floatsisf+0x12>
 3bc:	90 95       	com	r25
 3be:	80 95       	com	r24
 3c0:	70 95       	com	r23
 3c2:	61 95       	neg	r22
 3c4:	7f 4f       	sbci	r23, 0xFF	; 255
 3c6:	8f 4f       	sbci	r24, 0xFF	; 255
 3c8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ca:	99 23       	and	r25, r25
 3cc:	a9 f0       	breq	.+42     	; 0x3f8 <__floatsisf+0x40>
 3ce:	f9 2f       	mov	r31, r25
 3d0:	96 e9       	ldi	r25, 0x96	; 150
 3d2:	bb 27       	eor	r27, r27
 3d4:	93 95       	inc	r25
 3d6:	f6 95       	lsr	r31
 3d8:	87 95       	ror	r24
 3da:	77 95       	ror	r23
 3dc:	67 95       	ror	r22
 3de:	b7 95       	ror	r27
 3e0:	f1 11       	cpse	r31, r1
 3e2:	f8 cf       	rjmp	.-16     	; 0x3d4 <__floatsisf+0x1c>
 3e4:	fa f4       	brpl	.+62     	; 0x424 <__floatsisf+0x6c>
 3e6:	bb 0f       	add	r27, r27
 3e8:	11 f4       	brne	.+4      	; 0x3ee <__floatsisf+0x36>
 3ea:	60 ff       	sbrs	r22, 0
 3ec:	1b c0       	rjmp	.+54     	; 0x424 <__floatsisf+0x6c>
 3ee:	6f 5f       	subi	r22, 0xFF	; 255
 3f0:	7f 4f       	sbci	r23, 0xFF	; 255
 3f2:	8f 4f       	sbci	r24, 0xFF	; 255
 3f4:	9f 4f       	sbci	r25, 0xFF	; 255
 3f6:	16 c0       	rjmp	.+44     	; 0x424 <__floatsisf+0x6c>
 3f8:	88 23       	and	r24, r24
 3fa:	11 f0       	breq	.+4      	; 0x400 <__floatsisf+0x48>
 3fc:	96 e9       	ldi	r25, 0x96	; 150
 3fe:	11 c0       	rjmp	.+34     	; 0x422 <__floatsisf+0x6a>
 400:	77 23       	and	r23, r23
 402:	21 f0       	breq	.+8      	; 0x40c <__floatsisf+0x54>
 404:	9e e8       	ldi	r25, 0x8E	; 142
 406:	87 2f       	mov	r24, r23
 408:	76 2f       	mov	r23, r22
 40a:	05 c0       	rjmp	.+10     	; 0x416 <__floatsisf+0x5e>
 40c:	66 23       	and	r22, r22
 40e:	71 f0       	breq	.+28     	; 0x42c <__floatsisf+0x74>
 410:	96 e8       	ldi	r25, 0x86	; 134
 412:	86 2f       	mov	r24, r22
 414:	70 e0       	ldi	r23, 0x00	; 0
 416:	60 e0       	ldi	r22, 0x00	; 0
 418:	2a f0       	brmi	.+10     	; 0x424 <__floatsisf+0x6c>
 41a:	9a 95       	dec	r25
 41c:	66 0f       	add	r22, r22
 41e:	77 1f       	adc	r23, r23
 420:	88 1f       	adc	r24, r24
 422:	da f7       	brpl	.-10     	; 0x41a <__floatsisf+0x62>
 424:	88 0f       	add	r24, r24
 426:	96 95       	lsr	r25
 428:	87 95       	ror	r24
 42a:	97 f9       	bld	r25, 7
 42c:	08 95       	ret

0000042e <__fp_split3>:
 42e:	57 fd       	sbrc	r21, 7
 430:	90 58       	subi	r25, 0x80	; 128
 432:	44 0f       	add	r20, r20
 434:	55 1f       	adc	r21, r21
 436:	59 f0       	breq	.+22     	; 0x44e <__fp_splitA+0x10>
 438:	5f 3f       	cpi	r21, 0xFF	; 255
 43a:	71 f0       	breq	.+28     	; 0x458 <__fp_splitA+0x1a>
 43c:	47 95       	ror	r20

0000043e <__fp_splitA>:
 43e:	88 0f       	add	r24, r24
 440:	97 fb       	bst	r25, 7
 442:	99 1f       	adc	r25, r25
 444:	61 f0       	breq	.+24     	; 0x45e <__fp_splitA+0x20>
 446:	9f 3f       	cpi	r25, 0xFF	; 255
 448:	79 f0       	breq	.+30     	; 0x468 <__stack+0x9>
 44a:	87 95       	ror	r24
 44c:	08 95       	ret
 44e:	12 16       	cp	r1, r18
 450:	13 06       	cpc	r1, r19
 452:	14 06       	cpc	r1, r20
 454:	55 1f       	adc	r21, r21
 456:	f2 cf       	rjmp	.-28     	; 0x43c <__fp_split3+0xe>
 458:	46 95       	lsr	r20
 45a:	f1 df       	rcall	.-30     	; 0x43e <__fp_splitA>
 45c:	08 c0       	rjmp	.+16     	; 0x46e <__stack+0xf>
 45e:	16 16       	cp	r1, r22
 460:	17 06       	cpc	r1, r23
 462:	18 06       	cpc	r1, r24
 464:	99 1f       	adc	r25, r25
 466:	f1 cf       	rjmp	.-30     	; 0x44a <__fp_splitA+0xc>
 468:	86 95       	lsr	r24
 46a:	71 05       	cpc	r23, r1
 46c:	61 05       	cpc	r22, r1
 46e:	08 94       	sec
 470:	08 95       	ret

00000472 <__fp_zero>:
 472:	e8 94       	clt

00000474 <__fp_szero>:
 474:	bb 27       	eor	r27, r27
 476:	66 27       	eor	r22, r22
 478:	77 27       	eor	r23, r23
 47a:	cb 01       	movw	r24, r22
 47c:	97 f9       	bld	r25, 7
 47e:	08 95       	ret

00000480 <pow>:
 480:	fa 01       	movw	r30, r20
 482:	ee 0f       	add	r30, r30
 484:	ff 1f       	adc	r31, r31
 486:	30 96       	adiw	r30, 0x00	; 0
 488:	21 05       	cpc	r18, r1
 48a:	31 05       	cpc	r19, r1
 48c:	99 f1       	breq	.+102    	; 0x4f4 <pow+0x74>
 48e:	61 15       	cp	r22, r1
 490:	71 05       	cpc	r23, r1
 492:	61 f4       	brne	.+24     	; 0x4ac <pow+0x2c>
 494:	80 38       	cpi	r24, 0x80	; 128
 496:	bf e3       	ldi	r27, 0x3F	; 63
 498:	9b 07       	cpc	r25, r27
 49a:	49 f1       	breq	.+82     	; 0x4ee <pow+0x6e>
 49c:	68 94       	set
 49e:	90 38       	cpi	r25, 0x80	; 128
 4a0:	81 05       	cpc	r24, r1
 4a2:	61 f0       	breq	.+24     	; 0x4bc <pow+0x3c>
 4a4:	80 38       	cpi	r24, 0x80	; 128
 4a6:	bf ef       	ldi	r27, 0xFF	; 255
 4a8:	9b 07       	cpc	r25, r27
 4aa:	41 f0       	breq	.+16     	; 0x4bc <pow+0x3c>
 4ac:	99 23       	and	r25, r25
 4ae:	42 f5       	brpl	.+80     	; 0x500 <pow+0x80>
 4b0:	ff 3f       	cpi	r31, 0xFF	; 255
 4b2:	e1 05       	cpc	r30, r1
 4b4:	31 05       	cpc	r19, r1
 4b6:	21 05       	cpc	r18, r1
 4b8:	11 f1       	breq	.+68     	; 0x4fe <pow+0x7e>
 4ba:	e8 94       	clt
 4bc:	08 94       	sec
 4be:	e7 95       	ror	r30
 4c0:	d9 01       	movw	r26, r18
 4c2:	aa 23       	and	r26, r26
 4c4:	29 f4       	brne	.+10     	; 0x4d0 <pow+0x50>
 4c6:	ab 2f       	mov	r26, r27
 4c8:	be 2f       	mov	r27, r30
 4ca:	f8 5f       	subi	r31, 0xF8	; 248
 4cc:	d0 f3       	brcs	.-12     	; 0x4c2 <pow+0x42>
 4ce:	10 c0       	rjmp	.+32     	; 0x4f0 <pow+0x70>
 4d0:	ff 5f       	subi	r31, 0xFF	; 255
 4d2:	70 f4       	brcc	.+28     	; 0x4f0 <pow+0x70>
 4d4:	a6 95       	lsr	r26
 4d6:	e0 f7       	brcc	.-8      	; 0x4d0 <pow+0x50>
 4d8:	f7 39       	cpi	r31, 0x97	; 151
 4da:	50 f0       	brcs	.+20     	; 0x4f0 <pow+0x70>
 4dc:	19 f0       	breq	.+6      	; 0x4e4 <pow+0x64>
 4de:	ff 3a       	cpi	r31, 0xAF	; 175
 4e0:	38 f4       	brcc	.+14     	; 0x4f0 <pow+0x70>
 4e2:	9f 77       	andi	r25, 0x7F	; 127
 4e4:	9f 93       	push	r25
 4e6:	0c d0       	rcall	.+24     	; 0x500 <pow+0x80>
 4e8:	0f 90       	pop	r0
 4ea:	07 fc       	sbrc	r0, 7
 4ec:	90 58       	subi	r25, 0x80	; 128
 4ee:	08 95       	ret
 4f0:	3e f0       	brts	.+14     	; 0x500 <pow+0x80>
 4f2:	49 c0       	rjmp	.+146    	; 0x586 <__fp_nan>
 4f4:	60 e0       	ldi	r22, 0x00	; 0
 4f6:	70 e0       	ldi	r23, 0x00	; 0
 4f8:	80 e8       	ldi	r24, 0x80	; 128
 4fa:	9f e3       	ldi	r25, 0x3F	; 63
 4fc:	08 95       	ret
 4fe:	4f e7       	ldi	r20, 0x7F	; 127
 500:	9f 77       	andi	r25, 0x7F	; 127
 502:	5f 93       	push	r21
 504:	4f 93       	push	r20
 506:	3f 93       	push	r19
 508:	2f 93       	push	r18
 50a:	a7 d0       	rcall	.+334    	; 0x65a <log>
 50c:	2f 91       	pop	r18
 50e:	3f 91       	pop	r19
 510:	4f 91       	pop	r20
 512:	5f 91       	pop	r21
 514:	15 d1       	rcall	.+554    	; 0x740 <__mulsf3>
 516:	05 c0       	rjmp	.+10     	; 0x522 <exp>
 518:	19 f4       	brne	.+6      	; 0x520 <pow+0xa0>
 51a:	0e f0       	brts	.+2      	; 0x51e <pow+0x9e>
 51c:	2e c0       	rjmp	.+92     	; 0x57a <__fp_inf>
 51e:	a9 cf       	rjmp	.-174    	; 0x472 <__fp_zero>
 520:	32 c0       	rjmp	.+100    	; 0x586 <__fp_nan>

00000522 <exp>:
 522:	8d df       	rcall	.-230    	; 0x43e <__fp_splitA>
 524:	c8 f3       	brcs	.-14     	; 0x518 <pow+0x98>
 526:	96 38       	cpi	r25, 0x86	; 134
 528:	c0 f7       	brcc	.-16     	; 0x51a <pow+0x9a>
 52a:	07 f8       	bld	r0, 7
 52c:	0f 92       	push	r0
 52e:	e8 94       	clt
 530:	2b e3       	ldi	r18, 0x3B	; 59
 532:	3a ea       	ldi	r19, 0xAA	; 170
 534:	48 eb       	ldi	r20, 0xB8	; 184
 536:	5f e7       	ldi	r21, 0x7F	; 127
 538:	11 d1       	rcall	.+546    	; 0x75c <__mulsf3_pse>
 53a:	0f 92       	push	r0
 53c:	0f 92       	push	r0
 53e:	0f 92       	push	r0
 540:	4d b7       	in	r20, 0x3d	; 61
 542:	5e b7       	in	r21, 0x3e	; 62
 544:	0f 92       	push	r0
 546:	c9 d0       	rcall	.+402    	; 0x6da <modf>
 548:	e4 e5       	ldi	r30, 0x54	; 84
 54a:	f0 e0       	ldi	r31, 0x00	; 0
 54c:	1f d0       	rcall	.+62     	; 0x58c <__fp_powser>
 54e:	4f 91       	pop	r20
 550:	5f 91       	pop	r21
 552:	ef 91       	pop	r30
 554:	ff 91       	pop	r31
 556:	e5 95       	asr	r30
 558:	ee 1f       	adc	r30, r30
 55a:	ff 1f       	adc	r31, r31
 55c:	49 f0       	breq	.+18     	; 0x570 <exp+0x4e>
 55e:	fe 57       	subi	r31, 0x7E	; 126
 560:	e0 68       	ori	r30, 0x80	; 128
 562:	44 27       	eor	r20, r20
 564:	ee 0f       	add	r30, r30
 566:	44 1f       	adc	r20, r20
 568:	fa 95       	dec	r31
 56a:	e1 f7       	brne	.-8      	; 0x564 <exp+0x42>
 56c:	41 95       	neg	r20
 56e:	55 0b       	sbc	r21, r21
 570:	3b d0       	rcall	.+118    	; 0x5e8 <ldexp>
 572:	0f 90       	pop	r0
 574:	07 fe       	sbrs	r0, 7
 576:	2f c0       	rjmp	.+94     	; 0x5d6 <inverse>
 578:	08 95       	ret

0000057a <__fp_inf>:
 57a:	97 f9       	bld	r25, 7
 57c:	9f 67       	ori	r25, 0x7F	; 127
 57e:	80 e8       	ldi	r24, 0x80	; 128
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	60 e0       	ldi	r22, 0x00	; 0
 584:	08 95       	ret

00000586 <__fp_nan>:
 586:	9f ef       	ldi	r25, 0xFF	; 255
 588:	80 ec       	ldi	r24, 0xC0	; 192
 58a:	08 95       	ret

0000058c <__fp_powser>:
 58c:	df 93       	push	r29
 58e:	cf 93       	push	r28
 590:	1f 93       	push	r17
 592:	0f 93       	push	r16
 594:	ff 92       	push	r15
 596:	ef 92       	push	r14
 598:	df 92       	push	r13
 59a:	7b 01       	movw	r14, r22
 59c:	8c 01       	movw	r16, r24
 59e:	68 94       	set
 5a0:	05 c0       	rjmp	.+10     	; 0x5ac <__fp_powser+0x20>
 5a2:	da 2e       	mov	r13, r26
 5a4:	ef 01       	movw	r28, r30
 5a6:	d8 d0       	rcall	.+432    	; 0x758 <__mulsf3x>
 5a8:	fe 01       	movw	r30, r28
 5aa:	e8 94       	clt
 5ac:	a5 91       	lpm	r26, Z+
 5ae:	25 91       	lpm	r18, Z+
 5b0:	35 91       	lpm	r19, Z+
 5b2:	45 91       	lpm	r20, Z+
 5b4:	55 91       	lpm	r21, Z+
 5b6:	ae f3       	brts	.-22     	; 0x5a2 <__fp_powser+0x16>
 5b8:	ef 01       	movw	r28, r30
 5ba:	37 d1       	rcall	.+622    	; 0x82a <__addsf3x>
 5bc:	fe 01       	movw	r30, r28
 5be:	97 01       	movw	r18, r14
 5c0:	a8 01       	movw	r20, r16
 5c2:	da 94       	dec	r13
 5c4:	79 f7       	brne	.-34     	; 0x5a4 <__fp_powser+0x18>
 5c6:	df 90       	pop	r13
 5c8:	ef 90       	pop	r14
 5ca:	ff 90       	pop	r15
 5cc:	0f 91       	pop	r16
 5ce:	1f 91       	pop	r17
 5d0:	cf 91       	pop	r28
 5d2:	df 91       	pop	r29
 5d4:	08 95       	ret

000005d6 <inverse>:
 5d6:	9b 01       	movw	r18, r22
 5d8:	ac 01       	movw	r20, r24
 5da:	60 e0       	ldi	r22, 0x00	; 0
 5dc:	70 e0       	ldi	r23, 0x00	; 0
 5de:	80 e8       	ldi	r24, 0x80	; 128
 5e0:	9f e3       	ldi	r25, 0x3F	; 63
 5e2:	76 c1       	rjmp	.+748    	; 0x8d0 <__divsf3>
 5e4:	ca cf       	rjmp	.-108    	; 0x57a <__fp_inf>
 5e6:	dc c1       	rjmp	.+952    	; 0x9a0 <__fp_mpack>

000005e8 <ldexp>:
 5e8:	2a df       	rcall	.-428    	; 0x43e <__fp_splitA>
 5ea:	e8 f3       	brcs	.-6      	; 0x5e6 <inverse+0x10>
 5ec:	99 23       	and	r25, r25
 5ee:	d9 f3       	breq	.-10     	; 0x5e6 <inverse+0x10>
 5f0:	94 0f       	add	r25, r20
 5f2:	51 1d       	adc	r21, r1
 5f4:	bb f3       	brvs	.-18     	; 0x5e4 <inverse+0xe>
 5f6:	91 50       	subi	r25, 0x01	; 1
 5f8:	50 40       	sbci	r21, 0x00	; 0
 5fa:	94 f0       	brlt	.+36     	; 0x620 <ldexp+0x38>
 5fc:	59 f0       	breq	.+22     	; 0x614 <ldexp+0x2c>
 5fe:	88 23       	and	r24, r24
 600:	32 f0       	brmi	.+12     	; 0x60e <ldexp+0x26>
 602:	66 0f       	add	r22, r22
 604:	77 1f       	adc	r23, r23
 606:	88 1f       	adc	r24, r24
 608:	91 50       	subi	r25, 0x01	; 1
 60a:	50 40       	sbci	r21, 0x00	; 0
 60c:	c1 f7       	brne	.-16     	; 0x5fe <ldexp+0x16>
 60e:	9e 3f       	cpi	r25, 0xFE	; 254
 610:	51 05       	cpc	r21, r1
 612:	44 f7       	brge	.-48     	; 0x5e4 <inverse+0xe>
 614:	88 0f       	add	r24, r24
 616:	91 1d       	adc	r25, r1
 618:	96 95       	lsr	r25
 61a:	87 95       	ror	r24
 61c:	97 f9       	bld	r25, 7
 61e:	08 95       	ret
 620:	5f 3f       	cpi	r21, 0xFF	; 255
 622:	ac f0       	brlt	.+42     	; 0x64e <ldexp+0x66>
 624:	98 3e       	cpi	r25, 0xE8	; 232
 626:	9c f0       	brlt	.+38     	; 0x64e <ldexp+0x66>
 628:	bb 27       	eor	r27, r27
 62a:	86 95       	lsr	r24
 62c:	77 95       	ror	r23
 62e:	67 95       	ror	r22
 630:	b7 95       	ror	r27
 632:	08 f4       	brcc	.+2      	; 0x636 <ldexp+0x4e>
 634:	b1 60       	ori	r27, 0x01	; 1
 636:	93 95       	inc	r25
 638:	c1 f7       	brne	.-16     	; 0x62a <ldexp+0x42>
 63a:	bb 0f       	add	r27, r27
 63c:	58 f7       	brcc	.-42     	; 0x614 <ldexp+0x2c>
 63e:	11 f4       	brne	.+4      	; 0x644 <ldexp+0x5c>
 640:	60 ff       	sbrs	r22, 0
 642:	e8 cf       	rjmp	.-48     	; 0x614 <ldexp+0x2c>
 644:	6f 5f       	subi	r22, 0xFF	; 255
 646:	7f 4f       	sbci	r23, 0xFF	; 255
 648:	8f 4f       	sbci	r24, 0xFF	; 255
 64a:	9f 4f       	sbci	r25, 0xFF	; 255
 64c:	e3 cf       	rjmp	.-58     	; 0x614 <ldexp+0x2c>
 64e:	12 cf       	rjmp	.-476    	; 0x474 <__fp_szero>
 650:	0e f0       	brts	.+2      	; 0x654 <ldexp+0x6c>
 652:	a6 c1       	rjmp	.+844    	; 0x9a0 <__fp_mpack>
 654:	98 cf       	rjmp	.-208    	; 0x586 <__fp_nan>
 656:	68 94       	set
 658:	90 cf       	rjmp	.-224    	; 0x57a <__fp_inf>

0000065a <log>:
 65a:	f1 de       	rcall	.-542    	; 0x43e <__fp_splitA>
 65c:	c8 f3       	brcs	.-14     	; 0x650 <ldexp+0x68>
 65e:	99 23       	and	r25, r25
 660:	d1 f3       	breq	.-12     	; 0x656 <ldexp+0x6e>
 662:	c6 f3       	brts	.-16     	; 0x654 <ldexp+0x6c>
 664:	df 93       	push	r29
 666:	cf 93       	push	r28
 668:	1f 93       	push	r17
 66a:	0f 93       	push	r16
 66c:	ff 92       	push	r15
 66e:	c9 2f       	mov	r28, r25
 670:	dd 27       	eor	r29, r29
 672:	88 23       	and	r24, r24
 674:	2a f0       	brmi	.+10     	; 0x680 <log+0x26>
 676:	21 97       	sbiw	r28, 0x01	; 1
 678:	66 0f       	add	r22, r22
 67a:	77 1f       	adc	r23, r23
 67c:	88 1f       	adc	r24, r24
 67e:	da f7       	brpl	.-10     	; 0x676 <log+0x1c>
 680:	20 e0       	ldi	r18, 0x00	; 0
 682:	30 e0       	ldi	r19, 0x00	; 0
 684:	40 e8       	ldi	r20, 0x80	; 128
 686:	5f eb       	ldi	r21, 0xBF	; 191
 688:	9f e3       	ldi	r25, 0x3F	; 63
 68a:	88 39       	cpi	r24, 0x98	; 152
 68c:	20 f0       	brcs	.+8      	; 0x696 <log+0x3c>
 68e:	80 3e       	cpi	r24, 0xE0	; 224
 690:	30 f0       	brcs	.+12     	; 0x69e <log+0x44>
 692:	21 96       	adiw	r28, 0x01	; 1
 694:	8f 77       	andi	r24, 0x7F	; 127
 696:	b8 d0       	rcall	.+368    	; 0x808 <__addsf3>
 698:	ec e7       	ldi	r30, 0x7C	; 124
 69a:	f0 e0       	ldi	r31, 0x00	; 0
 69c:	03 c0       	rjmp	.+6      	; 0x6a4 <log+0x4a>
 69e:	b4 d0       	rcall	.+360    	; 0x808 <__addsf3>
 6a0:	e9 ea       	ldi	r30, 0xA9	; 169
 6a2:	f0 e0       	ldi	r31, 0x00	; 0
 6a4:	73 df       	rcall	.-282    	; 0x58c <__fp_powser>
 6a6:	8b 01       	movw	r16, r22
 6a8:	be 01       	movw	r22, r28
 6aa:	ec 01       	movw	r28, r24
 6ac:	fb 2e       	mov	r15, r27
 6ae:	6f 57       	subi	r22, 0x7F	; 127
 6b0:	71 09       	sbc	r23, r1
 6b2:	75 95       	asr	r23
 6b4:	77 1f       	adc	r23, r23
 6b6:	88 0b       	sbc	r24, r24
 6b8:	99 0b       	sbc	r25, r25
 6ba:	7e de       	rcall	.-772    	; 0x3b8 <__floatsisf>
 6bc:	28 e1       	ldi	r18, 0x18	; 24
 6be:	32 e7       	ldi	r19, 0x72	; 114
 6c0:	41 e3       	ldi	r20, 0x31	; 49
 6c2:	5f e3       	ldi	r21, 0x3F	; 63
 6c4:	49 d0       	rcall	.+146    	; 0x758 <__mulsf3x>
 6c6:	af 2d       	mov	r26, r15
 6c8:	98 01       	movw	r18, r16
 6ca:	ae 01       	movw	r20, r28
 6cc:	ff 90       	pop	r15
 6ce:	0f 91       	pop	r16
 6d0:	1f 91       	pop	r17
 6d2:	cf 91       	pop	r28
 6d4:	df 91       	pop	r29
 6d6:	a9 d0       	rcall	.+338    	; 0x82a <__addsf3x>
 6d8:	7f c1       	rjmp	.+766    	; 0x9d8 <__fp_round>

000006da <modf>:
 6da:	fa 01       	movw	r30, r20
 6dc:	dc 01       	movw	r26, r24
 6de:	aa 0f       	add	r26, r26
 6e0:	bb 1f       	adc	r27, r27
 6e2:	9b 01       	movw	r18, r22
 6e4:	ac 01       	movw	r20, r24
 6e6:	bf 57       	subi	r27, 0x7F	; 127
 6e8:	28 f4       	brcc	.+10     	; 0x6f4 <modf+0x1a>
 6ea:	22 27       	eor	r18, r18
 6ec:	33 27       	eor	r19, r19
 6ee:	44 27       	eor	r20, r20
 6f0:	50 78       	andi	r21, 0x80	; 128
 6f2:	1f c0       	rjmp	.+62     	; 0x732 <modf+0x58>
 6f4:	b7 51       	subi	r27, 0x17	; 23
 6f6:	88 f4       	brcc	.+34     	; 0x71a <modf+0x40>
 6f8:	ab 2f       	mov	r26, r27
 6fa:	00 24       	eor	r0, r0
 6fc:	46 95       	lsr	r20
 6fe:	37 95       	ror	r19
 700:	27 95       	ror	r18
 702:	01 1c       	adc	r0, r1
 704:	a3 95       	inc	r26
 706:	d2 f3       	brmi	.-12     	; 0x6fc <modf+0x22>
 708:	00 20       	and	r0, r0
 70a:	69 f0       	breq	.+26     	; 0x726 <modf+0x4c>
 70c:	22 0f       	add	r18, r18
 70e:	33 1f       	adc	r19, r19
 710:	44 1f       	adc	r20, r20
 712:	b3 95       	inc	r27
 714:	da f3       	brmi	.-10     	; 0x70c <modf+0x32>
 716:	0d d0       	rcall	.+26     	; 0x732 <modf+0x58>
 718:	76 c0       	rjmp	.+236    	; 0x806 <__subsf3>
 71a:	61 30       	cpi	r22, 0x01	; 1
 71c:	71 05       	cpc	r23, r1
 71e:	a0 e8       	ldi	r26, 0x80	; 128
 720:	8a 07       	cpc	r24, r26
 722:	b9 46       	sbci	r27, 0x69	; 105
 724:	30 f4       	brcc	.+12     	; 0x732 <modf+0x58>
 726:	9b 01       	movw	r18, r22
 728:	ac 01       	movw	r20, r24
 72a:	66 27       	eor	r22, r22
 72c:	77 27       	eor	r23, r23
 72e:	88 27       	eor	r24, r24
 730:	90 78       	andi	r25, 0x80	; 128
 732:	30 96       	adiw	r30, 0x00	; 0
 734:	21 f0       	breq	.+8      	; 0x73e <modf+0x64>
 736:	20 83       	st	Z, r18
 738:	31 83       	std	Z+1, r19	; 0x01
 73a:	42 83       	std	Z+2, r20	; 0x02
 73c:	53 83       	std	Z+3, r21	; 0x03
 73e:	08 95       	ret

00000740 <__mulsf3>:
 740:	0b d0       	rcall	.+22     	; 0x758 <__mulsf3x>
 742:	4a c1       	rjmp	.+660    	; 0x9d8 <__fp_round>
 744:	3b d1       	rcall	.+630    	; 0x9bc <__fp_pscA>
 746:	28 f0       	brcs	.+10     	; 0x752 <__mulsf3+0x12>
 748:	40 d1       	rcall	.+640    	; 0x9ca <__fp_pscB>
 74a:	18 f0       	brcs	.+6      	; 0x752 <__mulsf3+0x12>
 74c:	95 23       	and	r25, r21
 74e:	09 f0       	breq	.+2      	; 0x752 <__mulsf3+0x12>
 750:	14 cf       	rjmp	.-472    	; 0x57a <__fp_inf>
 752:	19 cf       	rjmp	.-462    	; 0x586 <__fp_nan>
 754:	11 24       	eor	r1, r1
 756:	8e ce       	rjmp	.-740    	; 0x474 <__fp_szero>

00000758 <__mulsf3x>:
 758:	6a de       	rcall	.-812    	; 0x42e <__fp_split3>
 75a:	a0 f3       	brcs	.-24     	; 0x744 <__mulsf3+0x4>

0000075c <__mulsf3_pse>:
 75c:	95 9f       	mul	r25, r21
 75e:	d1 f3       	breq	.-12     	; 0x754 <__mulsf3+0x14>
 760:	95 0f       	add	r25, r21
 762:	50 e0       	ldi	r21, 0x00	; 0
 764:	55 1f       	adc	r21, r21
 766:	62 9f       	mul	r22, r18
 768:	f0 01       	movw	r30, r0
 76a:	72 9f       	mul	r23, r18
 76c:	bb 27       	eor	r27, r27
 76e:	f0 0d       	add	r31, r0
 770:	b1 1d       	adc	r27, r1
 772:	63 9f       	mul	r22, r19
 774:	aa 27       	eor	r26, r26
 776:	f0 0d       	add	r31, r0
 778:	b1 1d       	adc	r27, r1
 77a:	aa 1f       	adc	r26, r26
 77c:	64 9f       	mul	r22, r20
 77e:	66 27       	eor	r22, r22
 780:	b0 0d       	add	r27, r0
 782:	a1 1d       	adc	r26, r1
 784:	66 1f       	adc	r22, r22
 786:	82 9f       	mul	r24, r18
 788:	22 27       	eor	r18, r18
 78a:	b0 0d       	add	r27, r0
 78c:	a1 1d       	adc	r26, r1
 78e:	62 1f       	adc	r22, r18
 790:	73 9f       	mul	r23, r19
 792:	b0 0d       	add	r27, r0
 794:	a1 1d       	adc	r26, r1
 796:	62 1f       	adc	r22, r18
 798:	83 9f       	mul	r24, r19
 79a:	a0 0d       	add	r26, r0
 79c:	61 1d       	adc	r22, r1
 79e:	22 1f       	adc	r18, r18
 7a0:	74 9f       	mul	r23, r20
 7a2:	33 27       	eor	r19, r19
 7a4:	a0 0d       	add	r26, r0
 7a6:	61 1d       	adc	r22, r1
 7a8:	23 1f       	adc	r18, r19
 7aa:	84 9f       	mul	r24, r20
 7ac:	60 0d       	add	r22, r0
 7ae:	21 1d       	adc	r18, r1
 7b0:	82 2f       	mov	r24, r18
 7b2:	76 2f       	mov	r23, r22
 7b4:	6a 2f       	mov	r22, r26
 7b6:	11 24       	eor	r1, r1
 7b8:	9f 57       	subi	r25, 0x7F	; 127
 7ba:	50 40       	sbci	r21, 0x00	; 0
 7bc:	8a f0       	brmi	.+34     	; 0x7e0 <__mulsf3_pse+0x84>
 7be:	e1 f0       	breq	.+56     	; 0x7f8 <__mulsf3_pse+0x9c>
 7c0:	88 23       	and	r24, r24
 7c2:	4a f0       	brmi	.+18     	; 0x7d6 <__mulsf3_pse+0x7a>
 7c4:	ee 0f       	add	r30, r30
 7c6:	ff 1f       	adc	r31, r31
 7c8:	bb 1f       	adc	r27, r27
 7ca:	66 1f       	adc	r22, r22
 7cc:	77 1f       	adc	r23, r23
 7ce:	88 1f       	adc	r24, r24
 7d0:	91 50       	subi	r25, 0x01	; 1
 7d2:	50 40       	sbci	r21, 0x00	; 0
 7d4:	a9 f7       	brne	.-22     	; 0x7c0 <__mulsf3_pse+0x64>
 7d6:	9e 3f       	cpi	r25, 0xFE	; 254
 7d8:	51 05       	cpc	r21, r1
 7da:	70 f0       	brcs	.+28     	; 0x7f8 <__mulsf3_pse+0x9c>
 7dc:	ce ce       	rjmp	.-612    	; 0x57a <__fp_inf>
 7de:	4a ce       	rjmp	.-876    	; 0x474 <__fp_szero>
 7e0:	5f 3f       	cpi	r21, 0xFF	; 255
 7e2:	ec f3       	brlt	.-6      	; 0x7de <__mulsf3_pse+0x82>
 7e4:	98 3e       	cpi	r25, 0xE8	; 232
 7e6:	dc f3       	brlt	.-10     	; 0x7de <__mulsf3_pse+0x82>
 7e8:	86 95       	lsr	r24
 7ea:	77 95       	ror	r23
 7ec:	67 95       	ror	r22
 7ee:	b7 95       	ror	r27
 7f0:	f7 95       	ror	r31
 7f2:	e7 95       	ror	r30
 7f4:	9f 5f       	subi	r25, 0xFF	; 255
 7f6:	c1 f7       	brne	.-16     	; 0x7e8 <__mulsf3_pse+0x8c>
 7f8:	fe 2b       	or	r31, r30
 7fa:	88 0f       	add	r24, r24
 7fc:	91 1d       	adc	r25, r1
 7fe:	96 95       	lsr	r25
 800:	87 95       	ror	r24
 802:	97 f9       	bld	r25, 7
 804:	08 95       	ret

00000806 <__subsf3>:
 806:	50 58       	subi	r21, 0x80	; 128

00000808 <__addsf3>:
 808:	bb 27       	eor	r27, r27
 80a:	aa 27       	eor	r26, r26
 80c:	0e d0       	rcall	.+28     	; 0x82a <__addsf3x>
 80e:	e4 c0       	rjmp	.+456    	; 0x9d8 <__fp_round>
 810:	d5 d0       	rcall	.+426    	; 0x9bc <__fp_pscA>
 812:	30 f0       	brcs	.+12     	; 0x820 <__addsf3+0x18>
 814:	da d0       	rcall	.+436    	; 0x9ca <__fp_pscB>
 816:	20 f0       	brcs	.+8      	; 0x820 <__addsf3+0x18>
 818:	31 f4       	brne	.+12     	; 0x826 <__addsf3+0x1e>
 81a:	9f 3f       	cpi	r25, 0xFF	; 255
 81c:	11 f4       	brne	.+4      	; 0x822 <__addsf3+0x1a>
 81e:	1e f4       	brtc	.+6      	; 0x826 <__addsf3+0x1e>
 820:	b2 ce       	rjmp	.-668    	; 0x586 <__fp_nan>
 822:	0e f4       	brtc	.+2      	; 0x826 <__addsf3+0x1e>
 824:	e0 95       	com	r30
 826:	e7 fb       	bst	r30, 7
 828:	a8 ce       	rjmp	.-688    	; 0x57a <__fp_inf>

0000082a <__addsf3x>:
 82a:	e9 2f       	mov	r30, r25
 82c:	00 de       	rcall	.-1024   	; 0x42e <__fp_split3>
 82e:	80 f3       	brcs	.-32     	; 0x810 <__addsf3+0x8>
 830:	ba 17       	cp	r27, r26
 832:	62 07       	cpc	r22, r18
 834:	73 07       	cpc	r23, r19
 836:	84 07       	cpc	r24, r20
 838:	95 07       	cpc	r25, r21
 83a:	18 f0       	brcs	.+6      	; 0x842 <__addsf3x+0x18>
 83c:	71 f4       	brne	.+28     	; 0x85a <__addsf3x+0x30>
 83e:	9e f5       	brtc	.+102    	; 0x8a6 <__addsf3x+0x7c>
 840:	18 ce       	rjmp	.-976    	; 0x472 <__fp_zero>
 842:	0e f4       	brtc	.+2      	; 0x846 <__addsf3x+0x1c>
 844:	e0 95       	com	r30
 846:	0b 2e       	mov	r0, r27
 848:	ba 2f       	mov	r27, r26
 84a:	a0 2d       	mov	r26, r0
 84c:	0b 01       	movw	r0, r22
 84e:	b9 01       	movw	r22, r18
 850:	90 01       	movw	r18, r0
 852:	0c 01       	movw	r0, r24
 854:	ca 01       	movw	r24, r20
 856:	a0 01       	movw	r20, r0
 858:	11 24       	eor	r1, r1
 85a:	ff 27       	eor	r31, r31
 85c:	59 1b       	sub	r21, r25
 85e:	99 f0       	breq	.+38     	; 0x886 <__addsf3x+0x5c>
 860:	59 3f       	cpi	r21, 0xF9	; 249
 862:	50 f4       	brcc	.+20     	; 0x878 <__addsf3x+0x4e>
 864:	50 3e       	cpi	r21, 0xE0	; 224
 866:	68 f1       	brcs	.+90     	; 0x8c2 <__addsf3x+0x98>
 868:	1a 16       	cp	r1, r26
 86a:	f0 40       	sbci	r31, 0x00	; 0
 86c:	a2 2f       	mov	r26, r18
 86e:	23 2f       	mov	r18, r19
 870:	34 2f       	mov	r19, r20
 872:	44 27       	eor	r20, r20
 874:	58 5f       	subi	r21, 0xF8	; 248
 876:	f3 cf       	rjmp	.-26     	; 0x85e <__addsf3x+0x34>
 878:	46 95       	lsr	r20
 87a:	37 95       	ror	r19
 87c:	27 95       	ror	r18
 87e:	a7 95       	ror	r26
 880:	f0 40       	sbci	r31, 0x00	; 0
 882:	53 95       	inc	r21
 884:	c9 f7       	brne	.-14     	; 0x878 <__addsf3x+0x4e>
 886:	7e f4       	brtc	.+30     	; 0x8a6 <__addsf3x+0x7c>
 888:	1f 16       	cp	r1, r31
 88a:	ba 0b       	sbc	r27, r26
 88c:	62 0b       	sbc	r22, r18
 88e:	73 0b       	sbc	r23, r19
 890:	84 0b       	sbc	r24, r20
 892:	ba f0       	brmi	.+46     	; 0x8c2 <__addsf3x+0x98>
 894:	91 50       	subi	r25, 0x01	; 1
 896:	a1 f0       	breq	.+40     	; 0x8c0 <__addsf3x+0x96>
 898:	ff 0f       	add	r31, r31
 89a:	bb 1f       	adc	r27, r27
 89c:	66 1f       	adc	r22, r22
 89e:	77 1f       	adc	r23, r23
 8a0:	88 1f       	adc	r24, r24
 8a2:	c2 f7       	brpl	.-16     	; 0x894 <__addsf3x+0x6a>
 8a4:	0e c0       	rjmp	.+28     	; 0x8c2 <__addsf3x+0x98>
 8a6:	ba 0f       	add	r27, r26
 8a8:	62 1f       	adc	r22, r18
 8aa:	73 1f       	adc	r23, r19
 8ac:	84 1f       	adc	r24, r20
 8ae:	48 f4       	brcc	.+18     	; 0x8c2 <__addsf3x+0x98>
 8b0:	87 95       	ror	r24
 8b2:	77 95       	ror	r23
 8b4:	67 95       	ror	r22
 8b6:	b7 95       	ror	r27
 8b8:	f7 95       	ror	r31
 8ba:	9e 3f       	cpi	r25, 0xFE	; 254
 8bc:	08 f0       	brcs	.+2      	; 0x8c0 <__addsf3x+0x96>
 8be:	b3 cf       	rjmp	.-154    	; 0x826 <__addsf3+0x1e>
 8c0:	93 95       	inc	r25
 8c2:	88 0f       	add	r24, r24
 8c4:	08 f0       	brcs	.+2      	; 0x8c8 <__addsf3x+0x9e>
 8c6:	99 27       	eor	r25, r25
 8c8:	ee 0f       	add	r30, r30
 8ca:	97 95       	ror	r25
 8cc:	87 95       	ror	r24
 8ce:	08 95       	ret

000008d0 <__divsf3>:
 8d0:	0c d0       	rcall	.+24     	; 0x8ea <__divsf3x>
 8d2:	82 c0       	rjmp	.+260    	; 0x9d8 <__fp_round>
 8d4:	7a d0       	rcall	.+244    	; 0x9ca <__fp_pscB>
 8d6:	40 f0       	brcs	.+16     	; 0x8e8 <__divsf3+0x18>
 8d8:	71 d0       	rcall	.+226    	; 0x9bc <__fp_pscA>
 8da:	30 f0       	brcs	.+12     	; 0x8e8 <__divsf3+0x18>
 8dc:	21 f4       	brne	.+8      	; 0x8e6 <__divsf3+0x16>
 8de:	5f 3f       	cpi	r21, 0xFF	; 255
 8e0:	19 f0       	breq	.+6      	; 0x8e8 <__divsf3+0x18>
 8e2:	4b ce       	rjmp	.-874    	; 0x57a <__fp_inf>
 8e4:	51 11       	cpse	r21, r1
 8e6:	c6 cd       	rjmp	.-1140   	; 0x474 <__fp_szero>
 8e8:	4e ce       	rjmp	.-868    	; 0x586 <__fp_nan>

000008ea <__divsf3x>:
 8ea:	a1 dd       	rcall	.-1214   	; 0x42e <__fp_split3>
 8ec:	98 f3       	brcs	.-26     	; 0x8d4 <__divsf3+0x4>

000008ee <__divsf3_pse>:
 8ee:	99 23       	and	r25, r25
 8f0:	c9 f3       	breq	.-14     	; 0x8e4 <__divsf3+0x14>
 8f2:	55 23       	and	r21, r21
 8f4:	b1 f3       	breq	.-20     	; 0x8e2 <__divsf3+0x12>
 8f6:	95 1b       	sub	r25, r21
 8f8:	55 0b       	sbc	r21, r21
 8fa:	bb 27       	eor	r27, r27
 8fc:	aa 27       	eor	r26, r26
 8fe:	62 17       	cp	r22, r18
 900:	73 07       	cpc	r23, r19
 902:	84 07       	cpc	r24, r20
 904:	38 f0       	brcs	.+14     	; 0x914 <__divsf3_pse+0x26>
 906:	9f 5f       	subi	r25, 0xFF	; 255
 908:	5f 4f       	sbci	r21, 0xFF	; 255
 90a:	22 0f       	add	r18, r18
 90c:	33 1f       	adc	r19, r19
 90e:	44 1f       	adc	r20, r20
 910:	aa 1f       	adc	r26, r26
 912:	a9 f3       	breq	.-22     	; 0x8fe <__divsf3_pse+0x10>
 914:	33 d0       	rcall	.+102    	; 0x97c <__divsf3_pse+0x8e>
 916:	0e 2e       	mov	r0, r30
 918:	3a f0       	brmi	.+14     	; 0x928 <__divsf3_pse+0x3a>
 91a:	e0 e8       	ldi	r30, 0x80	; 128
 91c:	30 d0       	rcall	.+96     	; 0x97e <__divsf3_pse+0x90>
 91e:	91 50       	subi	r25, 0x01	; 1
 920:	50 40       	sbci	r21, 0x00	; 0
 922:	e6 95       	lsr	r30
 924:	00 1c       	adc	r0, r0
 926:	ca f7       	brpl	.-14     	; 0x91a <__divsf3_pse+0x2c>
 928:	29 d0       	rcall	.+82     	; 0x97c <__divsf3_pse+0x8e>
 92a:	fe 2f       	mov	r31, r30
 92c:	27 d0       	rcall	.+78     	; 0x97c <__divsf3_pse+0x8e>
 92e:	66 0f       	add	r22, r22
 930:	77 1f       	adc	r23, r23
 932:	88 1f       	adc	r24, r24
 934:	bb 1f       	adc	r27, r27
 936:	26 17       	cp	r18, r22
 938:	37 07       	cpc	r19, r23
 93a:	48 07       	cpc	r20, r24
 93c:	ab 07       	cpc	r26, r27
 93e:	b0 e8       	ldi	r27, 0x80	; 128
 940:	09 f0       	breq	.+2      	; 0x944 <__divsf3_pse+0x56>
 942:	bb 0b       	sbc	r27, r27
 944:	80 2d       	mov	r24, r0
 946:	bf 01       	movw	r22, r30
 948:	ff 27       	eor	r31, r31
 94a:	93 58       	subi	r25, 0x83	; 131
 94c:	5f 4f       	sbci	r21, 0xFF	; 255
 94e:	2a f0       	brmi	.+10     	; 0x95a <__divsf3_pse+0x6c>
 950:	9e 3f       	cpi	r25, 0xFE	; 254
 952:	51 05       	cpc	r21, r1
 954:	68 f0       	brcs	.+26     	; 0x970 <__divsf3_pse+0x82>
 956:	11 ce       	rjmp	.-990    	; 0x57a <__fp_inf>
 958:	8d cd       	rjmp	.-1254   	; 0x474 <__fp_szero>
 95a:	5f 3f       	cpi	r21, 0xFF	; 255
 95c:	ec f3       	brlt	.-6      	; 0x958 <__divsf3_pse+0x6a>
 95e:	98 3e       	cpi	r25, 0xE8	; 232
 960:	dc f3       	brlt	.-10     	; 0x958 <__divsf3_pse+0x6a>
 962:	86 95       	lsr	r24
 964:	77 95       	ror	r23
 966:	67 95       	ror	r22
 968:	b7 95       	ror	r27
 96a:	f7 95       	ror	r31
 96c:	9f 5f       	subi	r25, 0xFF	; 255
 96e:	c9 f7       	brne	.-14     	; 0x962 <__divsf3_pse+0x74>
 970:	88 0f       	add	r24, r24
 972:	91 1d       	adc	r25, r1
 974:	96 95       	lsr	r25
 976:	87 95       	ror	r24
 978:	97 f9       	bld	r25, 7
 97a:	08 95       	ret
 97c:	e1 e0       	ldi	r30, 0x01	; 1
 97e:	66 0f       	add	r22, r22
 980:	77 1f       	adc	r23, r23
 982:	88 1f       	adc	r24, r24
 984:	bb 1f       	adc	r27, r27
 986:	62 17       	cp	r22, r18
 988:	73 07       	cpc	r23, r19
 98a:	84 07       	cpc	r24, r20
 98c:	ba 07       	cpc	r27, r26
 98e:	20 f0       	brcs	.+8      	; 0x998 <__divsf3_pse+0xaa>
 990:	62 1b       	sub	r22, r18
 992:	73 0b       	sbc	r23, r19
 994:	84 0b       	sbc	r24, r20
 996:	ba 0b       	sbc	r27, r26
 998:	ee 1f       	adc	r30, r30
 99a:	88 f7       	brcc	.-30     	; 0x97e <__divsf3_pse+0x90>
 99c:	e0 95       	com	r30
 99e:	08 95       	ret

000009a0 <__fp_mpack>:
 9a0:	9f 3f       	cpi	r25, 0xFF	; 255
 9a2:	31 f0       	breq	.+12     	; 0x9b0 <__fp_mpack_finite+0xc>

000009a4 <__fp_mpack_finite>:
 9a4:	91 50       	subi	r25, 0x01	; 1
 9a6:	20 f4       	brcc	.+8      	; 0x9b0 <__fp_mpack_finite+0xc>
 9a8:	87 95       	ror	r24
 9aa:	77 95       	ror	r23
 9ac:	67 95       	ror	r22
 9ae:	b7 95       	ror	r27
 9b0:	88 0f       	add	r24, r24
 9b2:	91 1d       	adc	r25, r1
 9b4:	96 95       	lsr	r25
 9b6:	87 95       	ror	r24
 9b8:	97 f9       	bld	r25, 7
 9ba:	08 95       	ret

000009bc <__fp_pscA>:
 9bc:	00 24       	eor	r0, r0
 9be:	0a 94       	dec	r0
 9c0:	16 16       	cp	r1, r22
 9c2:	17 06       	cpc	r1, r23
 9c4:	18 06       	cpc	r1, r24
 9c6:	09 06       	cpc	r0, r25
 9c8:	08 95       	ret

000009ca <__fp_pscB>:
 9ca:	00 24       	eor	r0, r0
 9cc:	0a 94       	dec	r0
 9ce:	12 16       	cp	r1, r18
 9d0:	13 06       	cpc	r1, r19
 9d2:	14 06       	cpc	r1, r20
 9d4:	05 06       	cpc	r0, r21
 9d6:	08 95       	ret

000009d8 <__fp_round>:
 9d8:	09 2e       	mov	r0, r25
 9da:	03 94       	inc	r0
 9dc:	00 0c       	add	r0, r0
 9de:	11 f4       	brne	.+4      	; 0x9e4 <__fp_round+0xc>
 9e0:	88 23       	and	r24, r24
 9e2:	52 f0       	brmi	.+20     	; 0x9f8 <__fp_round+0x20>
 9e4:	bb 0f       	add	r27, r27
 9e6:	40 f4       	brcc	.+16     	; 0x9f8 <__fp_round+0x20>
 9e8:	bf 2b       	or	r27, r31
 9ea:	11 f4       	brne	.+4      	; 0x9f0 <__fp_round+0x18>
 9ec:	60 ff       	sbrs	r22, 0
 9ee:	04 c0       	rjmp	.+8      	; 0x9f8 <__fp_round+0x20>
 9f0:	6f 5f       	subi	r22, 0xFF	; 255
 9f2:	7f 4f       	sbci	r23, 0xFF	; 255
 9f4:	8f 4f       	sbci	r24, 0xFF	; 255
 9f6:	9f 4f       	sbci	r25, 0xFF	; 255
 9f8:	08 95       	ret

000009fa <__udivmodhi4>:
 9fa:	aa 1b       	sub	r26, r26
 9fc:	bb 1b       	sub	r27, r27
 9fe:	51 e1       	ldi	r21, 0x11	; 17
 a00:	07 c0       	rjmp	.+14     	; 0xa10 <__udivmodhi4_ep>

00000a02 <__udivmodhi4_loop>:
 a02:	aa 1f       	adc	r26, r26
 a04:	bb 1f       	adc	r27, r27
 a06:	a6 17       	cp	r26, r22
 a08:	b7 07       	cpc	r27, r23
 a0a:	10 f0       	brcs	.+4      	; 0xa10 <__udivmodhi4_ep>
 a0c:	a6 1b       	sub	r26, r22
 a0e:	b7 0b       	sbc	r27, r23

00000a10 <__udivmodhi4_ep>:
 a10:	88 1f       	adc	r24, r24
 a12:	99 1f       	adc	r25, r25
 a14:	5a 95       	dec	r21
 a16:	a9 f7       	brne	.-22     	; 0xa02 <__udivmodhi4_loop>
 a18:	80 95       	com	r24
 a1a:	90 95       	com	r25
 a1c:	bc 01       	movw	r22, r24
 a1e:	cd 01       	movw	r24, r26
 a20:	08 95       	ret

00000a22 <__divmodhi4>:
 a22:	97 fb       	bst	r25, 7
 a24:	09 2e       	mov	r0, r25
 a26:	07 26       	eor	r0, r23
 a28:	0a d0       	rcall	.+20     	; 0xa3e <__divmodhi4_neg1>
 a2a:	77 fd       	sbrc	r23, 7
 a2c:	04 d0       	rcall	.+8      	; 0xa36 <__divmodhi4_neg2>
 a2e:	e5 df       	rcall	.-54     	; 0x9fa <__udivmodhi4>
 a30:	06 d0       	rcall	.+12     	; 0xa3e <__divmodhi4_neg1>
 a32:	00 20       	and	r0, r0
 a34:	1a f4       	brpl	.+6      	; 0xa3c <__divmodhi4_exit>

00000a36 <__divmodhi4_neg2>:
 a36:	70 95       	com	r23
 a38:	61 95       	neg	r22
 a3a:	7f 4f       	sbci	r23, 0xFF	; 255

00000a3c <__divmodhi4_exit>:
 a3c:	08 95       	ret

00000a3e <__divmodhi4_neg1>:
 a3e:	f6 f7       	brtc	.-4      	; 0xa3c <__divmodhi4_exit>
 a40:	90 95       	com	r25
 a42:	81 95       	neg	r24
 a44:	9f 4f       	sbci	r25, 0xFF	; 255
 a46:	08 95       	ret

00000a48 <_exit>:
 a48:	f8 94       	cli

00000a4a <__stop_program>:
 a4a:	ff cf       	rjmp	.-2      	; 0xa4a <__stop_program>
