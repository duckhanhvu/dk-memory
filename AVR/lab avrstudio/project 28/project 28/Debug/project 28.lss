
project 28.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b76  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000044  00800060  00800060  00000bea  2**0
                  ALLOC
  2 .stab         000033e4  00000000  00000000  00000bec  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000abd  00000000  00000000  00003fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000040  00000000  00000000  00004a8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000129  00000000  00000000  00004acd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000755  00000000  00000000  00004bf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000281  00000000  00000000  0000534b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000791  00000000  00000000  000055cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  00005d60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001f2  00000000  00000000  00005e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004c4  00000000  00000000  00006072  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000063  00000000  00000000  00006536  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__mulsf3_pse+0x4a>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d4 e0       	ldi	r29, 0x04	; 4
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_clear_bss>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
  ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
  ec:	a4 3a       	cpi	r26, 0xA4	; 164
  ee:	b1 07       	cpc	r27, r17
  f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
  f2:	0e 94 2e 01 	call	0x25c	; 0x25c <main>
  f6:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <_exit>

000000fa <__bad_interrupt>:
  fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <write>:
#define en    3
volatile unsigned int b[14]={0}; 
volatile unsigned int n[10]={0};
volatile unsigned int a[10]={0};		
void write(unsigned int i){
	CTRL_DDR=0xFF;
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	2a bb       	out	0x1a, r18	; 26
	if(i==1){// chuan chuan
 102:	81 30       	cpi	r24, 0x01	; 1
 104:	91 05       	cpc	r25, r1
 106:	81 f4       	brne	.+32     	; 0x128 <write+0x2a>
	      setbit(CTRL_PORT, data);    // Load 1 on DATA  
 108:	d9 9a       	sbi	0x1b, 1	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10a:	86 e0       	ldi	r24, 0x06	; 6
 10c:	8a 95       	dec	r24
 10e:	f1 f7       	brne	.-4      	; 0x10c <write+0xe>
 110:	00 c0       	rjmp	.+0      	; 0x112 <write+0x14>
	      _delay_us(20);
          clearbit(CTRL_PORT,clk);    
 112:	da 98       	cbi	0x1b, 2	; 27
 114:	93 e0       	ldi	r25, 0x03	; 3
 116:	9a 95       	dec	r25
 118:	f1 f7       	brne	.-4      	; 0x116 <write+0x18>
 11a:	00 00       	nop
          _delay_us(10);
          setbit(CTRL_PORT,clk);   
 11c:	da 9a       	sbi	0x1b, 2	; 27
 11e:	83 e0       	ldi	r24, 0x03	; 3
 120:	8a 95       	dec	r24
 122:	f1 f7       	brne	.-4      	; 0x120 <write+0x22>
 124:	00 00       	nop
 126:	08 95       	ret
		  _delay_us(10);
	}
	if(i==0){
 128:	00 97       	sbiw	r24, 0x00	; 0
 12a:	69 f4       	brne	.+26     	; 0x146 <write+0x48>
	      clearbit(CTRL_PORT,clk);	
 12c:	da 98       	cbi	0x1b, 2	; 27
 12e:	91 e2       	ldi	r25, 0x21	; 33
 130:	9a 95       	dec	r25
 132:	f1 f7       	brne	.-4      	; 0x130 <write+0x32>
 134:	00 00       	nop
	      _delay_us(100);
          setbit(CTRL_PORT,clk);    // Bring pin CLOCK high
 136:	da 9a       	sbi	0x1b, 2	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 138:	87 ea       	ldi	r24, 0xA7	; 167
 13a:	91 e6       	ldi	r25, 0x61	; 97
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <write+0x3e>
 140:	00 c0       	rjmp	.+0      	; 0x142 <write+0x44>
 142:	00 00       	nop
          _delay_ms(100);
          clearbit(CTRL_PORT,clk);    // Then back low		 
 144:	da 98       	cbi	0x1b, 2	; 27
 146:	08 95       	ret

00000148 <write_reference>:
	}	 
	}    
void write_reference(unsigned int number){
 148:	0f 93       	push	r16
 14a:	1f 93       	push	r17
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
	   unsigned int i=0;
	   while(number!=0){
 150:	00 97       	sbiw	r24, 0x00	; 0
 152:	a1 f0       	breq	.+40     	; 0x17c <write_reference+0x34>
          _delay_ms(100);
          clearbit(CTRL_PORT,clk);    // Then back low		 
	}	 
	}    
void write_reference(unsigned int number){
	   unsigned int i=0;
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
	   while(number!=0){
		b[i]=number%2;	
 158:	60 e6       	ldi	r22, 0x60	; 96
 15a:	70 e0       	ldi	r23, 0x00	; 0
 15c:	ac 01       	movw	r20, r24
 15e:	41 70       	andi	r20, 0x01	; 1
 160:	50 70       	andi	r21, 0x00	; 0
 162:	f9 01       	movw	r30, r18
 164:	ee 0f       	add	r30, r30
 166:	ff 1f       	adc	r31, r31
 168:	e6 0f       	add	r30, r22
 16a:	f7 1f       	adc	r31, r23
 16c:	51 83       	std	Z+1, r21	; 0x01
 16e:	40 83       	st	Z, r20
		number=number/2;
 170:	96 95       	lsr	r25
 172:	87 95       	ror	r24
		i++;
 174:	2f 5f       	subi	r18, 0xFF	; 255
 176:	3f 4f       	sbci	r19, 0xFF	; 255
          clearbit(CTRL_PORT,clk);    // Then back low		 
	}	 
	}    
void write_reference(unsigned int number){
	   unsigned int i=0;
	   while(number!=0){
 178:	00 97       	sbiw	r24, 0x00	; 0
 17a:	81 f7       	brne	.-32     	; 0x15c <write_reference+0x14>
          _delay_ms(100);
          clearbit(CTRL_PORT,clk);    // Then back low		 
	}	 
	}    
void write_reference(unsigned int number){
	   unsigned int i=0;
 17c:	c0 e0       	ldi	r28, 0x00	; 0
 17e:	d0 e0       	ldi	r29, 0x00	; 0
		b[i]=number%2;	
		number=number/2;
		i++;
	  }        
	  for(i=0;i<14;i++){
		write(b[i]) ;
 180:	00 e6       	ldi	r16, 0x60	; 96
 182:	10 e0       	ldi	r17, 0x00	; 0
 184:	fe 01       	movw	r30, r28
 186:	ee 0f       	add	r30, r30
 188:	ff 1f       	adc	r31, r31
 18a:	e0 0f       	add	r30, r16
 18c:	f1 1f       	adc	r31, r17
 18e:	80 81       	ld	r24, Z
 190:	91 81       	ldd	r25, Z+1	; 0x01
 192:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
	   while(number!=0){
		b[i]=number%2;	
		number=number/2;
		i++;
	  }        
	  for(i=0;i<14;i++){
 196:	21 96       	adiw	r28, 0x01	; 1
 198:	ce 30       	cpi	r28, 0x0E	; 14
 19a:	d1 05       	cpc	r29, r1
 19c:	99 f7       	brne	.-26     	; 0x184 <write_reference+0x3c>
		write(b[i]) ;
	  }
	  write(1);
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
	}
 1a6:	df 91       	pop	r29
 1a8:	cf 91       	pop	r28
 1aa:	1f 91       	pop	r17
 1ac:	0f 91       	pop	r16
 1ae:	08 95       	ret

000001b0 <write_N_and_A_divide>:
void write_N_and_A_divide(unsigned int Nnumber, unsigned int Anumber){
 1b0:	0f 93       	push	r16
 1b2:	1f 93       	push	r17
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
	   unsigned int i=0;
	   unsigned int j=0;
	   while(Nnumber!=0){
 1b8:	00 97       	sbiw	r24, 0x00	; 0
 1ba:	a1 f0       	breq	.+40     	; 0x1e4 <write_N_and_A_divide+0x34>
		write(b[i]) ;
	  }
	  write(1);
	}
void write_N_and_A_divide(unsigned int Nnumber, unsigned int Anumber){
	   unsigned int i=0;
 1bc:	20 e0       	ldi	r18, 0x00	; 0
 1be:	30 e0       	ldi	r19, 0x00	; 0
	   unsigned int j=0;
	   while(Nnumber!=0){
		n[i]=Nnumber%2;	
 1c0:	ac e7       	ldi	r26, 0x7C	; 124
 1c2:	b0 e0       	ldi	r27, 0x00	; 0
 1c4:	ac 01       	movw	r20, r24
 1c6:	41 70       	andi	r20, 0x01	; 1
 1c8:	50 70       	andi	r21, 0x00	; 0
 1ca:	f9 01       	movw	r30, r18
 1cc:	ee 0f       	add	r30, r30
 1ce:	ff 1f       	adc	r31, r31
 1d0:	ea 0f       	add	r30, r26
 1d2:	fb 1f       	adc	r31, r27
 1d4:	51 83       	std	Z+1, r21	; 0x01
 1d6:	40 83       	st	Z, r20
		Nnumber=Nnumber/2;
 1d8:	96 95       	lsr	r25
 1da:	87 95       	ror	r24
		i++;
 1dc:	2f 5f       	subi	r18, 0xFF	; 255
 1de:	3f 4f       	sbci	r19, 0xFF	; 255
	  write(1);
	}
void write_N_and_A_divide(unsigned int Nnumber, unsigned int Anumber){
	   unsigned int i=0;
	   unsigned int j=0;
	   while(Nnumber!=0){
 1e0:	00 97       	sbiw	r24, 0x00	; 0
 1e2:	81 f7       	brne	.-32     	; 0x1c4 <write_N_and_A_divide+0x14>
		n[i]=Nnumber%2;	
		Nnumber=Nnumber/2;
		i++;
	  }
	   while(Anumber!=0){
 1e4:	61 15       	cp	r22, r1
 1e6:	71 05       	cpc	r23, r1
 1e8:	a1 f0       	breq	.+40     	; 0x212 <write_N_and_A_divide+0x62>
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	90 e0       	ldi	r25, 0x00	; 0
		a[j]=Anumber%2;	
 1ee:	40 e9       	ldi	r20, 0x90	; 144
 1f0:	50 e0       	ldi	r21, 0x00	; 0
 1f2:	9b 01       	movw	r18, r22
 1f4:	21 70       	andi	r18, 0x01	; 1
 1f6:	30 70       	andi	r19, 0x00	; 0
 1f8:	fc 01       	movw	r30, r24
 1fa:	ee 0f       	add	r30, r30
 1fc:	ff 1f       	adc	r31, r31
 1fe:	e4 0f       	add	r30, r20
 200:	f5 1f       	adc	r31, r21
 202:	31 83       	std	Z+1, r19	; 0x01
 204:	20 83       	st	Z, r18
		Anumber=Anumber/2;
 206:	76 95       	lsr	r23
 208:	67 95       	ror	r22
		j++;
 20a:	01 96       	adiw	r24, 0x01	; 1
	   while(Nnumber!=0){
		n[i]=Nnumber%2;	
		Nnumber=Nnumber/2;
		i++;
	  }
	   while(Anumber!=0){
 20c:	61 15       	cp	r22, r1
 20e:	71 05       	cpc	r23, r1
 210:	81 f7       	brne	.-32     	; 0x1f2 <write_N_and_A_divide+0x42>
 212:	c0 e0       	ldi	r28, 0x00	; 0
 214:	d0 e0       	ldi	r29, 0x00	; 0
		a[j]=Anumber%2;	
		Anumber=Anumber/2;
		j++;
	  }
	  for(i=0;i<10;i++){
		write(n[i]) ;
 216:	0c e7       	ldi	r16, 0x7C	; 124
 218:	10 e0       	ldi	r17, 0x00	; 0
 21a:	fe 01       	movw	r30, r28
 21c:	ee 0f       	add	r30, r30
 21e:	ff 1f       	adc	r31, r31
 220:	e0 0f       	add	r30, r16
 222:	f1 1f       	adc	r31, r17
 224:	80 81       	ld	r24, Z
 226:	91 81       	ldd	r25, Z+1	; 0x01
 228:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
	   while(Anumber!=0){
		a[j]=Anumber%2;	
		Anumber=Anumber/2;
		j++;
	  }
	  for(i=0;i<10;i++){
 22c:	21 96       	adiw	r28, 0x01	; 1
 22e:	ca 30       	cpi	r28, 0x0A	; 10
 230:	d1 05       	cpc	r29, r1
 232:	99 f7       	brne	.-26     	; 0x21a <write_N_and_A_divide+0x6a>
		write(n[i]) ;
	  }
	  for(j=0;i<8;j++){
		 write(a[j]); 
	  }
	  write(0);
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	0e 94 7f 00 	call	0xfe	; 0xfe <write>

}
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	1f 91       	pop	r17
 242:	0f 91       	pop	r16
 244:	08 95       	ret

00000246 <enable>:
void enable(void){
	CTRL_DDR=0xFF;
 246:	8f ef       	ldi	r24, 0xFF	; 255
 248:	8a bb       	out	0x1a, r24	; 26
	setbit(CTRL_PORT,en);   // Bring ENABLE high
 24a:	db 9a       	sbi	0x1b, 3	; 27
 24c:	87 ea       	ldi	r24, 0xA7	; 167
 24e:	91 e6       	ldi	r25, 0x61	; 97
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <enable+0xa>
 254:	00 c0       	rjmp	.+0      	; 0x256 <enable+0x10>
 256:	00 00       	nop
    _delay_ms(100);
    clearbit(CTRL_PORT,en);    // Then back low
 258:	db 98       	cbi	0x1b, 3	; 27
}
 25a:	08 95       	ret

0000025c <main>:
 25c:	87 ea       	ldi	r24, 0xA7	; 167
 25e:	91 e6       	ldi	r25, 0x61	; 97
 260:	01 97       	sbiw	r24, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <main+0x4>
 264:	00 c0       	rjmp	.+0      	; 0x266 <main+0xa>
 266:	00 00       	nop

int main(){
	while(1){
	_delay_ms(100);
	write_reference(512);
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	92 e0       	ldi	r25, 0x02	; 2
 26c:	0e 94 a4 00 	call	0x148	; 0x148 <write_reference>
	enable();
 270:	0e 94 23 01 	call	0x246	; 0x246 <enable>
	
	write_N_and_A_divide(452,0);
 274:	84 ec       	ldi	r24, 0xC4	; 196
 276:	91 e0       	ldi	r25, 0x01	; 1
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <write_N_and_A_divide>
	enable();
 280:	0e 94 23 01 	call	0x246	; 0x246 <enable>
 284:	eb cf       	rjmp	.-42     	; 0x25c <main>

00000286 <read_2Nib>:


char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
 286:	90 9a       	sbi	0x12, 0	; 18
	DDR_DATA=0x0F;
 288:	8f e0       	ldi	r24, 0x0F	; 15
 28a:	81 bb       	out	0x11, r24	; 17
	HNib=DATA_input&0xF0;
 28c:	80 b3       	in	r24, 0x10	; 16
	clearbit(CTRL,EN);
 28e:	90 98       	cbi	0x12, 0	; 18
	
	setbit(CTRL,EN);
 290:	90 9a       	sbi	0x12, 0	; 18
	LNib=DATA_input&0xF0;
 292:	90 b3       	in	r25, 0x10	; 16
	clearbit(CTRL,EN);
 294:	90 98       	cbi	0x12, 0	; 18
	LNib>>=4;
 296:	92 95       	swap	r25
 298:	9f 70       	andi	r25, 0x0F	; 15
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
	DDR_DATA=0x0F;
	HNib=DATA_input&0xF0;
 29a:	80 7f       	andi	r24, 0xF0	; 240
	LNib=DATA_input&0xF0;
	clearbit(CTRL,EN);
	LNib>>=4;
	
	return (HNib|LNib);
}
 29c:	89 2b       	or	r24, r25
 29e:	08 95       	ret

000002a0 <write_2Nib>:
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
 2a0:	92 b3       	in	r25, 0x12	; 18
 2a2:	9f 70       	andi	r25, 0x0F	; 15
	HNib=data&0xF0;
 2a4:	28 2f       	mov	r18, r24
 2a6:	20 7f       	andi	r18, 0xF0	; 240
	LNib=(data<<4)&0xF0;
	
	DATA_output=HNib|temp;
 2a8:	29 2b       	or	r18, r25
 2aa:	22 bb       	out	0x12, r18	; 18
	setbit(CTRL,EN);
 2ac:	90 9a       	sbi	0x12, 0	; 18
	clearbit(CTRL,EN);
 2ae:	90 98       	cbi	0x12, 0	; 18
}
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
	HNib=data&0xF0;
	LNib=(data<<4)&0xF0;
 2b0:	82 95       	swap	r24
 2b2:	80 7f       	andi	r24, 0xF0	; 240
	
	DATA_output=HNib|temp;
	setbit(CTRL,EN);
	clearbit(CTRL,EN);
	
	DATA_output=LNib|temp;
 2b4:	98 2b       	or	r25, r24
 2b6:	92 bb       	out	0x12, r25	; 18
	setbit(CTRL,EN);
 2b8:	90 9a       	sbi	0x12, 0	; 18
	clearbit(CTRL,EN);
 2ba:	90 98       	cbi	0x12, 0	; 18
	
}
 2bc:	08 95       	ret

000002be <wait_lcd>:
void wait_lcd(void){
 2be:	0f 93       	push	r16
 2c0:	1f 93       	push	r17
 2c2:	df 93       	push	r29
 2c4:	cf 93       	push	r28
 2c6:	0f 92       	push	r0
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
	while(1){
     	clearbit(CTRL,RS);
		setbit(CTRL,RW);
		temp=read_2Nib();
		
		if(bit_is_clear(temp,7)) break;
 2cc:	8e 01       	movw	r16, r28
 2ce:	0f 5f       	subi	r16, 0xFF	; 255
 2d0:	1f 4f       	sbci	r17, 0xFF	; 255
}
void wait_lcd(void){
	unsigned char temp;
	
	while(1){
     	clearbit(CTRL,RS);
 2d2:	92 98       	cbi	0x12, 2	; 18
		setbit(CTRL,RW);
 2d4:	91 9a       	sbi	0x12, 1	; 18
		temp=read_2Nib();
 2d6:	0e 94 43 01 	call	0x286	; 0x286 <read_2Nib>
 2da:	89 83       	std	Y+1, r24	; 0x01
		
		if(bit_is_clear(temp,7)) break;
 2dc:	f8 01       	movw	r30, r16
 2de:	80 81       	ld	r24, Z
 2e0:	88 23       	and	r24, r24
 2e2:	bc f3       	brlt	.-18     	; 0x2d2 <wait_lcd+0x14>
	}
	clearbit(CTRL,RW);
 2e4:	91 98       	cbi	0x12, 1	; 18
	DDR_DATA=0xFF;
 2e6:	8f ef       	ldi	r24, 0xFF	; 255
 2e8:	81 bb       	out	0x11, r24	; 17
	
}
 2ea:	0f 90       	pop	r0
 2ec:	cf 91       	pop	r28
 2ee:	df 91       	pop	r29
 2f0:	1f 91       	pop	r17
 2f2:	0f 91       	pop	r16
 2f4:	08 95       	ret

000002f6 <init_lcd>:
//uses mode 4 bit
void init_lcd(void){
	DDR_CTRL=0xFF;
 2f6:	8f ef       	ldi	r24, 0xFF	; 255
 2f8:	81 bb       	out	0x11, r24	; 17
	DDR_DATA=0xFF;
 2fa:	81 bb       	out	0x11, r24	; 17
	clearbit(CTRL,RS);
 2fc:	92 98       	cbi	0x12, 2	; 18
	clearbit(CTRL,RW);
 2fe:	91 98       	cbi	0x12, 1	; 18
	clearbit(CTRL,EN);
 300:	90 98       	cbi	0x12, 0	; 18
	
//function set	
	setbit(CTRL,EN);
 302:	90 9a       	sbi	0x12, 0	; 18
	setbit(DATA_output,5);
 304:	95 9a       	sbi	0x12, 5	; 18
	clearbit(CTRL,EN);
 306:	90 98       	cbi	0x12, 0	; 18
	wait_lcd();
 308:	0e 94 5f 01 	call	0x2be	; 0x2be <wait_lcd>
	write_2Nib(0x28);
 30c:	88 e2       	ldi	r24, 0x28	; 40
 30e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <write_2Nib>
	wait_lcd();
 312:	0e 94 5f 01 	call	0x2be	; 0x2be <wait_lcd>
//display on/off control
    write_2Nib(0x0E);
 316:	8e e0       	ldi	r24, 0x0E	; 14
 318:	0e 94 50 01 	call	0x2a0	; 0x2a0 <write_2Nib>
	wait_lcd();
 31c:	0e 94 5f 01 	call	0x2be	; 0x2be <wait_lcd>

//entry mode set 
    
    write_2Nib(0x06);
 320:	86 e0       	ldi	r24, 0x06	; 6
 322:	0e 94 50 01 	call	0x2a0	; 0x2a0 <write_2Nib>
    wait_lcd();		
 326:	0e 94 5f 01 	call	0x2be	; 0x2be <wait_lcd>
}
 32a:	08 95       	ret

0000032c <putchar_lcd>:
void putchar_lcd(unsigned char data){
	
	setbit(CTRL,RS);
 32c:	92 9a       	sbi	0x12, 2	; 18
	write_2Nib(data);
 32e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <write_2Nib>
	wait_lcd();
 332:	0e 94 5f 01 	call	0x2be	; 0x2be <wait_lcd>
}
 336:	08 95       	ret

00000338 <cursor_home>:
void cursor_home(){
	clearbit(CTRL,RS);
 338:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x03);
 33a:	83 e0       	ldi	r24, 0x03	; 3
 33c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <write_2Nib>
	wait_lcd();
 340:	0e 94 5f 01 	call	0x2be	; 0x2be <wait_lcd>
}
 344:	08 95       	ret

00000346 <clear_lcd>:
void clear_lcd(){
	clearbit(CTRL,RS);
 346:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x01);
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <write_2Nib>
	wait_lcd();
 34e:	0e 94 5f 01 	call	0x2be	; 0x2be <wait_lcd>
}
 352:	08 95       	ret

00000354 <movecursor>:
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
	clearbit(CTRL,RS);
 354:	92 98       	cbi	0x12, 2	; 18
	write_2Nib(0x01);
	wait_lcd();
}
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
 356:	82 95       	swap	r24
 358:	88 0f       	add	r24, r24
 35a:	88 0f       	add	r24, r24
 35c:	80 7c       	andi	r24, 0xC0	; 192
 35e:	86 0f       	add	r24, r22
	clearbit(CTRL,RS);
	write_2Nib(x);
 360:	81 5c       	subi	r24, 0xC1	; 193
 362:	0e 94 50 01 	call	0x2a0	; 0x2a0 <write_2Nib>
	wait_lcd();
 366:	0e 94 5f 01 	call	0x2be	; 0x2be <wait_lcd>
}
 36a:	08 95       	ret

0000036c <count_number>:
int count_number(unsigned int number){
 36c:	bc 01       	movw	r22, r24
	int dem=0;
	while(number){
 36e:	00 97       	sbiw	r24, 0x00	; 0
 370:	71 f0       	breq	.+28     	; 0x38e <count_number+0x22>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 372:	20 e0       	ldi	r18, 0x00	; 0
 374:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
 376:	ea e0       	ldi	r30, 0x0A	; 10
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	cb 01       	movw	r24, r22
 37c:	bf 01       	movw	r22, r30
 37e:	0e 94 92 05 	call	0xb24	; 0xb24 <__udivmodhi4>
		dem++;
 382:	2f 5f       	subi	r18, 0xFF	; 255
 384:	3f 4f       	sbci	r19, 0xFF	; 255
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
	while(number){
 386:	61 15       	cp	r22, r1
 388:	71 05       	cpc	r23, r1
 38a:	b9 f7       	brne	.-18     	; 0x37a <count_number+0xe>
 38c:	02 c0       	rjmp	.+4      	; 0x392 <count_number+0x26>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 38e:	20 e0       	ldi	r18, 0x00	; 0
 390:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
		dem++;
	}
	return dem;
}
 392:	82 2f       	mov	r24, r18
 394:	93 2f       	mov	r25, r19
 396:	08 95       	ret

00000398 <printnumber_lcd>:
void printnumber_lcd(unsigned int number){
 398:	af 92       	push	r10
 39a:	bf 92       	push	r11
 39c:	cf 92       	push	r12
 39e:	df 92       	push	r13
 3a0:	ef 92       	push	r14
 3a2:	ff 92       	push	r15
 3a4:	0f 93       	push	r16
 3a6:	1f 93       	push	r17
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	e8 2e       	mov	r14, r24
 3ae:	f9 2e       	mov	r15, r25
	int a,n,i,temp;
	n= count_number(number);
 3b0:	0e 94 b6 01 	call	0x36c	; 0x36c <count_number>
 3b4:	6c 01       	movw	r12, r24
	temp=pow(10,n-1);
 3b6:	bc 01       	movw	r22, r24
 3b8:	61 50       	subi	r22, 0x01	; 1
 3ba:	70 40       	sbci	r23, 0x00	; 0
 3bc:	88 27       	eor	r24, r24
 3be:	77 fd       	sbrc	r23, 7
 3c0:	80 95       	com	r24
 3c2:	98 2f       	mov	r25, r24
 3c4:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__floatsisf>
 3c8:	9b 01       	movw	r18, r22
 3ca:	ac 01       	movw	r20, r24
 3cc:	60 e0       	ldi	r22, 0x00	; 0
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	80 e2       	ldi	r24, 0x20	; 32
 3d2:	91 e4       	ldi	r25, 0x41	; 65
 3d4:	0e 94 d5 02 	call	0x5aa	; 0x5aa <pow>
	for(i=0;i<n;i++){
 3d8:	1c 14       	cp	r1, r12
 3da:	1d 04       	cpc	r1, r13
 3dc:	04 f5       	brge	.+64     	; 0x41e <printnumber_lcd+0x86>
	return dem;
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
 3de:	0e 94 3e 02 	call	0x47c	; 0x47c <__fixsfsi>
 3e2:	eb 01       	movw	r28, r22
	for(i=0;i<n;i++){
 3e4:	00 e0       	ldi	r16, 0x00	; 0
 3e6:	10 e0       	ldi	r17, 0x00	; 0
		a=number/temp;
		number=number%temp;
		temp=temp/10;
 3e8:	0f 2e       	mov	r0, r31
 3ea:	fa e0       	ldi	r31, 0x0A	; 10
 3ec:	af 2e       	mov	r10, r31
 3ee:	bb 24       	eor	r11, r11
 3f0:	f0 2d       	mov	r31, r0
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
		a=number/temp;
 3f2:	8e 2d       	mov	r24, r14
 3f4:	9f 2d       	mov	r25, r15
 3f6:	be 01       	movw	r22, r28
 3f8:	0e 94 92 05 	call	0xb24	; 0xb24 <__udivmodhi4>
 3fc:	26 2f       	mov	r18, r22
		number=number%temp;
 3fe:	e8 2e       	mov	r14, r24
 400:	f9 2e       	mov	r15, r25
		temp=temp/10;
 402:	ce 01       	movw	r24, r28
 404:	b5 01       	movw	r22, r10
 406:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__divmodhi4>
 40a:	eb 01       	movw	r28, r22
		putchar_lcd(a+48);
 40c:	82 2f       	mov	r24, r18
 40e:	80 5d       	subi	r24, 0xD0	; 208
 410:	0e 94 96 01 	call	0x32c	; 0x32c <putchar_lcd>
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
 414:	0f 5f       	subi	r16, 0xFF	; 255
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	0c 15       	cp	r16, r12
 41a:	1d 05       	cpc	r17, r13
 41c:	54 f3       	brlt	.-44     	; 0x3f2 <printnumber_lcd+0x5a>
		a=number/temp;
		number=number%temp;
		temp=temp/10;
		putchar_lcd(a+48);
	}
}
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	1f 91       	pop	r17
 424:	0f 91       	pop	r16
 426:	ff 90       	pop	r15
 428:	ef 90       	pop	r14
 42a:	df 90       	pop	r13
 42c:	cf 90       	pop	r12
 42e:	bf 90       	pop	r11
 430:	af 90       	pop	r10
 432:	08 95       	ret

00000434 <putstr_lcd>:
putstr_lcd(unsigned char *str, unsigned int lenght){
 434:	ef 92       	push	r14
 436:	ff 92       	push	r15
 438:	0f 93       	push	r16
 43a:	1f 93       	push	r17
 43c:	cf 93       	push	r28
 43e:	df 93       	push	r29
 440:	7b 01       	movw	r14, r22
	unsigned int i;
	for(i=0;i<lenght;i++){
 442:	61 15       	cp	r22, r1
 444:	71 05       	cpc	r23, r1
 446:	99 f0       	breq	.+38     	; 0x46e <__stack+0xf>
 448:	08 2f       	mov	r16, r24
 44a:	19 2f       	mov	r17, r25
 44c:	c0 e0       	ldi	r28, 0x00	; 0
 44e:	d0 e0       	ldi	r29, 0x00	; 0
		if(*(str+i)>0){ 
 450:	f8 01       	movw	r30, r16
 452:	81 91       	ld	r24, Z+
 454:	8f 01       	movw	r16, r30
 456:	88 23       	and	r24, r24
 458:	19 f0       	breq	.+6      	; 0x460 <__stack+0x1>
			putchar_lcd(*(str+i));
 45a:	0e 94 96 01 	call	0x32c	; 0x32c <putchar_lcd>
 45e:	03 c0       	rjmp	.+6      	; 0x466 <__stack+0x7>
			}
		else putchar_lcd(0);	
 460:	80 e0       	ldi	r24, 0x00	; 0
 462:	0e 94 96 01 	call	0x32c	; 0x32c <putchar_lcd>
		putchar_lcd(a+48);
	}
}
putstr_lcd(unsigned char *str, unsigned int lenght){
	unsigned int i;
	for(i=0;i<lenght;i++){
 466:	21 96       	adiw	r28, 0x01	; 1
 468:	ce 15       	cp	r28, r14
 46a:	df 05       	cpc	r29, r15
 46c:	88 f3       	brcs	.-30     	; 0x450 <putstr_lcd+0x1c>
		if(*(str+i)>0){ 
			putchar_lcd(*(str+i));
			}
		else putchar_lcd(0);	
}
}
 46e:	df 91       	pop	r29
 470:	cf 91       	pop	r28
 472:	1f 91       	pop	r17
 474:	0f 91       	pop	r16
 476:	ff 90       	pop	r15
 478:	ef 90       	pop	r14
 47a:	08 95       	ret

0000047c <__fixsfsi>:
 47c:	04 d0       	rcall	.+8      	; 0x486 <__fixunssfsi>
 47e:	68 94       	set
 480:	b1 11       	cpse	r27, r1
 482:	8d c0       	rjmp	.+282    	; 0x59e <__fp_szero>
 484:	08 95       	ret

00000486 <__fixunssfsi>:
 486:	70 d0       	rcall	.+224    	; 0x568 <__fp_splitA>
 488:	88 f0       	brcs	.+34     	; 0x4ac <__fixunssfsi+0x26>
 48a:	9f 57       	subi	r25, 0x7F	; 127
 48c:	90 f0       	brcs	.+36     	; 0x4b2 <__fixunssfsi+0x2c>
 48e:	b9 2f       	mov	r27, r25
 490:	99 27       	eor	r25, r25
 492:	b7 51       	subi	r27, 0x17	; 23
 494:	a0 f0       	brcs	.+40     	; 0x4be <__fixunssfsi+0x38>
 496:	d1 f0       	breq	.+52     	; 0x4cc <__fixunssfsi+0x46>
 498:	66 0f       	add	r22, r22
 49a:	77 1f       	adc	r23, r23
 49c:	88 1f       	adc	r24, r24
 49e:	99 1f       	adc	r25, r25
 4a0:	1a f0       	brmi	.+6      	; 0x4a8 <__fixunssfsi+0x22>
 4a2:	ba 95       	dec	r27
 4a4:	c9 f7       	brne	.-14     	; 0x498 <__fixunssfsi+0x12>
 4a6:	12 c0       	rjmp	.+36     	; 0x4cc <__fixunssfsi+0x46>
 4a8:	b1 30       	cpi	r27, 0x01	; 1
 4aa:	81 f0       	breq	.+32     	; 0x4cc <__fixunssfsi+0x46>
 4ac:	77 d0       	rcall	.+238    	; 0x59c <__fp_zero>
 4ae:	b1 e0       	ldi	r27, 0x01	; 1
 4b0:	08 95       	ret
 4b2:	74 c0       	rjmp	.+232    	; 0x59c <__fp_zero>
 4b4:	67 2f       	mov	r22, r23
 4b6:	78 2f       	mov	r23, r24
 4b8:	88 27       	eor	r24, r24
 4ba:	b8 5f       	subi	r27, 0xF8	; 248
 4bc:	39 f0       	breq	.+14     	; 0x4cc <__fixunssfsi+0x46>
 4be:	b9 3f       	cpi	r27, 0xF9	; 249
 4c0:	cc f3       	brlt	.-14     	; 0x4b4 <__fixunssfsi+0x2e>
 4c2:	86 95       	lsr	r24
 4c4:	77 95       	ror	r23
 4c6:	67 95       	ror	r22
 4c8:	b3 95       	inc	r27
 4ca:	d9 f7       	brne	.-10     	; 0x4c2 <__fixunssfsi+0x3c>
 4cc:	3e f4       	brtc	.+14     	; 0x4dc <__fixunssfsi+0x56>
 4ce:	90 95       	com	r25
 4d0:	80 95       	com	r24
 4d2:	70 95       	com	r23
 4d4:	61 95       	neg	r22
 4d6:	7f 4f       	sbci	r23, 0xFF	; 255
 4d8:	8f 4f       	sbci	r24, 0xFF	; 255
 4da:	9f 4f       	sbci	r25, 0xFF	; 255
 4dc:	08 95       	ret

000004de <__floatunsisf>:
 4de:	e8 94       	clt
 4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <__floatsisf+0x12>

000004e2 <__floatsisf>:
 4e2:	97 fb       	bst	r25, 7
 4e4:	3e f4       	brtc	.+14     	; 0x4f4 <__floatsisf+0x12>
 4e6:	90 95       	com	r25
 4e8:	80 95       	com	r24
 4ea:	70 95       	com	r23
 4ec:	61 95       	neg	r22
 4ee:	7f 4f       	sbci	r23, 0xFF	; 255
 4f0:	8f 4f       	sbci	r24, 0xFF	; 255
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	99 23       	and	r25, r25
 4f6:	a9 f0       	breq	.+42     	; 0x522 <__floatsisf+0x40>
 4f8:	f9 2f       	mov	r31, r25
 4fa:	96 e9       	ldi	r25, 0x96	; 150
 4fc:	bb 27       	eor	r27, r27
 4fe:	93 95       	inc	r25
 500:	f6 95       	lsr	r31
 502:	87 95       	ror	r24
 504:	77 95       	ror	r23
 506:	67 95       	ror	r22
 508:	b7 95       	ror	r27
 50a:	f1 11       	cpse	r31, r1
 50c:	f8 cf       	rjmp	.-16     	; 0x4fe <__floatsisf+0x1c>
 50e:	fa f4       	brpl	.+62     	; 0x54e <__floatsisf+0x6c>
 510:	bb 0f       	add	r27, r27
 512:	11 f4       	brne	.+4      	; 0x518 <__floatsisf+0x36>
 514:	60 ff       	sbrs	r22, 0
 516:	1b c0       	rjmp	.+54     	; 0x54e <__floatsisf+0x6c>
 518:	6f 5f       	subi	r22, 0xFF	; 255
 51a:	7f 4f       	sbci	r23, 0xFF	; 255
 51c:	8f 4f       	sbci	r24, 0xFF	; 255
 51e:	9f 4f       	sbci	r25, 0xFF	; 255
 520:	16 c0       	rjmp	.+44     	; 0x54e <__floatsisf+0x6c>
 522:	88 23       	and	r24, r24
 524:	11 f0       	breq	.+4      	; 0x52a <__floatsisf+0x48>
 526:	96 e9       	ldi	r25, 0x96	; 150
 528:	11 c0       	rjmp	.+34     	; 0x54c <__floatsisf+0x6a>
 52a:	77 23       	and	r23, r23
 52c:	21 f0       	breq	.+8      	; 0x536 <__floatsisf+0x54>
 52e:	9e e8       	ldi	r25, 0x8E	; 142
 530:	87 2f       	mov	r24, r23
 532:	76 2f       	mov	r23, r22
 534:	05 c0       	rjmp	.+10     	; 0x540 <__floatsisf+0x5e>
 536:	66 23       	and	r22, r22
 538:	71 f0       	breq	.+28     	; 0x556 <__floatsisf+0x74>
 53a:	96 e8       	ldi	r25, 0x86	; 134
 53c:	86 2f       	mov	r24, r22
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	60 e0       	ldi	r22, 0x00	; 0
 542:	2a f0       	brmi	.+10     	; 0x54e <__floatsisf+0x6c>
 544:	9a 95       	dec	r25
 546:	66 0f       	add	r22, r22
 548:	77 1f       	adc	r23, r23
 54a:	88 1f       	adc	r24, r24
 54c:	da f7       	brpl	.-10     	; 0x544 <__floatsisf+0x62>
 54e:	88 0f       	add	r24, r24
 550:	96 95       	lsr	r25
 552:	87 95       	ror	r24
 554:	97 f9       	bld	r25, 7
 556:	08 95       	ret

00000558 <__fp_split3>:
 558:	57 fd       	sbrc	r21, 7
 55a:	90 58       	subi	r25, 0x80	; 128
 55c:	44 0f       	add	r20, r20
 55e:	55 1f       	adc	r21, r21
 560:	59 f0       	breq	.+22     	; 0x578 <__fp_splitA+0x10>
 562:	5f 3f       	cpi	r21, 0xFF	; 255
 564:	71 f0       	breq	.+28     	; 0x582 <__fp_splitA+0x1a>
 566:	47 95       	ror	r20

00000568 <__fp_splitA>:
 568:	88 0f       	add	r24, r24
 56a:	97 fb       	bst	r25, 7
 56c:	99 1f       	adc	r25, r25
 56e:	61 f0       	breq	.+24     	; 0x588 <__fp_splitA+0x20>
 570:	9f 3f       	cpi	r25, 0xFF	; 255
 572:	79 f0       	breq	.+30     	; 0x592 <__fp_splitA+0x2a>
 574:	87 95       	ror	r24
 576:	08 95       	ret
 578:	12 16       	cp	r1, r18
 57a:	13 06       	cpc	r1, r19
 57c:	14 06       	cpc	r1, r20
 57e:	55 1f       	adc	r21, r21
 580:	f2 cf       	rjmp	.-28     	; 0x566 <__fp_split3+0xe>
 582:	46 95       	lsr	r20
 584:	f1 df       	rcall	.-30     	; 0x568 <__fp_splitA>
 586:	08 c0       	rjmp	.+16     	; 0x598 <__fp_splitA+0x30>
 588:	16 16       	cp	r1, r22
 58a:	17 06       	cpc	r1, r23
 58c:	18 06       	cpc	r1, r24
 58e:	99 1f       	adc	r25, r25
 590:	f1 cf       	rjmp	.-30     	; 0x574 <__fp_splitA+0xc>
 592:	86 95       	lsr	r24
 594:	71 05       	cpc	r23, r1
 596:	61 05       	cpc	r22, r1
 598:	08 94       	sec
 59a:	08 95       	ret

0000059c <__fp_zero>:
 59c:	e8 94       	clt

0000059e <__fp_szero>:
 59e:	bb 27       	eor	r27, r27
 5a0:	66 27       	eor	r22, r22
 5a2:	77 27       	eor	r23, r23
 5a4:	cb 01       	movw	r24, r22
 5a6:	97 f9       	bld	r25, 7
 5a8:	08 95       	ret

000005aa <pow>:
 5aa:	fa 01       	movw	r30, r20
 5ac:	ee 0f       	add	r30, r30
 5ae:	ff 1f       	adc	r31, r31
 5b0:	30 96       	adiw	r30, 0x00	; 0
 5b2:	21 05       	cpc	r18, r1
 5b4:	31 05       	cpc	r19, r1
 5b6:	99 f1       	breq	.+102    	; 0x61e <pow+0x74>
 5b8:	61 15       	cp	r22, r1
 5ba:	71 05       	cpc	r23, r1
 5bc:	61 f4       	brne	.+24     	; 0x5d6 <pow+0x2c>
 5be:	80 38       	cpi	r24, 0x80	; 128
 5c0:	bf e3       	ldi	r27, 0x3F	; 63
 5c2:	9b 07       	cpc	r25, r27
 5c4:	49 f1       	breq	.+82     	; 0x618 <pow+0x6e>
 5c6:	68 94       	set
 5c8:	90 38       	cpi	r25, 0x80	; 128
 5ca:	81 05       	cpc	r24, r1
 5cc:	61 f0       	breq	.+24     	; 0x5e6 <pow+0x3c>
 5ce:	80 38       	cpi	r24, 0x80	; 128
 5d0:	bf ef       	ldi	r27, 0xFF	; 255
 5d2:	9b 07       	cpc	r25, r27
 5d4:	41 f0       	breq	.+16     	; 0x5e6 <pow+0x3c>
 5d6:	99 23       	and	r25, r25
 5d8:	42 f5       	brpl	.+80     	; 0x62a <pow+0x80>
 5da:	ff 3f       	cpi	r31, 0xFF	; 255
 5dc:	e1 05       	cpc	r30, r1
 5de:	31 05       	cpc	r19, r1
 5e0:	21 05       	cpc	r18, r1
 5e2:	11 f1       	breq	.+68     	; 0x628 <pow+0x7e>
 5e4:	e8 94       	clt
 5e6:	08 94       	sec
 5e8:	e7 95       	ror	r30
 5ea:	d9 01       	movw	r26, r18
 5ec:	aa 23       	and	r26, r26
 5ee:	29 f4       	brne	.+10     	; 0x5fa <pow+0x50>
 5f0:	ab 2f       	mov	r26, r27
 5f2:	be 2f       	mov	r27, r30
 5f4:	f8 5f       	subi	r31, 0xF8	; 248
 5f6:	d0 f3       	brcs	.-12     	; 0x5ec <pow+0x42>
 5f8:	10 c0       	rjmp	.+32     	; 0x61a <pow+0x70>
 5fa:	ff 5f       	subi	r31, 0xFF	; 255
 5fc:	70 f4       	brcc	.+28     	; 0x61a <pow+0x70>
 5fe:	a6 95       	lsr	r26
 600:	e0 f7       	brcc	.-8      	; 0x5fa <pow+0x50>
 602:	f7 39       	cpi	r31, 0x97	; 151
 604:	50 f0       	brcs	.+20     	; 0x61a <pow+0x70>
 606:	19 f0       	breq	.+6      	; 0x60e <pow+0x64>
 608:	ff 3a       	cpi	r31, 0xAF	; 175
 60a:	38 f4       	brcc	.+14     	; 0x61a <pow+0x70>
 60c:	9f 77       	andi	r25, 0x7F	; 127
 60e:	9f 93       	push	r25
 610:	0c d0       	rcall	.+24     	; 0x62a <pow+0x80>
 612:	0f 90       	pop	r0
 614:	07 fc       	sbrc	r0, 7
 616:	90 58       	subi	r25, 0x80	; 128
 618:	08 95       	ret
 61a:	3e f0       	brts	.+14     	; 0x62a <pow+0x80>
 61c:	49 c0       	rjmp	.+146    	; 0x6b0 <__fp_nan>
 61e:	60 e0       	ldi	r22, 0x00	; 0
 620:	70 e0       	ldi	r23, 0x00	; 0
 622:	80 e8       	ldi	r24, 0x80	; 128
 624:	9f e3       	ldi	r25, 0x3F	; 63
 626:	08 95       	ret
 628:	4f e7       	ldi	r20, 0x7F	; 127
 62a:	9f 77       	andi	r25, 0x7F	; 127
 62c:	5f 93       	push	r21
 62e:	4f 93       	push	r20
 630:	3f 93       	push	r19
 632:	2f 93       	push	r18
 634:	a7 d0       	rcall	.+334    	; 0x784 <log>
 636:	2f 91       	pop	r18
 638:	3f 91       	pop	r19
 63a:	4f 91       	pop	r20
 63c:	5f 91       	pop	r21
 63e:	15 d1       	rcall	.+554    	; 0x86a <__mulsf3>
 640:	05 c0       	rjmp	.+10     	; 0x64c <exp>
 642:	19 f4       	brne	.+6      	; 0x64a <pow+0xa0>
 644:	0e f0       	brts	.+2      	; 0x648 <pow+0x9e>
 646:	2e c0       	rjmp	.+92     	; 0x6a4 <__fp_inf>
 648:	a9 cf       	rjmp	.-174    	; 0x59c <__fp_zero>
 64a:	32 c0       	rjmp	.+100    	; 0x6b0 <__fp_nan>

0000064c <exp>:
 64c:	8d df       	rcall	.-230    	; 0x568 <__fp_splitA>
 64e:	c8 f3       	brcs	.-14     	; 0x642 <pow+0x98>
 650:	96 38       	cpi	r25, 0x86	; 134
 652:	c0 f7       	brcc	.-16     	; 0x644 <pow+0x9a>
 654:	07 f8       	bld	r0, 7
 656:	0f 92       	push	r0
 658:	e8 94       	clt
 65a:	2b e3       	ldi	r18, 0x3B	; 59
 65c:	3a ea       	ldi	r19, 0xAA	; 170
 65e:	48 eb       	ldi	r20, 0xB8	; 184
 660:	5f e7       	ldi	r21, 0x7F	; 127
 662:	11 d1       	rcall	.+546    	; 0x886 <__mulsf3_pse>
 664:	0f 92       	push	r0
 666:	0f 92       	push	r0
 668:	0f 92       	push	r0
 66a:	4d b7       	in	r20, 0x3d	; 61
 66c:	5e b7       	in	r21, 0x3e	; 62
 66e:	0f 92       	push	r0
 670:	c9 d0       	rcall	.+402    	; 0x804 <modf>
 672:	e4 e5       	ldi	r30, 0x54	; 84
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	1f d0       	rcall	.+62     	; 0x6b6 <__fp_powser>
 678:	4f 91       	pop	r20
 67a:	5f 91       	pop	r21
 67c:	ef 91       	pop	r30
 67e:	ff 91       	pop	r31
 680:	e5 95       	asr	r30
 682:	ee 1f       	adc	r30, r30
 684:	ff 1f       	adc	r31, r31
 686:	49 f0       	breq	.+18     	; 0x69a <exp+0x4e>
 688:	fe 57       	subi	r31, 0x7E	; 126
 68a:	e0 68       	ori	r30, 0x80	; 128
 68c:	44 27       	eor	r20, r20
 68e:	ee 0f       	add	r30, r30
 690:	44 1f       	adc	r20, r20
 692:	fa 95       	dec	r31
 694:	e1 f7       	brne	.-8      	; 0x68e <exp+0x42>
 696:	41 95       	neg	r20
 698:	55 0b       	sbc	r21, r21
 69a:	3b d0       	rcall	.+118    	; 0x712 <ldexp>
 69c:	0f 90       	pop	r0
 69e:	07 fe       	sbrs	r0, 7
 6a0:	2f c0       	rjmp	.+94     	; 0x700 <inverse>
 6a2:	08 95       	ret

000006a4 <__fp_inf>:
 6a4:	97 f9       	bld	r25, 7
 6a6:	9f 67       	ori	r25, 0x7F	; 127
 6a8:	80 e8       	ldi	r24, 0x80	; 128
 6aa:	70 e0       	ldi	r23, 0x00	; 0
 6ac:	60 e0       	ldi	r22, 0x00	; 0
 6ae:	08 95       	ret

000006b0 <__fp_nan>:
 6b0:	9f ef       	ldi	r25, 0xFF	; 255
 6b2:	80 ec       	ldi	r24, 0xC0	; 192
 6b4:	08 95       	ret

000006b6 <__fp_powser>:
 6b6:	df 93       	push	r29
 6b8:	cf 93       	push	r28
 6ba:	1f 93       	push	r17
 6bc:	0f 93       	push	r16
 6be:	ff 92       	push	r15
 6c0:	ef 92       	push	r14
 6c2:	df 92       	push	r13
 6c4:	7b 01       	movw	r14, r22
 6c6:	8c 01       	movw	r16, r24
 6c8:	68 94       	set
 6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <__fp_powser+0x20>
 6cc:	da 2e       	mov	r13, r26
 6ce:	ef 01       	movw	r28, r30
 6d0:	d8 d0       	rcall	.+432    	; 0x882 <__mulsf3x>
 6d2:	fe 01       	movw	r30, r28
 6d4:	e8 94       	clt
 6d6:	a5 91       	lpm	r26, Z+
 6d8:	25 91       	lpm	r18, Z+
 6da:	35 91       	lpm	r19, Z+
 6dc:	45 91       	lpm	r20, Z+
 6de:	55 91       	lpm	r21, Z+
 6e0:	ae f3       	brts	.-22     	; 0x6cc <__fp_powser+0x16>
 6e2:	ef 01       	movw	r28, r30
 6e4:	37 d1       	rcall	.+622    	; 0x954 <__addsf3x>
 6e6:	fe 01       	movw	r30, r28
 6e8:	97 01       	movw	r18, r14
 6ea:	a8 01       	movw	r20, r16
 6ec:	da 94       	dec	r13
 6ee:	79 f7       	brne	.-34     	; 0x6ce <__fp_powser+0x18>
 6f0:	df 90       	pop	r13
 6f2:	ef 90       	pop	r14
 6f4:	ff 90       	pop	r15
 6f6:	0f 91       	pop	r16
 6f8:	1f 91       	pop	r17
 6fa:	cf 91       	pop	r28
 6fc:	df 91       	pop	r29
 6fe:	08 95       	ret

00000700 <inverse>:
 700:	9b 01       	movw	r18, r22
 702:	ac 01       	movw	r20, r24
 704:	60 e0       	ldi	r22, 0x00	; 0
 706:	70 e0       	ldi	r23, 0x00	; 0
 708:	80 e8       	ldi	r24, 0x80	; 128
 70a:	9f e3       	ldi	r25, 0x3F	; 63
 70c:	76 c1       	rjmp	.+748    	; 0x9fa <__divsf3>
 70e:	ca cf       	rjmp	.-108    	; 0x6a4 <__fp_inf>
 710:	dc c1       	rjmp	.+952    	; 0xaca <__fp_mpack>

00000712 <ldexp>:
 712:	2a df       	rcall	.-428    	; 0x568 <__fp_splitA>
 714:	e8 f3       	brcs	.-6      	; 0x710 <inverse+0x10>
 716:	99 23       	and	r25, r25
 718:	d9 f3       	breq	.-10     	; 0x710 <inverse+0x10>
 71a:	94 0f       	add	r25, r20
 71c:	51 1d       	adc	r21, r1
 71e:	bb f3       	brvs	.-18     	; 0x70e <inverse+0xe>
 720:	91 50       	subi	r25, 0x01	; 1
 722:	50 40       	sbci	r21, 0x00	; 0
 724:	94 f0       	brlt	.+36     	; 0x74a <ldexp+0x38>
 726:	59 f0       	breq	.+22     	; 0x73e <ldexp+0x2c>
 728:	88 23       	and	r24, r24
 72a:	32 f0       	brmi	.+12     	; 0x738 <ldexp+0x26>
 72c:	66 0f       	add	r22, r22
 72e:	77 1f       	adc	r23, r23
 730:	88 1f       	adc	r24, r24
 732:	91 50       	subi	r25, 0x01	; 1
 734:	50 40       	sbci	r21, 0x00	; 0
 736:	c1 f7       	brne	.-16     	; 0x728 <ldexp+0x16>
 738:	9e 3f       	cpi	r25, 0xFE	; 254
 73a:	51 05       	cpc	r21, r1
 73c:	44 f7       	brge	.-48     	; 0x70e <inverse+0xe>
 73e:	88 0f       	add	r24, r24
 740:	91 1d       	adc	r25, r1
 742:	96 95       	lsr	r25
 744:	87 95       	ror	r24
 746:	97 f9       	bld	r25, 7
 748:	08 95       	ret
 74a:	5f 3f       	cpi	r21, 0xFF	; 255
 74c:	ac f0       	brlt	.+42     	; 0x778 <ldexp+0x66>
 74e:	98 3e       	cpi	r25, 0xE8	; 232
 750:	9c f0       	brlt	.+38     	; 0x778 <ldexp+0x66>
 752:	bb 27       	eor	r27, r27
 754:	86 95       	lsr	r24
 756:	77 95       	ror	r23
 758:	67 95       	ror	r22
 75a:	b7 95       	ror	r27
 75c:	08 f4       	brcc	.+2      	; 0x760 <ldexp+0x4e>
 75e:	b1 60       	ori	r27, 0x01	; 1
 760:	93 95       	inc	r25
 762:	c1 f7       	brne	.-16     	; 0x754 <ldexp+0x42>
 764:	bb 0f       	add	r27, r27
 766:	58 f7       	brcc	.-42     	; 0x73e <ldexp+0x2c>
 768:	11 f4       	brne	.+4      	; 0x76e <ldexp+0x5c>
 76a:	60 ff       	sbrs	r22, 0
 76c:	e8 cf       	rjmp	.-48     	; 0x73e <ldexp+0x2c>
 76e:	6f 5f       	subi	r22, 0xFF	; 255
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	e3 cf       	rjmp	.-58     	; 0x73e <ldexp+0x2c>
 778:	12 cf       	rjmp	.-476    	; 0x59e <__fp_szero>
 77a:	0e f0       	brts	.+2      	; 0x77e <ldexp+0x6c>
 77c:	a6 c1       	rjmp	.+844    	; 0xaca <__fp_mpack>
 77e:	98 cf       	rjmp	.-208    	; 0x6b0 <__fp_nan>
 780:	68 94       	set
 782:	90 cf       	rjmp	.-224    	; 0x6a4 <__fp_inf>

00000784 <log>:
 784:	f1 de       	rcall	.-542    	; 0x568 <__fp_splitA>
 786:	c8 f3       	brcs	.-14     	; 0x77a <ldexp+0x68>
 788:	99 23       	and	r25, r25
 78a:	d1 f3       	breq	.-12     	; 0x780 <ldexp+0x6e>
 78c:	c6 f3       	brts	.-16     	; 0x77e <ldexp+0x6c>
 78e:	df 93       	push	r29
 790:	cf 93       	push	r28
 792:	1f 93       	push	r17
 794:	0f 93       	push	r16
 796:	ff 92       	push	r15
 798:	c9 2f       	mov	r28, r25
 79a:	dd 27       	eor	r29, r29
 79c:	88 23       	and	r24, r24
 79e:	2a f0       	brmi	.+10     	; 0x7aa <log+0x26>
 7a0:	21 97       	sbiw	r28, 0x01	; 1
 7a2:	66 0f       	add	r22, r22
 7a4:	77 1f       	adc	r23, r23
 7a6:	88 1f       	adc	r24, r24
 7a8:	da f7       	brpl	.-10     	; 0x7a0 <log+0x1c>
 7aa:	20 e0       	ldi	r18, 0x00	; 0
 7ac:	30 e0       	ldi	r19, 0x00	; 0
 7ae:	40 e8       	ldi	r20, 0x80	; 128
 7b0:	5f eb       	ldi	r21, 0xBF	; 191
 7b2:	9f e3       	ldi	r25, 0x3F	; 63
 7b4:	88 39       	cpi	r24, 0x98	; 152
 7b6:	20 f0       	brcs	.+8      	; 0x7c0 <log+0x3c>
 7b8:	80 3e       	cpi	r24, 0xE0	; 224
 7ba:	30 f0       	brcs	.+12     	; 0x7c8 <log+0x44>
 7bc:	21 96       	adiw	r28, 0x01	; 1
 7be:	8f 77       	andi	r24, 0x7F	; 127
 7c0:	b8 d0       	rcall	.+368    	; 0x932 <__addsf3>
 7c2:	ec e7       	ldi	r30, 0x7C	; 124
 7c4:	f0 e0       	ldi	r31, 0x00	; 0
 7c6:	03 c0       	rjmp	.+6      	; 0x7ce <log+0x4a>
 7c8:	b4 d0       	rcall	.+360    	; 0x932 <__addsf3>
 7ca:	e9 ea       	ldi	r30, 0xA9	; 169
 7cc:	f0 e0       	ldi	r31, 0x00	; 0
 7ce:	73 df       	rcall	.-282    	; 0x6b6 <__fp_powser>
 7d0:	8b 01       	movw	r16, r22
 7d2:	be 01       	movw	r22, r28
 7d4:	ec 01       	movw	r28, r24
 7d6:	fb 2e       	mov	r15, r27
 7d8:	6f 57       	subi	r22, 0x7F	; 127
 7da:	71 09       	sbc	r23, r1
 7dc:	75 95       	asr	r23
 7de:	77 1f       	adc	r23, r23
 7e0:	88 0b       	sbc	r24, r24
 7e2:	99 0b       	sbc	r25, r25
 7e4:	7e de       	rcall	.-772    	; 0x4e2 <__floatsisf>
 7e6:	28 e1       	ldi	r18, 0x18	; 24
 7e8:	32 e7       	ldi	r19, 0x72	; 114
 7ea:	41 e3       	ldi	r20, 0x31	; 49
 7ec:	5f e3       	ldi	r21, 0x3F	; 63
 7ee:	49 d0       	rcall	.+146    	; 0x882 <__mulsf3x>
 7f0:	af 2d       	mov	r26, r15
 7f2:	98 01       	movw	r18, r16
 7f4:	ae 01       	movw	r20, r28
 7f6:	ff 90       	pop	r15
 7f8:	0f 91       	pop	r16
 7fa:	1f 91       	pop	r17
 7fc:	cf 91       	pop	r28
 7fe:	df 91       	pop	r29
 800:	a9 d0       	rcall	.+338    	; 0x954 <__addsf3x>
 802:	7f c1       	rjmp	.+766    	; 0xb02 <__fp_round>

00000804 <modf>:
 804:	fa 01       	movw	r30, r20
 806:	dc 01       	movw	r26, r24
 808:	aa 0f       	add	r26, r26
 80a:	bb 1f       	adc	r27, r27
 80c:	9b 01       	movw	r18, r22
 80e:	ac 01       	movw	r20, r24
 810:	bf 57       	subi	r27, 0x7F	; 127
 812:	28 f4       	brcc	.+10     	; 0x81e <modf+0x1a>
 814:	22 27       	eor	r18, r18
 816:	33 27       	eor	r19, r19
 818:	44 27       	eor	r20, r20
 81a:	50 78       	andi	r21, 0x80	; 128
 81c:	1f c0       	rjmp	.+62     	; 0x85c <modf+0x58>
 81e:	b7 51       	subi	r27, 0x17	; 23
 820:	88 f4       	brcc	.+34     	; 0x844 <modf+0x40>
 822:	ab 2f       	mov	r26, r27
 824:	00 24       	eor	r0, r0
 826:	46 95       	lsr	r20
 828:	37 95       	ror	r19
 82a:	27 95       	ror	r18
 82c:	01 1c       	adc	r0, r1
 82e:	a3 95       	inc	r26
 830:	d2 f3       	brmi	.-12     	; 0x826 <modf+0x22>
 832:	00 20       	and	r0, r0
 834:	69 f0       	breq	.+26     	; 0x850 <modf+0x4c>
 836:	22 0f       	add	r18, r18
 838:	33 1f       	adc	r19, r19
 83a:	44 1f       	adc	r20, r20
 83c:	b3 95       	inc	r27
 83e:	da f3       	brmi	.-10     	; 0x836 <modf+0x32>
 840:	0d d0       	rcall	.+26     	; 0x85c <modf+0x58>
 842:	76 c0       	rjmp	.+236    	; 0x930 <__subsf3>
 844:	61 30       	cpi	r22, 0x01	; 1
 846:	71 05       	cpc	r23, r1
 848:	a0 e8       	ldi	r26, 0x80	; 128
 84a:	8a 07       	cpc	r24, r26
 84c:	b9 46       	sbci	r27, 0x69	; 105
 84e:	30 f4       	brcc	.+12     	; 0x85c <modf+0x58>
 850:	9b 01       	movw	r18, r22
 852:	ac 01       	movw	r20, r24
 854:	66 27       	eor	r22, r22
 856:	77 27       	eor	r23, r23
 858:	88 27       	eor	r24, r24
 85a:	90 78       	andi	r25, 0x80	; 128
 85c:	30 96       	adiw	r30, 0x00	; 0
 85e:	21 f0       	breq	.+8      	; 0x868 <modf+0x64>
 860:	20 83       	st	Z, r18
 862:	31 83       	std	Z+1, r19	; 0x01
 864:	42 83       	std	Z+2, r20	; 0x02
 866:	53 83       	std	Z+3, r21	; 0x03
 868:	08 95       	ret

0000086a <__mulsf3>:
 86a:	0b d0       	rcall	.+22     	; 0x882 <__mulsf3x>
 86c:	4a c1       	rjmp	.+660    	; 0xb02 <__fp_round>
 86e:	3b d1       	rcall	.+630    	; 0xae6 <__fp_pscA>
 870:	28 f0       	brcs	.+10     	; 0x87c <__mulsf3+0x12>
 872:	40 d1       	rcall	.+640    	; 0xaf4 <__fp_pscB>
 874:	18 f0       	brcs	.+6      	; 0x87c <__mulsf3+0x12>
 876:	95 23       	and	r25, r21
 878:	09 f0       	breq	.+2      	; 0x87c <__mulsf3+0x12>
 87a:	14 cf       	rjmp	.-472    	; 0x6a4 <__fp_inf>
 87c:	19 cf       	rjmp	.-462    	; 0x6b0 <__fp_nan>
 87e:	11 24       	eor	r1, r1
 880:	8e ce       	rjmp	.-740    	; 0x59e <__fp_szero>

00000882 <__mulsf3x>:
 882:	6a de       	rcall	.-812    	; 0x558 <__fp_split3>
 884:	a0 f3       	brcs	.-24     	; 0x86e <__mulsf3+0x4>

00000886 <__mulsf3_pse>:
 886:	95 9f       	mul	r25, r21
 888:	d1 f3       	breq	.-12     	; 0x87e <__mulsf3+0x14>
 88a:	95 0f       	add	r25, r21
 88c:	50 e0       	ldi	r21, 0x00	; 0
 88e:	55 1f       	adc	r21, r21
 890:	62 9f       	mul	r22, r18
 892:	f0 01       	movw	r30, r0
 894:	72 9f       	mul	r23, r18
 896:	bb 27       	eor	r27, r27
 898:	f0 0d       	add	r31, r0
 89a:	b1 1d       	adc	r27, r1
 89c:	63 9f       	mul	r22, r19
 89e:	aa 27       	eor	r26, r26
 8a0:	f0 0d       	add	r31, r0
 8a2:	b1 1d       	adc	r27, r1
 8a4:	aa 1f       	adc	r26, r26
 8a6:	64 9f       	mul	r22, r20
 8a8:	66 27       	eor	r22, r22
 8aa:	b0 0d       	add	r27, r0
 8ac:	a1 1d       	adc	r26, r1
 8ae:	66 1f       	adc	r22, r22
 8b0:	82 9f       	mul	r24, r18
 8b2:	22 27       	eor	r18, r18
 8b4:	b0 0d       	add	r27, r0
 8b6:	a1 1d       	adc	r26, r1
 8b8:	62 1f       	adc	r22, r18
 8ba:	73 9f       	mul	r23, r19
 8bc:	b0 0d       	add	r27, r0
 8be:	a1 1d       	adc	r26, r1
 8c0:	62 1f       	adc	r22, r18
 8c2:	83 9f       	mul	r24, r19
 8c4:	a0 0d       	add	r26, r0
 8c6:	61 1d       	adc	r22, r1
 8c8:	22 1f       	adc	r18, r18
 8ca:	74 9f       	mul	r23, r20
 8cc:	33 27       	eor	r19, r19
 8ce:	a0 0d       	add	r26, r0
 8d0:	61 1d       	adc	r22, r1
 8d2:	23 1f       	adc	r18, r19
 8d4:	84 9f       	mul	r24, r20
 8d6:	60 0d       	add	r22, r0
 8d8:	21 1d       	adc	r18, r1
 8da:	82 2f       	mov	r24, r18
 8dc:	76 2f       	mov	r23, r22
 8de:	6a 2f       	mov	r22, r26
 8e0:	11 24       	eor	r1, r1
 8e2:	9f 57       	subi	r25, 0x7F	; 127
 8e4:	50 40       	sbci	r21, 0x00	; 0
 8e6:	8a f0       	brmi	.+34     	; 0x90a <__mulsf3_pse+0x84>
 8e8:	e1 f0       	breq	.+56     	; 0x922 <__mulsf3_pse+0x9c>
 8ea:	88 23       	and	r24, r24
 8ec:	4a f0       	brmi	.+18     	; 0x900 <__mulsf3_pse+0x7a>
 8ee:	ee 0f       	add	r30, r30
 8f0:	ff 1f       	adc	r31, r31
 8f2:	bb 1f       	adc	r27, r27
 8f4:	66 1f       	adc	r22, r22
 8f6:	77 1f       	adc	r23, r23
 8f8:	88 1f       	adc	r24, r24
 8fa:	91 50       	subi	r25, 0x01	; 1
 8fc:	50 40       	sbci	r21, 0x00	; 0
 8fe:	a9 f7       	brne	.-22     	; 0x8ea <__mulsf3_pse+0x64>
 900:	9e 3f       	cpi	r25, 0xFE	; 254
 902:	51 05       	cpc	r21, r1
 904:	70 f0       	brcs	.+28     	; 0x922 <__mulsf3_pse+0x9c>
 906:	ce ce       	rjmp	.-612    	; 0x6a4 <__fp_inf>
 908:	4a ce       	rjmp	.-876    	; 0x59e <__fp_szero>
 90a:	5f 3f       	cpi	r21, 0xFF	; 255
 90c:	ec f3       	brlt	.-6      	; 0x908 <__mulsf3_pse+0x82>
 90e:	98 3e       	cpi	r25, 0xE8	; 232
 910:	dc f3       	brlt	.-10     	; 0x908 <__mulsf3_pse+0x82>
 912:	86 95       	lsr	r24
 914:	77 95       	ror	r23
 916:	67 95       	ror	r22
 918:	b7 95       	ror	r27
 91a:	f7 95       	ror	r31
 91c:	e7 95       	ror	r30
 91e:	9f 5f       	subi	r25, 0xFF	; 255
 920:	c1 f7       	brne	.-16     	; 0x912 <__mulsf3_pse+0x8c>
 922:	fe 2b       	or	r31, r30
 924:	88 0f       	add	r24, r24
 926:	91 1d       	adc	r25, r1
 928:	96 95       	lsr	r25
 92a:	87 95       	ror	r24
 92c:	97 f9       	bld	r25, 7
 92e:	08 95       	ret

00000930 <__subsf3>:
 930:	50 58       	subi	r21, 0x80	; 128

00000932 <__addsf3>:
 932:	bb 27       	eor	r27, r27
 934:	aa 27       	eor	r26, r26
 936:	0e d0       	rcall	.+28     	; 0x954 <__addsf3x>
 938:	e4 c0       	rjmp	.+456    	; 0xb02 <__fp_round>
 93a:	d5 d0       	rcall	.+426    	; 0xae6 <__fp_pscA>
 93c:	30 f0       	brcs	.+12     	; 0x94a <__addsf3+0x18>
 93e:	da d0       	rcall	.+436    	; 0xaf4 <__fp_pscB>
 940:	20 f0       	brcs	.+8      	; 0x94a <__addsf3+0x18>
 942:	31 f4       	brne	.+12     	; 0x950 <__addsf3+0x1e>
 944:	9f 3f       	cpi	r25, 0xFF	; 255
 946:	11 f4       	brne	.+4      	; 0x94c <__addsf3+0x1a>
 948:	1e f4       	brtc	.+6      	; 0x950 <__addsf3+0x1e>
 94a:	b2 ce       	rjmp	.-668    	; 0x6b0 <__fp_nan>
 94c:	0e f4       	brtc	.+2      	; 0x950 <__addsf3+0x1e>
 94e:	e0 95       	com	r30
 950:	e7 fb       	bst	r30, 7
 952:	a8 ce       	rjmp	.-688    	; 0x6a4 <__fp_inf>

00000954 <__addsf3x>:
 954:	e9 2f       	mov	r30, r25
 956:	00 de       	rcall	.-1024   	; 0x558 <__fp_split3>
 958:	80 f3       	brcs	.-32     	; 0x93a <__addsf3+0x8>
 95a:	ba 17       	cp	r27, r26
 95c:	62 07       	cpc	r22, r18
 95e:	73 07       	cpc	r23, r19
 960:	84 07       	cpc	r24, r20
 962:	95 07       	cpc	r25, r21
 964:	18 f0       	brcs	.+6      	; 0x96c <__addsf3x+0x18>
 966:	71 f4       	brne	.+28     	; 0x984 <__addsf3x+0x30>
 968:	9e f5       	brtc	.+102    	; 0x9d0 <__addsf3x+0x7c>
 96a:	18 ce       	rjmp	.-976    	; 0x59c <__fp_zero>
 96c:	0e f4       	brtc	.+2      	; 0x970 <__addsf3x+0x1c>
 96e:	e0 95       	com	r30
 970:	0b 2e       	mov	r0, r27
 972:	ba 2f       	mov	r27, r26
 974:	a0 2d       	mov	r26, r0
 976:	0b 01       	movw	r0, r22
 978:	b9 01       	movw	r22, r18
 97a:	90 01       	movw	r18, r0
 97c:	0c 01       	movw	r0, r24
 97e:	ca 01       	movw	r24, r20
 980:	a0 01       	movw	r20, r0
 982:	11 24       	eor	r1, r1
 984:	ff 27       	eor	r31, r31
 986:	59 1b       	sub	r21, r25
 988:	99 f0       	breq	.+38     	; 0x9b0 <__addsf3x+0x5c>
 98a:	59 3f       	cpi	r21, 0xF9	; 249
 98c:	50 f4       	brcc	.+20     	; 0x9a2 <__addsf3x+0x4e>
 98e:	50 3e       	cpi	r21, 0xE0	; 224
 990:	68 f1       	brcs	.+90     	; 0x9ec <__addsf3x+0x98>
 992:	1a 16       	cp	r1, r26
 994:	f0 40       	sbci	r31, 0x00	; 0
 996:	a2 2f       	mov	r26, r18
 998:	23 2f       	mov	r18, r19
 99a:	34 2f       	mov	r19, r20
 99c:	44 27       	eor	r20, r20
 99e:	58 5f       	subi	r21, 0xF8	; 248
 9a0:	f3 cf       	rjmp	.-26     	; 0x988 <__addsf3x+0x34>
 9a2:	46 95       	lsr	r20
 9a4:	37 95       	ror	r19
 9a6:	27 95       	ror	r18
 9a8:	a7 95       	ror	r26
 9aa:	f0 40       	sbci	r31, 0x00	; 0
 9ac:	53 95       	inc	r21
 9ae:	c9 f7       	brne	.-14     	; 0x9a2 <__addsf3x+0x4e>
 9b0:	7e f4       	brtc	.+30     	; 0x9d0 <__addsf3x+0x7c>
 9b2:	1f 16       	cp	r1, r31
 9b4:	ba 0b       	sbc	r27, r26
 9b6:	62 0b       	sbc	r22, r18
 9b8:	73 0b       	sbc	r23, r19
 9ba:	84 0b       	sbc	r24, r20
 9bc:	ba f0       	brmi	.+46     	; 0x9ec <__addsf3x+0x98>
 9be:	91 50       	subi	r25, 0x01	; 1
 9c0:	a1 f0       	breq	.+40     	; 0x9ea <__addsf3x+0x96>
 9c2:	ff 0f       	add	r31, r31
 9c4:	bb 1f       	adc	r27, r27
 9c6:	66 1f       	adc	r22, r22
 9c8:	77 1f       	adc	r23, r23
 9ca:	88 1f       	adc	r24, r24
 9cc:	c2 f7       	brpl	.-16     	; 0x9be <__addsf3x+0x6a>
 9ce:	0e c0       	rjmp	.+28     	; 0x9ec <__addsf3x+0x98>
 9d0:	ba 0f       	add	r27, r26
 9d2:	62 1f       	adc	r22, r18
 9d4:	73 1f       	adc	r23, r19
 9d6:	84 1f       	adc	r24, r20
 9d8:	48 f4       	brcc	.+18     	; 0x9ec <__addsf3x+0x98>
 9da:	87 95       	ror	r24
 9dc:	77 95       	ror	r23
 9de:	67 95       	ror	r22
 9e0:	b7 95       	ror	r27
 9e2:	f7 95       	ror	r31
 9e4:	9e 3f       	cpi	r25, 0xFE	; 254
 9e6:	08 f0       	brcs	.+2      	; 0x9ea <__addsf3x+0x96>
 9e8:	b3 cf       	rjmp	.-154    	; 0x950 <__addsf3+0x1e>
 9ea:	93 95       	inc	r25
 9ec:	88 0f       	add	r24, r24
 9ee:	08 f0       	brcs	.+2      	; 0x9f2 <__addsf3x+0x9e>
 9f0:	99 27       	eor	r25, r25
 9f2:	ee 0f       	add	r30, r30
 9f4:	97 95       	ror	r25
 9f6:	87 95       	ror	r24
 9f8:	08 95       	ret

000009fa <__divsf3>:
 9fa:	0c d0       	rcall	.+24     	; 0xa14 <__divsf3x>
 9fc:	82 c0       	rjmp	.+260    	; 0xb02 <__fp_round>
 9fe:	7a d0       	rcall	.+244    	; 0xaf4 <__fp_pscB>
 a00:	40 f0       	brcs	.+16     	; 0xa12 <__divsf3+0x18>
 a02:	71 d0       	rcall	.+226    	; 0xae6 <__fp_pscA>
 a04:	30 f0       	brcs	.+12     	; 0xa12 <__divsf3+0x18>
 a06:	21 f4       	brne	.+8      	; 0xa10 <__divsf3+0x16>
 a08:	5f 3f       	cpi	r21, 0xFF	; 255
 a0a:	19 f0       	breq	.+6      	; 0xa12 <__divsf3+0x18>
 a0c:	4b ce       	rjmp	.-874    	; 0x6a4 <__fp_inf>
 a0e:	51 11       	cpse	r21, r1
 a10:	c6 cd       	rjmp	.-1140   	; 0x59e <__fp_szero>
 a12:	4e ce       	rjmp	.-868    	; 0x6b0 <__fp_nan>

00000a14 <__divsf3x>:
 a14:	a1 dd       	rcall	.-1214   	; 0x558 <__fp_split3>
 a16:	98 f3       	brcs	.-26     	; 0x9fe <__divsf3+0x4>

00000a18 <__divsf3_pse>:
 a18:	99 23       	and	r25, r25
 a1a:	c9 f3       	breq	.-14     	; 0xa0e <__divsf3+0x14>
 a1c:	55 23       	and	r21, r21
 a1e:	b1 f3       	breq	.-20     	; 0xa0c <__divsf3+0x12>
 a20:	95 1b       	sub	r25, r21
 a22:	55 0b       	sbc	r21, r21
 a24:	bb 27       	eor	r27, r27
 a26:	aa 27       	eor	r26, r26
 a28:	62 17       	cp	r22, r18
 a2a:	73 07       	cpc	r23, r19
 a2c:	84 07       	cpc	r24, r20
 a2e:	38 f0       	brcs	.+14     	; 0xa3e <__divsf3_pse+0x26>
 a30:	9f 5f       	subi	r25, 0xFF	; 255
 a32:	5f 4f       	sbci	r21, 0xFF	; 255
 a34:	22 0f       	add	r18, r18
 a36:	33 1f       	adc	r19, r19
 a38:	44 1f       	adc	r20, r20
 a3a:	aa 1f       	adc	r26, r26
 a3c:	a9 f3       	breq	.-22     	; 0xa28 <__divsf3_pse+0x10>
 a3e:	33 d0       	rcall	.+102    	; 0xaa6 <__divsf3_pse+0x8e>
 a40:	0e 2e       	mov	r0, r30
 a42:	3a f0       	brmi	.+14     	; 0xa52 <__divsf3_pse+0x3a>
 a44:	e0 e8       	ldi	r30, 0x80	; 128
 a46:	30 d0       	rcall	.+96     	; 0xaa8 <__divsf3_pse+0x90>
 a48:	91 50       	subi	r25, 0x01	; 1
 a4a:	50 40       	sbci	r21, 0x00	; 0
 a4c:	e6 95       	lsr	r30
 a4e:	00 1c       	adc	r0, r0
 a50:	ca f7       	brpl	.-14     	; 0xa44 <__divsf3_pse+0x2c>
 a52:	29 d0       	rcall	.+82     	; 0xaa6 <__divsf3_pse+0x8e>
 a54:	fe 2f       	mov	r31, r30
 a56:	27 d0       	rcall	.+78     	; 0xaa6 <__divsf3_pse+0x8e>
 a58:	66 0f       	add	r22, r22
 a5a:	77 1f       	adc	r23, r23
 a5c:	88 1f       	adc	r24, r24
 a5e:	bb 1f       	adc	r27, r27
 a60:	26 17       	cp	r18, r22
 a62:	37 07       	cpc	r19, r23
 a64:	48 07       	cpc	r20, r24
 a66:	ab 07       	cpc	r26, r27
 a68:	b0 e8       	ldi	r27, 0x80	; 128
 a6a:	09 f0       	breq	.+2      	; 0xa6e <__divsf3_pse+0x56>
 a6c:	bb 0b       	sbc	r27, r27
 a6e:	80 2d       	mov	r24, r0
 a70:	bf 01       	movw	r22, r30
 a72:	ff 27       	eor	r31, r31
 a74:	93 58       	subi	r25, 0x83	; 131
 a76:	5f 4f       	sbci	r21, 0xFF	; 255
 a78:	2a f0       	brmi	.+10     	; 0xa84 <__divsf3_pse+0x6c>
 a7a:	9e 3f       	cpi	r25, 0xFE	; 254
 a7c:	51 05       	cpc	r21, r1
 a7e:	68 f0       	brcs	.+26     	; 0xa9a <__divsf3_pse+0x82>
 a80:	11 ce       	rjmp	.-990    	; 0x6a4 <__fp_inf>
 a82:	8d cd       	rjmp	.-1254   	; 0x59e <__fp_szero>
 a84:	5f 3f       	cpi	r21, 0xFF	; 255
 a86:	ec f3       	brlt	.-6      	; 0xa82 <__divsf3_pse+0x6a>
 a88:	98 3e       	cpi	r25, 0xE8	; 232
 a8a:	dc f3       	brlt	.-10     	; 0xa82 <__divsf3_pse+0x6a>
 a8c:	86 95       	lsr	r24
 a8e:	77 95       	ror	r23
 a90:	67 95       	ror	r22
 a92:	b7 95       	ror	r27
 a94:	f7 95       	ror	r31
 a96:	9f 5f       	subi	r25, 0xFF	; 255
 a98:	c9 f7       	brne	.-14     	; 0xa8c <__divsf3_pse+0x74>
 a9a:	88 0f       	add	r24, r24
 a9c:	91 1d       	adc	r25, r1
 a9e:	96 95       	lsr	r25
 aa0:	87 95       	ror	r24
 aa2:	97 f9       	bld	r25, 7
 aa4:	08 95       	ret
 aa6:	e1 e0       	ldi	r30, 0x01	; 1
 aa8:	66 0f       	add	r22, r22
 aaa:	77 1f       	adc	r23, r23
 aac:	88 1f       	adc	r24, r24
 aae:	bb 1f       	adc	r27, r27
 ab0:	62 17       	cp	r22, r18
 ab2:	73 07       	cpc	r23, r19
 ab4:	84 07       	cpc	r24, r20
 ab6:	ba 07       	cpc	r27, r26
 ab8:	20 f0       	brcs	.+8      	; 0xac2 <__divsf3_pse+0xaa>
 aba:	62 1b       	sub	r22, r18
 abc:	73 0b       	sbc	r23, r19
 abe:	84 0b       	sbc	r24, r20
 ac0:	ba 0b       	sbc	r27, r26
 ac2:	ee 1f       	adc	r30, r30
 ac4:	88 f7       	brcc	.-30     	; 0xaa8 <__divsf3_pse+0x90>
 ac6:	e0 95       	com	r30
 ac8:	08 95       	ret

00000aca <__fp_mpack>:
 aca:	9f 3f       	cpi	r25, 0xFF	; 255
 acc:	31 f0       	breq	.+12     	; 0xada <__fp_mpack_finite+0xc>

00000ace <__fp_mpack_finite>:
 ace:	91 50       	subi	r25, 0x01	; 1
 ad0:	20 f4       	brcc	.+8      	; 0xada <__fp_mpack_finite+0xc>
 ad2:	87 95       	ror	r24
 ad4:	77 95       	ror	r23
 ad6:	67 95       	ror	r22
 ad8:	b7 95       	ror	r27
 ada:	88 0f       	add	r24, r24
 adc:	91 1d       	adc	r25, r1
 ade:	96 95       	lsr	r25
 ae0:	87 95       	ror	r24
 ae2:	97 f9       	bld	r25, 7
 ae4:	08 95       	ret

00000ae6 <__fp_pscA>:
 ae6:	00 24       	eor	r0, r0
 ae8:	0a 94       	dec	r0
 aea:	16 16       	cp	r1, r22
 aec:	17 06       	cpc	r1, r23
 aee:	18 06       	cpc	r1, r24
 af0:	09 06       	cpc	r0, r25
 af2:	08 95       	ret

00000af4 <__fp_pscB>:
 af4:	00 24       	eor	r0, r0
 af6:	0a 94       	dec	r0
 af8:	12 16       	cp	r1, r18
 afa:	13 06       	cpc	r1, r19
 afc:	14 06       	cpc	r1, r20
 afe:	05 06       	cpc	r0, r21
 b00:	08 95       	ret

00000b02 <__fp_round>:
 b02:	09 2e       	mov	r0, r25
 b04:	03 94       	inc	r0
 b06:	00 0c       	add	r0, r0
 b08:	11 f4       	brne	.+4      	; 0xb0e <__fp_round+0xc>
 b0a:	88 23       	and	r24, r24
 b0c:	52 f0       	brmi	.+20     	; 0xb22 <__fp_round+0x20>
 b0e:	bb 0f       	add	r27, r27
 b10:	40 f4       	brcc	.+16     	; 0xb22 <__fp_round+0x20>
 b12:	bf 2b       	or	r27, r31
 b14:	11 f4       	brne	.+4      	; 0xb1a <__fp_round+0x18>
 b16:	60 ff       	sbrs	r22, 0
 b18:	04 c0       	rjmp	.+8      	; 0xb22 <__fp_round+0x20>
 b1a:	6f 5f       	subi	r22, 0xFF	; 255
 b1c:	7f 4f       	sbci	r23, 0xFF	; 255
 b1e:	8f 4f       	sbci	r24, 0xFF	; 255
 b20:	9f 4f       	sbci	r25, 0xFF	; 255
 b22:	08 95       	ret

00000b24 <__udivmodhi4>:
 b24:	aa 1b       	sub	r26, r26
 b26:	bb 1b       	sub	r27, r27
 b28:	51 e1       	ldi	r21, 0x11	; 17
 b2a:	07 c0       	rjmp	.+14     	; 0xb3a <__udivmodhi4_ep>

00000b2c <__udivmodhi4_loop>:
 b2c:	aa 1f       	adc	r26, r26
 b2e:	bb 1f       	adc	r27, r27
 b30:	a6 17       	cp	r26, r22
 b32:	b7 07       	cpc	r27, r23
 b34:	10 f0       	brcs	.+4      	; 0xb3a <__udivmodhi4_ep>
 b36:	a6 1b       	sub	r26, r22
 b38:	b7 0b       	sbc	r27, r23

00000b3a <__udivmodhi4_ep>:
 b3a:	88 1f       	adc	r24, r24
 b3c:	99 1f       	adc	r25, r25
 b3e:	5a 95       	dec	r21
 b40:	a9 f7       	brne	.-22     	; 0xb2c <__udivmodhi4_loop>
 b42:	80 95       	com	r24
 b44:	90 95       	com	r25
 b46:	bc 01       	movw	r22, r24
 b48:	cd 01       	movw	r24, r26
 b4a:	08 95       	ret

00000b4c <__divmodhi4>:
 b4c:	97 fb       	bst	r25, 7
 b4e:	09 2e       	mov	r0, r25
 b50:	07 26       	eor	r0, r23
 b52:	0a d0       	rcall	.+20     	; 0xb68 <__divmodhi4_neg1>
 b54:	77 fd       	sbrc	r23, 7
 b56:	04 d0       	rcall	.+8      	; 0xb60 <__divmodhi4_neg2>
 b58:	e5 df       	rcall	.-54     	; 0xb24 <__udivmodhi4>
 b5a:	06 d0       	rcall	.+12     	; 0xb68 <__divmodhi4_neg1>
 b5c:	00 20       	and	r0, r0
 b5e:	1a f4       	brpl	.+6      	; 0xb66 <__divmodhi4_exit>

00000b60 <__divmodhi4_neg2>:
 b60:	70 95       	com	r23
 b62:	61 95       	neg	r22
 b64:	7f 4f       	sbci	r23, 0xFF	; 255

00000b66 <__divmodhi4_exit>:
 b66:	08 95       	ret

00000b68 <__divmodhi4_neg1>:
 b68:	f6 f7       	brtc	.-4      	; 0xb66 <__divmodhi4_exit>
 b6a:	90 95       	com	r25
 b6c:	81 95       	neg	r24
 b6e:	9f 4f       	sbci	r25, 0xFF	; 255
 b70:	08 95       	ret

00000b72 <_exit>:
 b72:	f8 94       	cli

00000b74 <__stop_program>:
 b74:	ff cf       	rjmp	.-2      	; 0xb74 <__stop_program>
