
AVRASM ver. 2.1.30  E:\MINHHAGROUP\MH_MCU\MCU\MCU_AVR\KIT_AVR_V4\SoftWare\B8_DS1307\List\main.asm Mon Jul 07 13:58:58 2014

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 4420
00002b 3153
00002c 3033
00002d 2037      	.DB  0x20,0x44,0x53,0x31,0x33,0x30,0x37,0x20
00002e 5641
00002f 2052
000030 3456
000031 2020      	.DB  0x41,0x56,0x52,0x20,0x56,0x34,0x20,0x20
000032 5400
000033 6d69
000034 3a65
000035 2520      	.DB  0x0,0x54,0x69,0x6D,0x65,0x3A,0x20,0x25
000036 7532
000037 252d
000038 7532
000039 252d      	.DB  0x32,0x75,0x2D,0x25,0x32,0x75,0x2D,0x25
00003a 7532
E:\MINHHAGROUP\MH_MCU\MCU\MCU_AVR\KIT_AVR_V4\SoftWare\B8_DS1307\List\main.asm(1092): warning: .cseg .db misalignment - padding zero byte
00003b 0000      	.DB  0x32,0x75,0x0
                 _0x2040060:
E:\MINHHAGROUP\MH_MCU\MCU\MCU_AVR\KIT_AVR_V4\SoftWare\B8_DS1307\List\main.asm(1094): warning: .cseg .db misalignment - padding zero byte
00003c 0001      	.DB  0x1
                 _0x2040000:
00003d 4e2d
00003e 4e41
00003f 4900
000040 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\MINHHAGROUP\MH_MCU\MCU\MCU_AVR\KIT_AVR_V4\SoftWare\B8_DS1307\List\main.asm(1097): warning: .cseg .db misalignment - padding zero byte
000041 0000      	.DB  0x0
                 _0x2060000:
000042 4e2d
000043 4e41
E:\MINHHAGROUP\MH_MCU\MCU\MCU_AVR\KIT_AVR_V4\SoftWare\B8_DS1307\List\main.asm(1099): warning: .cseg .db misalignment - padding zero byte
000044 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
000045 0011      	.DW  0x11
000046 0160      	.DW  _0x4
000047 0054      	.DW  _0x0*2
                 
000048 0001      	.DW  0x01
000049 0171      	.DW  __seed_G102
00004a 0078      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00004b 0000      	.DW  0
                 
                 __RESET:
00004c 94f8      	CLI
00004d 27ee      	CLR  R30
00004e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004f e0f1      	LDI  R31,1
000050 bffb      	OUT  GICR,R31
000051 bfeb      	OUT  GICR,R30
000052 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000053 e1f8      	LDI  R31,0x18
000054 bdf1      	OUT  WDTCR,R31
000055 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000056 e08d      	LDI  R24,(14-2)+1
000057 e0a2      	LDI  R26,2
000058 27bb      	CLR  R27
                 __CLEAR_REG:
000059 93ed      	ST   X+,R30
00005a 958a      	DEC  R24
00005b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005d e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005e e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005f 93ed      	ST   X+,R30
000060 9701      	SBIW R24,1
000061 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000062 e8ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000063 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000064 9185      	LPM  R24,Z+
000065 9195      	LPM  R25,Z+
000066 9700      	SBIW R24,0
000067 f061      	BREQ __GLOBAL_INI_END
000068 91a5      	LPM  R26,Z+
000069 91b5      	LPM  R27,Z+
00006a 9005      	LPM  R0,Z+
00006b 9015      	LPM  R1,Z+
00006c 01bf      	MOVW R22,R30
00006d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006e 9005      	LPM  R0,Z+
00006f 920d      	ST   X+,R0
000070 9701      	SBIW R24,1
000071 f7e1      	BRNE __GLOBAL_INI_LOOP
000072 01fb      	MOVW R30,R22
000073 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000074 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000075 bfed      	OUT  SPL,R30
000076 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000077 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000078 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000079 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007a 940c 007c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************************************
                 ;  *Ten Tep          :     main.c
                 ;  *Ngay             :     05/07/2014
                 ;  *Tac Gia          :     MinhHa R&D Team
                 ;  *Cong Ty          :     MinhHaGroup
                 ;  *Webside          :     mcu.banlinhkien.vn
                 ;  *Phien Ban        :     V1.0
                 ;  *Tom Tat          :     Hien thi thoi gian, ngay thang len LCD16x2, su dung DS1307
                 ;  ******************************************************************************/
                 ;
                 ;#include "Main\main.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include "ProjectLib\Include\var.h"
                 ;
                 ;#if (__MAIN_H!=5072014)
                 ;    #error "Include Sai #File Main.h"
                 ;#endif
                 ;
                 ;// Declare your global variables here
                 ;
                 ;void main(void)
                 ; 0000 0015 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0016     uint8_t Str[16];
                 ; 0000 0017     uint8_t Hour, Min, Sec;
                 ; 0000 0018 // Declare your local variables here
                 ; 0000 0019 
                 ; 0000 001A // Input/Output Ports initialization
                 ; 0000 001B // Port A initialization
                 ; 0000 001C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 001D // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 001E PORTA=0x00;
00007c 9760      	SBIW R28,16
                 ;	Str -> Y+0
                 ;	Hour -> R17
                 ;	Min -> R16
                 ;	Sec -> R19
00007d e0e0      	LDI  R30,LOW(0)
00007e bbeb      	OUT  0x1B,R30
                 ; 0000 001F DDRA=0x00;
00007f bbea      	OUT  0x1A,R30
                 ; 0000 0020 
                 ; 0000 0021 // Port B initialization
                 ; 0000 0022 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0023 // State7=1 State6=1 State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0000 0024 PORTB=0xF0;
000080 efe0      	LDI  R30,LOW(240)
000081 bbe8      	OUT  0x18,R30
                 ; 0000 0025 DDRB=0xF0;
000082 bbe7      	OUT  0x17,R30
                 ; 0000 0026 
                 ; 0000 0027 // Port C initialization
                 ; 0000 0028 // Func7=In Func6=In Func5=Out Func4=Out Func3=Out Func2=In Func1=Out Func0=Out
                 ; 0000 0029 // State7=T State6=T State5=1 State4=1 State3=1 State2=T State1=0 State0=0
                 ; 0000 002A PORTC=0x00;
000083 e0e0      	LDI  R30,LOW(0)
000084 bbe5      	OUT  0x15,R30
                 ; 0000 002B DDRC=0xff;
000085 efef      	LDI  R30,LOW(255)
000086 bbe4      	OUT  0x14,R30
                 ; 0000 002C 
                 ; 0000 002D // Port D initialization
                 ; 0000 002E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 002F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0030 PORTD=0x00;
000087 e0e0      	LDI  R30,LOW(0)
000088 bbe2      	OUT  0x12,R30
                 ; 0000 0031 DDRD=0x00;
000089 bbe1      	OUT  0x11,R30
                 ; 0000 0032 
                 ; 0000 0033 // Timer/Counter 0 initialization
                 ; 0000 0034 // Clock source: System Clock
                 ; 0000 0035 // Clock value: Timer 0 Stopped
                 ; 0000 0036 // Mode: Normal top=0xFF
                 ; 0000 0037 // OC0 output: Disconnected
                 ; 0000 0038 TCCR0=0x00;
00008a bfe3      	OUT  0x33,R30
                 ; 0000 0039 TCNT0=0x00;
00008b bfe2      	OUT  0x32,R30
                 ; 0000 003A OCR0=0x00;
00008c bfec      	OUT  0x3C,R30
                 ; 0000 003B 
                 ; 0000 003C // Timer/Counter 1 initialization
                 ; 0000 003D // Clock source: System Clock
                 ; 0000 003E // Clock value: Timer1 Stopped
                 ; 0000 003F // Mode: Normal top=0xFFFF
                 ; 0000 0040 // OC1A output: Discon.
                 ; 0000 0041 // OC1B output: Discon.
                 ; 0000 0042 // Noise Canceler: Off
                 ; 0000 0043 // Input Capture on Falling Edge
                 ; 0000 0044 // Timer1 Overflow Interrupt: Off
                 ; 0000 0045 // Input Capture Interrupt: Off
                 ; 0000 0046 // Compare A Match Interrupt: Off
                 ; 0000 0047 // Compare B Match Interrupt: Off
                 ; 0000 0048 TCCR1A=0x00;
00008d bdef      	OUT  0x2F,R30
                 ; 0000 0049 TCCR1B=0x00;
00008e bdee      	OUT  0x2E,R30
                 ; 0000 004A TCNT1H=0x00;
00008f bded      	OUT  0x2D,R30
                 ; 0000 004B TCNT1L=0x00;
000090 bdec      	OUT  0x2C,R30
                 ; 0000 004C ICR1H=0x00;
000091 bde7      	OUT  0x27,R30
                 ; 0000 004D ICR1L=0x00;
000092 bde6      	OUT  0x26,R30
                 ; 0000 004E OCR1AH=0x00;
000093 bdeb      	OUT  0x2B,R30
                 ; 0000 004F OCR1AL=0x00;
000094 bdea      	OUT  0x2A,R30
                 ; 0000 0050 OCR1BH=0x00;
000095 bde9      	OUT  0x29,R30
                 ; 0000 0051 OCR1BL=0x00;
000096 bde8      	OUT  0x28,R30
                 ; 0000 0052 
                 ; 0000 0053 // Timer/Counter 2 initialization
                 ; 0000 0054 // Clock source: System Clock
                 ; 0000 0055 // Clock value: Timer2 Stopped
                 ; 0000 0056 // Mode: Normal top=0xFF
                 ; 0000 0057 // OC2 output: Disconnected
                 ; 0000 0058 ASSR=0x00;
000097 bde2      	OUT  0x22,R30
                 ; 0000 0059 TCCR2=0x00;
000098 bde5      	OUT  0x25,R30
                 ; 0000 005A TCNT2=0x00;
000099 bde4      	OUT  0x24,R30
                 ; 0000 005B OCR2=0x00;
00009a bde3      	OUT  0x23,R30
                 ; 0000 005C 
                 ; 0000 005D // External Interrupt(s) initialization
                 ; 0000 005E // INT0: Off
                 ; 0000 005F // INT1: Off
                 ; 0000 0060 // INT2: Off
                 ; 0000 0061 MCUCR=0x00;
00009b bfe5      	OUT  0x35,R30
                 ; 0000 0062 MCUCSR=0x00;
00009c bfe4      	OUT  0x34,R30
                 ; 0000 0063 
                 ; 0000 0064 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0065 TIMSK=0x00;
00009d bfe9      	OUT  0x39,R30
                 ; 0000 0066 
                 ; 0000 0067 // USART initialization
                 ; 0000 0068 // USART disabled
                 ; 0000 0069 UCSRB=0x00;
00009e b9ea      	OUT  0xA,R30
                 ; 0000 006A 
                 ; 0000 006B // Analog Comparator initialization
                 ; 0000 006C // Analog Comparator: Off
                 ; 0000 006D // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 006E ACSR=0x80;
00009f e8e0      	LDI  R30,LOW(128)
0000a0 b9e8      	OUT  0x8,R30
                 ; 0000 006F SFIOR=0x00;
0000a1 e0e0      	LDI  R30,LOW(0)
0000a2 bfe0      	OUT  0x30,R30
                 ; 0000 0070 
                 ; 0000 0071 // ADC initialization
                 ; 0000 0072 // ADC disabled
                 ; 0000 0073 ADCSRA=0x00;
0000a3 b9e6      	OUT  0x6,R30
                 ; 0000 0074 
                 ; 0000 0075 // SPI initialization
                 ; 0000 0076 // SPI disabled
                 ; 0000 0077 SPCR=0x00;
0000a4 b9ed      	OUT  0xD,R30
                 ; 0000 0078 
                 ; 0000 0079 // TWI initialization
                 ; 0000 007A // TWI disabled
                 ; 0000 007B TWCR=0x00;
0000a5 bfe6      	OUT  0x36,R30
                 ; 0000 007C 
                 ; 0000 007D LCD16X2_Init();    // Khoi tao LCD16X2
0000a6 d097      	RCALL _LCD16X2_Init
                 ; 0000 007E DS1307_Init();
0000a7 940e 0191 	CALL _DS1307_Init
                 ; 0000 007F DS1307_SetControl(1,DS1307_SQW_1Hz);
0000a9 e0e1      	LDI  R30,LOW(1)
0000aa 93ea      	ST   -Y,R30
0000ab e1e0      	LDI  R30,LOW(16)
0000ac 93ea      	ST   -Y,R30
0000ad 940e 01ce 	CALL _DS1307_SetControl
                 ; 0000 0080 if(FlagSetTime)
0000af e0a0      	LDI  R26,LOW(_FlagSetTime)
0000b0 e0b0      	LDI  R27,HIGH(_FlagSetTime)
0000b1 940e 0a95 	CALL __EEPROMRDB
0000b3 30e0      	CPI  R30,0
0000b4 f069      	BREQ _0x3
                 ; 0000 0081 {
                 ; 0000 0082     DS1307_SetTime(11,15,0);
0000b5 e0eb      	LDI  R30,LOW(11)
0000b6 93ea      	ST   -Y,R30
0000b7 e0ef      	LDI  R30,LOW(15)
0000b8 93ea      	ST   -Y,R30
0000b9 e0e0      	LDI  R30,LOW(0)
0000ba 93ea      	ST   -Y,R30
0000bb 940e 01db 	CALL _DS1307_SetTime
                 ; 0000 0083     FlagSetTime=0;
0000bd e0a0      	LDI  R26,LOW(_FlagSetTime)
0000be e0b0      	LDI  R27,HIGH(_FlagSetTime)
0000bf e0e0      	LDI  R30,LOW(0)
0000c0 940e 0aa1 	CALL __EEPROMWRB
                 ; 0000 0084 }
                 ; 0000 0085 LCD16X2_Gotoxy(0,0);
                 _0x3:
0000c2 e0e0      	LDI  R30,LOW(0)
0000c3 93ea      	ST   -Y,R30
0000c4 93ea      	ST   -Y,R30
0000c5 d09a      	RCALL _LCD16X2_Gotoxy
                 ; 0000 0086 LCD16X2_Puts(" DS1307 AVR V4  ");
                +
0000c6 e6e0     +LDI R30 , LOW ( _0x4 + ( 0 ) )
0000c7 e0f1     +LDI R31 , HIGH ( _0x4 + ( 0 ) )
                 	__POINTW1MN _0x4,0
0000c8 93fa      	ST   -Y,R31
0000c9 93ea      	ST   -Y,R30
0000ca d0b7      	RCALL _LCD16X2_Puts
                 ; 0000 0087 while (1)
                 _0x5:
                 ; 0000 0088 {
                 ; 0000 0089     DS1307_GetTime(&Hour,&Min,&Sec);
0000cb b7ed      	IN   R30,SPL
0000cc b7fe      	IN   R31,SPH
0000cd 93fa      	ST   -Y,R31
0000ce 93ea      	ST   -Y,R30
0000cf 931f      	PUSH R17
0000d0 b7ed      	IN   R30,SPL
0000d1 b7fe      	IN   R31,SPH
0000d2 93fa      	ST   -Y,R31
0000d3 93ea      	ST   -Y,R30
0000d4 930f      	PUSH R16
0000d5 b7ed      	IN   R30,SPL
0000d6 b7fe      	IN   R31,SPH
0000d7 93fa      	ST   -Y,R31
0000d8 93ea      	ST   -Y,R30
0000d9 933f      	PUSH R19
0000da 940e 01eb 	CALL _DS1307_GetTime
0000dc 913f      	POP  R19
0000dd 910f      	POP  R16
0000de 911f      	POP  R17
                 ; 0000 008A     sprintf(Str,"Time: %2u-%2u-%2u",Hour,Min,Sec);
0000df 01fe      	MOVW R30,R28
0000e0 93fa      	ST   -Y,R31
0000e1 93ea      	ST   -Y,R30
                +
0000e2 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 17 ) )
0000e3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW1FN _0x0,17
0000e4 93fa      	ST   -Y,R31
0000e5 93ea      	ST   -Y,R30
0000e6 2fe1      	MOV  R30,R17
0000e7 940e 0702 	CALL SUBOPT_0x0
0000e9 2fe0      	MOV  R30,R16
0000ea 940e 0702 	CALL SUBOPT_0x0
0000ec 2fe3      	MOV  R30,R19
0000ed 940e 0702 	CALL SUBOPT_0x0
0000ef e08c      	LDI  R24,12
0000f0 940e 0689 	CALL _sprintf
0000f2 9660      	ADIW R28,16
                 ; 0000 008B     LCD16X2_Gotoxy(0,1);
0000f3 e0e0      	LDI  R30,LOW(0)
0000f4 93ea      	ST   -Y,R30
0000f5 e0e1      	LDI  R30,LOW(1)
0000f6 93ea      	ST   -Y,R30
0000f7 d068      	RCALL _LCD16X2_Gotoxy
                 ; 0000 008C     LCD16X2_Puts(Str);
0000f8 01fe      	MOVW R30,R28
0000f9 93fa      	ST   -Y,R31
0000fa 93ea      	ST   -Y,R30
0000fb d086      	RCALL _LCD16X2_Puts
                 ; 0000 008D     delay_ms(200);
0000fc ece8      	LDI  R30,LOW(200)
0000fd e0f0      	LDI  R31,HIGH(200)
0000fe 940e 0708 	CALL SUBOPT_0x1
                 ; 0000 008E }
000100 cfca      	RJMP _0x5
                 ; 0000 008F }
                 _0x8:
000101 cfff      	RJMP _0x8
                 
                 	.DSEG
                 _0x4:
000160           	.BYTE 0x11
                 ;/*------------------------------KET THUC FILE-------------------------------
                 ; ______________________________MinhHa R&D Team______________________________*/
                 ;
                 ;/*****************************************************************************
                 ;  *Ten Tep          :     lcd16x2.h
                 ;  *Ngay             :     14/03/2014
                 ;  *Tac Gia          :     MinhHa R&D Team
                 ;  *Cong Ty          :     MinhHaGroup
                 ;  *Webside          :     mcu.banlinhkien.vn
                 ;  *Phien Ban        :     V1.0
                 ;  *Tom Tat          :     Dinh nghia cac ham giao tiep LCD16x2
                 ;  ******************************************************************************
                 ;  * Chu Y : Phai dinh nghia cac chan su dung cho LCD16X2 vao file main.h
                 ;  * Vi Du :
                 ;   // khai bao chan LCD16x2 TREN KIT AVR V2
                 ;   #define     LCD16X2_RS     PORTB_1
                 ;   #define     LCD16X2_RW     PORTC_2
                 ;   #define     LCD16X2_EN     PORTC_3
                 ;   #define     LCD16X2_D4     PORTD_4
                 ;   #define     LCD16X2_D5     PORTD_5
                 ;   #define     LCD16X2_D6     PORTD_6
                 ;   #define     LCD16X2_D7     PORTD_7
                 ;  ******************************************************************************
                 ;**/
                 ;/*********************************** VI DU ************************************
                 ;   // khai bao 1 mang ki tu dung cho LCD16X2
                 ;   uint8_t str[16];
                 ;   // cac tham bien khac
                 ;   uint8_t Do_am;
                 ;   //Khoi tao LCD16X2
                 ;   LCD16X2_Init();
                 ;   // hien thi 1 chuoi ki tu
                 ;   sprintf(str,"BanLinhKien.Vn");
                 ;   LCD16X2_Puts(str);
                 ;   sprintf(str,"Do Am: %u",Do_am);
                 ;   LCD16X2_Gotoxy(0,1);
                 ;   LCD16X2_Puts(str);
                 ;*******************************************************************************/
                 ;#include "User\Include\lcd16x2.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;#if (__LCD16X2_H!=14032014)
                 ;    #error "Include Sai File lcd16x2.h"
                 ;#endif
                 ;
                 ;/*------------------------------------------------------------------------------
                 ;Noi Dung    :   Gui tin hieu Enable den LCD16X2.
                 ;Tham Bien   :   Khong.
                 ;Tra Ve      :   Khong.
                 ; -------------------------------------------------------------------------------*/
                 ;
                 ;void LCD16X2_Enable(void)
                 ; 0001 0031 {
                 
                 	.CSEG
                 _LCD16X2_Enable:
                 ; 0001 0032 	LCD16X2_EN=1;
000102 9aad      	SBI  0x15,5
                 ; 0001 0033 	delay_us(3);
                +
000103 e088     +LDI R24 , LOW ( 8 )
                +__DELAY_USB_LOOP :
000104 958a     +DEC R24
000105 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 8
                 ; 0001 0034 	LCD16X2_EN=0;
000106 98ad      	CBI  0x15,5
                 ; 0001 0035 	delay_us(50);
                +
000107 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000108 958a     +DEC R24
000109 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
                 ; 0001 0036 }
00010a 9508      	RET
                 ;
                 ;/*------------------------------------------------------------------------------
                 ;Noi Dung    :   Gui 4 bit du lieu den LCD16X2.
                 ;Tham Bien   :   Data: 4 bit thap cua Data chua 4 bit du lieu can gui.
                 ;Tra Ve      :   Khong.
                 ; -------------------------------------------------------------------------------*/
                 ;
                 ;void LCD16X2_Send4Bit(uint8_t Data)
                 ; 0001 003F {
                 _LCD16X2_Send4Bit:
                 ; 0001 0040 	LCD16X2_D4=((Data&0x01)==0x01);
                 ;	Data -> Y+0
00010b 81e8      	LD   R30,Y
00010c 70e1      	ANDI R30,LOW(0x1)
00010d e0a1      	LDI  R26,LOW(1)
00010e 940e 09e2 	CALL __EQB12
000110 30e0      	CPI  R30,0
000111 f411      	BRNE _0x20007
000112 98c4      	CBI  0x18,4
000113 c001      	RJMP _0x20008
                 _0x20007:
000114 9ac4      	SBI  0x18,4
                 _0x20008:
                 ; 0001 0041 	LCD16X2_D5=((Data&0x02)==0x02);
000115 81e8      	LD   R30,Y
000116 70e2      	ANDI R30,LOW(0x2)
000117 e0a2      	LDI  R26,LOW(2)
000118 940e 09e2 	CALL __EQB12
00011a 30e0      	CPI  R30,0
00011b f411      	BRNE _0x20009
00011c 98c5      	CBI  0x18,5
00011d c001      	RJMP _0x2000A
                 _0x20009:
00011e 9ac5      	SBI  0x18,5
                 _0x2000A:
                 ; 0001 0042 	LCD16X2_D6=((Data&0x04)==0x04);
00011f 81e8      	LD   R30,Y
000120 70e4      	ANDI R30,LOW(0x4)
000121 e0a4      	LDI  R26,LOW(4)
000122 940e 09e2 	CALL __EQB12
000124 30e0      	CPI  R30,0
000125 f411      	BRNE _0x2000B
000126 98c6      	CBI  0x18,6
000127 c001      	RJMP _0x2000C
                 _0x2000B:
000128 9ac6      	SBI  0x18,6
                 _0x2000C:
                 ; 0001 0043 	LCD16X2_D7=((Data&0x08)==0x08);
000129 81e8      	LD   R30,Y
00012a 70e8      	ANDI R30,LOW(0x8)
00012b e0a8      	LDI  R26,LOW(8)
00012c 940e 09e2 	CALL __EQB12
00012e 30e0      	CPI  R30,0
00012f f411      	BRNE _0x2000D
000130 98c7      	CBI  0x18,7
000131 c001      	RJMP _0x2000E
                 _0x2000D:
000132 9ac7      	SBI  0x18,7
                 _0x2000E:
                 ; 0001 0044 }
000133 c04c      	RJMP _0x20A000B
                 ;
                 ;/*------------------------------------------------------------------------------
                 ;Noi Dung    :   Gui 1 byte du lieu den LCD16X2.
                 ;Tham Bien   :   command: lenh can ghi
                 ;Tra Ve      :   Khong.
                 ;vi du       :   LCD16X2_SendCommand (0x01);
                 ; -------------------------------------------------------------------------------*/
                 ;
                 ;void LCD16X2_SendCommand(uint8_t Command)
                 ; 0001 004E {
                 _LCD16X2_SendCommand:
                 ; 0001 004F 	LCD16X2_Send4Bit(Command>>4);   /* Gui 4 bit cao */
                 ;	Command -> Y+0
000134 81e8      	LD   R30,Y
000135 e0f0      	LDI  R31,0
000136 940e 09ce 	CALL __ASRW4
000138 940e 070c 	CALL SUBOPT_0x2
                 ; 0001 0050 	LCD16X2_Enable() ;
                 ; 0001 0051 	LCD16X2_Send4Bit(Command);      /* Gui 4 bit thap*/
00013a 81e8      	LD   R30,Y
00013b 940e 070c 	CALL SUBOPT_0x2
                 ; 0001 0052 	LCD16X2_Enable() ;
                 ; 0001 0053 }
00013d c042      	RJMP _0x20A000B
                 ;
                 ;/*------------------------------------------------------------------------------
                 ;Noi Dung    :   Khoi tao LCD16X2.
                 ;Tham Bien   :   Khong.
                 ;Tra Ve      :   Khong.
                 ; -------------------------------------------------------------------------------*/
                 ;
                 ;void LCD16X2_Init(void)
                 ; 0001 005C {
                 _LCD16X2_Init:
                 ; 0001 005D 	LCD16X2_Send4Bit(0x00);
00013e e0e0      	LDI  R30,LOW(0)
00013f 93ea      	ST   -Y,R30
000140 dfca      	RCALL _LCD16X2_Send4Bit
                 ; 0001 005E 	delay_ms(20);
000141 e1e4      	LDI  R30,LOW(20)
000142 e0f0      	LDI  R31,HIGH(20)
000143 940e 0708 	CALL SUBOPT_0x1
                 ; 0001 005F 	LCD16X2_RS=0;
000145 98ab      	CBI  0x15,3
                 ; 0001 0060 	LCD16X2_RW=0;
000146 98ac      	CBI  0x15,4
                 ; 0001 0061 	LCD16X2_Send4Bit(0x03);
000147 e0e3      	LDI  R30,LOW(3)
000148 940e 070c 	CALL SUBOPT_0x2
                 ; 0001 0062 	LCD16X2_Enable();
                 ; 0001 0063 	delay_ms(5);
00014a 940e 0711 	CALL SUBOPT_0x3
                 ; 0001 0064 	LCD16X2_Enable();
00014c dfb5      	RCALL _LCD16X2_Enable
                 ; 0001 0065 	delay_us(100);
                +
00014d ec88     +LDI R24 , LOW ( 200 )
00014e e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00014f 9701     +SBIW R24 , 1
000150 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
                 ; 0001 0066 	LCD16X2_Enable();
000151 dfb0      	RCALL _LCD16X2_Enable
                 ; 0001 0067 	LCD16X2_Send4Bit(0x02);
000152 e0e2      	LDI  R30,LOW(2)
000153 940e 070c 	CALL SUBOPT_0x2
                 ; 0001 0068 	LCD16X2_Enable();
                 ; 0001 0069 	LCD16X2_SendCommand( 0x28);        // giao thuc 4 bit, hien thi 2 hang, ki tu 5x7
000155 e2e8      	LDI  R30,LOW(40)
000156 93ea      	ST   -Y,R30
000157 dfdc      	RCALL _LCD16X2_SendCommand
                 ; 0001 006A 	LCD16X2_SendCommand( 0x0c);        // cho phep hien thi man hinh
000158 e0ec      	LDI  R30,LOW(12)
000159 93ea      	ST   -Y,R30
00015a dfd9      	RCALL _LCD16X2_SendCommand
                 ; 0001 006B 	LCD16X2_SendCommand( 0x06);        // tang ID, khong dich khung hinh
00015b e0e6      	LDI  R30,LOW(6)
00015c 93ea      	ST   -Y,R30
00015d dfd6      	RCALL _LCD16X2_SendCommand
                 ; 0001 006C 	LCD16X2_Clear();                   // xoa toan bo khung hinh
00015e d016      	RCALL _LCD16X2_Clear
                 ; 0001 006D }
00015f 9508      	RET
                 ;
                 ;/*------------------------------------------------------------------------------
                 ;Noi Dung    :   Thiet lap vi tri con tro LCD16X2.
                 ;Tham Bien   :   x: vi tri cot cua con tro. x = 0 - 15.
                 ;                y: vi tri hang cua con tro. y= 0,1.
                 ;Tra Ve      :   Khong.
                 ;Vi du       :   LCD16X2_Gotoxy(0,0);
                 ; -------------------------------------------------------------------------------*/
                 ;
                 ;void LCD16X2_Gotoxy(uint8_t  x, uint8_t  y)
                 ; 0001 0078 {
                 _LCD16X2_Gotoxy:
                 ; 0001 0079 	uint8_t  address;
                 ; 0001 007A 	if(!y)
000160 931a      	ST   -Y,R17
                 ;	x -> Y+2
                 ;	y -> Y+1
                 ;	address -> R17
000161 81e9      	LDD  R30,Y+1
000162 30e0      	CPI  R30,0
000163 f419      	BRNE _0x20013
                 ; 0001 007B 		address = (0x80+x);
000164 81ea      	LDD  R30,Y+2
000165 58e0      	SUBI R30,-LOW(128)
000166 c002      	RJMP _0x2001C
                 ; 0001 007C 	else
                 _0x20013:
                 ; 0001 007D 		address = (0xC0+x);
000167 81ea      	LDD  R30,Y+2
000168 54e0      	SUBI R30,-LOW(192)
                 _0x2001C:
000169 2f1e      	MOV  R17,R30
                 ; 0001 007E 	delay_ms(1);
00016a e0e1      	LDI  R30,LOW(1)
00016b e0f0      	LDI  R31,HIGH(1)
00016c 940e 0708 	CALL SUBOPT_0x1
                 ; 0001 007F 	LCD16X2_SendCommand(address);
00016e 931a      	ST   -Y,R17
00016f dfc4      	RCALL _LCD16X2_SendCommand
                 ; 0001 0080 	delay_ms(5);
000170 940e 0711 	CALL SUBOPT_0x3
                 ; 0001 0081 }
000172 8118      	LDD  R17,Y+0
000173 940c 0267 	JMP  _0x20A0006
                 ;
                 ;/*------------------------------------------------------------------------------
                 ;Noi Dung    :   Xoa noi dung hien thi tren LCD16X2.
                 ;Tham Bien   :   Khong.
                 ;Tra Ve      :   Khong.
                 ; -------------------------------------------------------------------------------*/
                 ;
                 ;void LCD16X2_Clear(void)
                 ; 0001 008A {
                 _LCD16X2_Clear:
                 ; 0001 008B 	LCD16X2_SendCommand(0x01);
000175 e0e1      	LDI  R30,LOW(1)
000176 93ea      	ST   -Y,R30
000177 dfbc      	RCALL _LCD16X2_SendCommand
                 ; 0001 008C 	delay_ms(5);
000178 940e 0711 	CALL SUBOPT_0x3
                 ; 0001 008D }
00017a 9508      	RET
                 ;
                 ;/*------------------------------------------------------------------------------
                 ;Noi Dung    :   Viet 1 ki tu len LCD16X2.
                 ;Tham Bien   :   Data  :   Gia tri ki tu can hien thi.
                 ;Tra Ve      :   Khong.
                 ; -------------------------------------------------------------------------------*/
                 ;void LCD16X2_PutChar(uint8_t Data)
                 ; 0001 0095 {
                 _LCD16X2_PutChar:
                 ; 0001 0096 	LCD16X2_RS=1;
                 ;	Data -> Y+0
00017b 9aab      	SBI  0x15,3
                 ; 0001 0097 	LCD16X2_SendCommand( Data );
00017c 81e8      	LD   R30,Y
00017d 93ea      	ST   -Y,R30
00017e dfb5      	RCALL _LCD16X2_SendCommand
                 ; 0001 0098 	LCD16X2_RS=0;
00017f 98ab      	CBI  0x15,3
                 ; 0001 0099 }
                 _0x20A000B:
000180 9621      	ADIW R28,1
000181 9508      	RET
                 ;
                 ;/*------------------------------------------------------------------------------
                 ;Noi Dung    :   Viet 1 chuoi ki tu len LCD16X2.
                 ;Tham Bien   :   *s    :   chuoi du lieu can hien thi.
                 ;Tra Ve      :   Khong.
                 ; -------------------------------------------------------------------------------*/
                 ;void LCD16X2_Puts(uint8_t *s)
                 ; 0001 00A1 {
                 _LCD16X2_Puts:
                 ; 0001 00A2 	while (*s)
                 ;	*s -> Y+0
                 _0x20019:
000182 81a8      	LD   R26,Y
000183 81b9      	LDD  R27,Y+1
000184 91ec      	LD   R30,X
000185 30e0      	CPI  R30,0
000186 f041      	BREQ _0x2001B
                 ; 0001 00A3 	{
                 ; 0001 00A4 		LCD16X2_PutChar(*s);
000187 93ea      	ST   -Y,R30
000188 dff2      	RCALL _LCD16X2_PutChar
                 ; 0001 00A5 		s++;
000189 81e8      	LD   R30,Y
00018a 81f9      	LDD  R31,Y+1
00018b 9631      	ADIW R30,1
00018c 83e8      	ST   Y,R30
00018d 83f9      	STD  Y+1,R31
                 ; 0001 00A6 	}
00018e cff3      	RJMP _0x20019
                 _0x2001B:
                 ; 0001 00A7 }
00018f 940c 0241 	JMP  _0x20A0007
                 ;/*------------------------------KET THUC FILE-------------------------------
                 ; ______________________________MinhHa R&D Temp______________________________*/
                 ;
                 ;
                 ;
                 ;
                 ;/*****************************************************************************
                 ;  *Ten Tep          :     ds1307.c
                 ;  *Ngay             :     19/03/2014
                 ;  *Tac Gia          :     MinhHa R&D Team
                 ;  *Cong Ty          :     MinhHaGroup
                 ;  *Webside          :     mcu.banlinhkien.vn
                 ;  *Phien Ban        :     V1.0
                 ;  *Tom Tat          :     Dinh nghia cac ham giao tiep DS1307
                 ;  ******************************************************************************/
                 ;
                 ;#include "User/Include/ds1307.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;#if (__DS1307_H!=19032014)
                 ;    #error "Include Sai File ds1307.h"
                 ;#endif
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Khoi tao DS1307.
                 ;Tham Bien   :   Khong.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void DS1307_Init(void)
                 ; 0002 0018 {
                 
                 	.CSEG
                 _DS1307_Init:
                 ; 0002 0019     I2CSOFT_Init();
000191 d06d      	RCALL _I2CSOFT_Init
                 ; 0002 001A }
000192 9508      	RET
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Ghi du lieu vao 1 thanh ghi trong DS1307.
                 ;Tham Bien   :   Address : Dia chi thanh ghi.
                 ;                Data    : Du lieu can ghi.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void DS1307_WriteData(uint8_t Address, uint8_t Data)
                 ; 0002 0024 {
                 _DS1307_WriteData:
                 ; 0002 0025    uint8_t Dataw;
                 ; 0002 0026    Dataw =  ((Data/10)<<4) + (Data % 10);
000193 931a      	ST   -Y,R17
                 ;	Address -> Y+2
                 ;	Data -> Y+1
                 ;	Dataw -> R17
000194 81a9      	LDD  R26,Y+1
000195 e0b0      	LDI  R27,0
000196 e0ea      	LDI  R30,LOW(10)
000197 e0f0      	LDI  R31,HIGH(10)
000198 940e 0a0d 	CALL __DIVW21
00019a 95e2      	SWAP R30
00019b 7fe0      	ANDI R30,0xF0
00019c 2f6e      	MOV  R22,R30
00019d 81a9      	LDD  R26,Y+1
00019e 27bb      	CLR  R27
00019f e0ea      	LDI  R30,LOW(10)
0001a0 e0f0      	LDI  R31,HIGH(10)
0001a1 940e 0a43 	CALL __MODW21
0001a3 0fe6      	ADD  R30,R22
0001a4 2f1e      	MOV  R17,R30
                 ; 0002 0027    I2CSOFT_Start();
0001a5 940e 0714 	CALL SUBOPT_0x4
                 ; 0002 0028    I2CSOFT_WriteData(DS1307_ADDR_WRITE);
                 ; 0002 0029    I2CSOFT_WriteData(Address);
0001a7 81ea      	LDD  R30,Y+2
0001a8 93ea      	ST   -Y,R30
0001a9 d06e      	RCALL _I2CSOFT_WriteData
                 ; 0002 002A    I2CSOFT_WriteData(Dataw);
0001aa 931a      	ST   -Y,R17
0001ab d06c      	RCALL _I2CSOFT_WriteData
                 ; 0002 002B    I2CSOFT_Stop();
0001ac d05e      	RCALL _I2CSOFT_Stop
                 ; 0002 002C }
0001ad 8118      	LDD  R17,Y+0
0001ae c0b8      	RJMP _0x20A0006
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Doc du lieu cua 1 thanh ghi trong DS1307.
                 ;Tham Bien   :   Address: Dia chi thanh ghi.
                 ;Tra Ve      :   Du lieu cua thanh ghi.
                 ;********************************************************************************/
                 ;
                 ;uint8_t DS1307_ReadData(uint8_t Address)
                 ; 0002 0035 {
                 _DS1307_ReadData:
                 ; 0002 0036    uint8_t Data;
                 ; 0002 0037    I2CSOFT_Start();
0001af 931a      	ST   -Y,R17
                 ;	Address -> Y+1
                 ;	Data -> R17
0001b0 940e 0714 	CALL SUBOPT_0x4
                 ; 0002 0038    I2CSOFT_WriteData(DS1307_ADDR_WRITE);
                 ; 0002 0039    I2CSOFT_WriteData(Address);
0001b2 81e9      	LDD  R30,Y+1
0001b3 93ea      	ST   -Y,R30
0001b4 d063      	RCALL _I2CSOFT_WriteData
                 ; 0002 003A    I2CSOFT_Start();
0001b5 d04f      	RCALL _I2CSOFT_Start
                 ; 0002 003B    I2CSOFT_WriteData(DS1307_ADDR_READ);
0001b6 ede1      	LDI  R30,LOW(209)
0001b7 93ea      	ST   -Y,R30
0001b8 d05f      	RCALL _I2CSOFT_WriteData
                 ; 0002 003C    Data=I2CSOFT_ReadData(0);
0001b9 e0e0      	LDI  R30,LOW(0)
0001ba 93ea      	ST   -Y,R30
0001bb d087      	RCALL _I2CSOFT_ReadData
0001bc 2f1e      	MOV  R17,R30
                 ; 0002 003D    I2CSOFT_Stop();
0001bd d04d      	RCALL _I2CSOFT_Stop
                 ; 0002 003E    Data = ((Data>>4) * 10 + Data % 16);
0001be 2fe1      	MOV  R30,R17
0001bf e0f0      	LDI  R31,0
0001c0 940e 09ce 	CALL __ASRW4
0001c2 e0aa      	LDI  R26,LOW(10)
0001c3 02ea      	MULS R30,R26
0001c4 2d60      	MOV  R22,R0
0001c5 2fa1      	MOV  R26,R17
0001c6 27bb      	CLR  R27
0001c7 e1e0      	LDI  R30,LOW(16)
0001c8 e0f0      	LDI  R31,HIGH(16)
0001c9 940e 0a43 	CALL __MODW21
0001cb 0fe6      	ADD  R30,R22
0001cc 2f1e      	MOV  R17,R30
                 ; 0002 003F    return(Data);
0001cd c071      	RJMP _0x20A0008
                 ; 0002 0040 }
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Cho phep xuat xung vuong tren chan SQW/OUT.
                 ;Tham Bien   :   State=0: Khong cho phep xuat xung vuong.
                 ;                     =1: Cho phep xuat xung vuong.
                 ;			    Mode   : Thiet lap tan so xung vuong xuat ra.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void DS1307_SetControl(uint8_t State,uint8_t Mode)
                 ; 0002 004B {
                 _DS1307_SetControl:
                 ; 0002 004C     if(!State)
                 ;	State -> Y+1
                 ;	Mode -> Y+0
0001ce 81e9      	LDD  R30,Y+1
0001cf 30e0      	CPI  R30,0
0001d0 f421      	BRNE _0x40003
                 ; 0002 004D     {
                 ; 0002 004E         DS1307_WriteData(DS1307_ADDR_CONTROL,0x00);
0001d1 e0e7      	LDI  R30,LOW(7)
0001d2 93ea      	ST   -Y,R30
0001d3 e0e0      	LDI  R30,LOW(0)
0001d4 c003      	RJMP _0x40005
                 ; 0002 004F     }
                 ; 0002 0050     else
                 _0x40003:
                 ; 0002 0051     {
                 ; 0002 0052         DS1307_WriteData(DS1307_ADDR_CONTROL,Mode);
0001d5 e0e7      	LDI  R30,LOW(7)
0001d6 93ea      	ST   -Y,R30
0001d7 81e9      	LDD  R30,Y+1
                 _0x40005:
0001d8 93ea      	ST   -Y,R30
0001d9 dfb9      	RCALL _DS1307_WriteData
                 ; 0002 0053     }
                 ; 0002 0054 }
0001da c066      	RJMP _0x20A0007
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Ghi du lieu Thu/Ngay/Thang/Nam vao DS1307.
                 ;Tham Bien   :   Day   : Thu.
                 ;                Date  : Ngay.
                 ;                Month : Thang.
                 ;				Year  : Nam.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void DS1307_SetDate(uint8_t Day, uint8_t Date, uint8_t Month, uint8_t Year)
                 ; 0002 0060 {
                 ; 0002 0061     DS1307_WriteData(DS1307_ADDR_DAY,Day);
                 ;	Day -> Y+3
                 ;	Date -> Y+2
                 ;	Month -> Y+1
                 ;	Year -> Y+0
                 ; 0002 0062     DS1307_WriteData(DS1307_ADDR_DATE,Date);
                 ; 0002 0063     DS1307_WriteData(DS1307_ADDR_MONTH,Month);
                 ; 0002 0064     DS1307_WriteData(DS1307_ADDR_YEAR,Year);
                 ; 0002 0065 }
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Ghi du lieu Giay/Phut/Gio vao DS1307.
                 ;Tham Bien   :   Second : Giay.
                 ;                Minute : Phut.
                 ;				Hour   : Gio.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void DS1307_SetTime(uint8_t Hour, uint8_t Minute, uint8_t Second)
                 ; 0002 0070 {
                 _DS1307_SetTime:
                 ; 0002 0071     DS1307_WriteData(DS1307_ADDR_SECOND,Second);
                 ;	Hour -> Y+2
                 ;	Minute -> Y+1
                 ;	Second -> Y+0
0001db e0e0      	LDI  R30,LOW(0)
0001dc 93ea      	ST   -Y,R30
0001dd 81e9      	LDD  R30,Y+1
0001de 93ea      	ST   -Y,R30
0001df dfb3      	RCALL _DS1307_WriteData
                 ; 0002 0072     DS1307_WriteData(DS1307_ADDR_MINUTE,Minute);
0001e0 e0e1      	LDI  R30,LOW(1)
0001e1 93ea      	ST   -Y,R30
0001e2 81ea      	LDD  R30,Y+2
0001e3 93ea      	ST   -Y,R30
0001e4 dfae      	RCALL _DS1307_WriteData
                 ; 0002 0073     DS1307_WriteData(DS1307_ADDR_HOUR,Hour);
0001e5 e0e2      	LDI  R30,LOW(2)
0001e6 93ea      	ST   -Y,R30
0001e7 81eb      	LDD  R30,Y+3
0001e8 93ea      	ST   -Y,R30
0001e9 dfa9      	RCALL _DS1307_WriteData
                 ; 0002 0074 }
0001ea c07c      	RJMP _0x20A0006
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Doc du lieu Thu/Ngay/Thang/Nam tu DS1307.
                 ;Tham Bien   :   *Day   : Thu.
                 ;				*Date  : Ngay.
                 ;                *Month : Thang.
                 ;				*Year  : Nam.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void DS1307_GetDate(uint8_t *Day, uint8_t *Date, uint8_t *Month, uint8_t *Year)
                 ; 0002 0080 {
                 ; 0002 0081     *Day    =   DS1307_ReadData(DS1307_ADDR_DAY);
                 ;	*Day -> Y+6
                 ;	*Date -> Y+4
                 ;	*Month -> Y+2
                 ;	*Year -> Y+0
                 ; 0002 0082     *Date   =   DS1307_ReadData(DS1307_ADDR_DATE);
                 ; 0002 0083     *Month  =   DS1307_ReadData(DS1307_ADDR_MONTH);
                 ; 0002 0084     *Year   =   DS1307_ReadData(DS1307_ADDR_YEAR);
                 ; 0002 0085 }
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Doc du lieu Giay/Phut/Gio tu DS1307.
                 ;Tham Bien   :   *Second : Giay.
                 ;                *Minute : Phut.
                 ;				*Hour   : Gio.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void DS1307_GetTime(uint8_t *Hour, uint8_t* Minute, uint8_t* Second)
                 ; 0002 0090 {
                 _DS1307_GetTime:
                 ; 0002 0091     *Hour    =  DS1307_ReadData(DS1307_ADDR_HOUR);
                 ;	*Hour -> Y+4
                 ;	*Minute -> Y+2
                 ;	*Second -> Y+0
0001eb e0e2      	LDI  R30,LOW(2)
0001ec 93ea      	ST   -Y,R30
0001ed dfc1      	RCALL _DS1307_ReadData
0001ee 81ac      	LDD  R26,Y+4
0001ef 81bd      	LDD  R27,Y+4+1
0001f0 93ec      	ST   X,R30
                 ; 0002 0092     *Minute  =  DS1307_ReadData(DS1307_ADDR_MINUTE);
0001f1 e0e1      	LDI  R30,LOW(1)
0001f2 93ea      	ST   -Y,R30
0001f3 dfbb      	RCALL _DS1307_ReadData
0001f4 81aa      	LDD  R26,Y+2
0001f5 81bb      	LDD  R27,Y+2+1
0001f6 93ec      	ST   X,R30
                 ; 0002 0093     *Second  =  DS1307_ReadData(DS1307_ADDR_SECOND);
0001f7 e0e0      	LDI  R30,LOW(0)
0001f8 93ea      	ST   -Y,R30
0001f9 dfb5      	RCALL _DS1307_ReadData
0001fa 81a8      	LD   R26,Y
0001fb 81b9      	LDD  R27,Y+1
0001fc 93ec      	ST   X,R30
                 ; 0002 0094 }
0001fd 9626      	ADIW R28,6
0001fe 9508      	RET
                 ;
                 ;/*------------------------------KET THUC FILE-------------------------------
                 ; ______________________________MinhHa R&D Team______________________________*/
                 ;/*****************************************************************************
                 ;  *Ten Tep          :     i2c.c
                 ;  *Ngay             :     19/03/2014
                 ;  *Tac Gia          :     MinhHa R&D Team
                 ;  *Cong Ty          :     MinhHaGroup
                 ;  *Webside          :     mcu.banlinhkien.vn
                 ;  *Phien Ban        :     V1.0
                 ;  *Tom Tat          :     Dinh nghia cac ham giao tiep I2C
                 ;  ******************************************************************************
                 ;  * Chu Y           :     Phai dinh nghia cac chan giao tiep chuan I2C vao main.h
                 ;
                 ;        #define I2CSOFT_SDADDR  DDRC_4
                 ;        #define I2CSOFT_SDAOUT  PORTC_4
                 ;        #define I2CSOFT_SDAIN   PINC_4
                 ;        #define I2CSOFT_SCLDDR  DDRD_0
                 ;        #define I2CSOFT_SCL     PORTD_0
                 ;  ******************************************************************************
                 ;**/
                 ;
                 ;#include "User/Include/i2c.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;#if (__I2C_H!=19032014)
                 ;    #error "Include Sai File i2c.h"
                 ;#endif
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Khoi tao giao thuc I2C
                 ;Tham Bien   :   Khong.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void I2CSOFT_Init(void)
                 ; 0003 0021 {
                 
                 	.CSEG
                 _I2CSOFT_Init:
                 ; 0003 0022     I2CSOFT_SCLDDR=DDR_OUT;
0001ff 9aa0      	SBI  0x14,0
                 ; 0003 0023     I2CSOFT_SDADDR=DDR_OUT;
000200 9aa1      	SBI  0x14,1
                 ; 0003 0024     I2CSOFT_SCL=1;
000201 940e 071a 	CALL SUBOPT_0x5
                 ; 0003 0025     delay_us(5);
                 ; 0003 0026     I2CSOFT_SDAOUT=1;
000203 9aa9      	SBI  0x15,1
                 ; 0003 0027     delay_us(5);
000204 c00f      	RJMP _0x20A000A
                 ; 0003 0028 }
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Gui lenh Start I2C (Keo chan SDA xuong 0 khi SCL o muc 1).
                 ;Tham Bien   :   Khong.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void I2CSOFT_Start(void)
                 ; 0003 0031 {
                 _I2CSOFT_Start:
                 ; 0003 0032     I2CSOFT_SDADDR=DDR_OUT;
000205 9aa1      	SBI  0x14,1
                 ; 0003 0033     I2CSOFT_SDAOUT=1;
000206 9aa9      	SBI  0x15,1
                 ; 0003 0034     I2CSOFT_SCL=1;
000207 940e 071a 	CALL SUBOPT_0x5
                 ; 0003 0035     delay_us(5);
                 ; 0003 0036     I2CSOFT_SDAOUT=0;
000209 98a9      	CBI  0x15,1
                 ; 0003 0037     delay_us(5);
00020a c005      	RJMP _0x20A0009
                 ; 0003 0038     I2CSOFT_SCL=0;
                 ; 0003 0039     delay_us(5);
                 ; 0003 003A }
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Gui lenh Stop I2C (Keo chan SDA len muc 1 khi SCL o muc 1).
                 ;Tham Bien   :   Khong.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;void I2CSOFT_Stop(void)
                 ; 0003 0043 {
                 _I2CSOFT_Stop:
                 ; 0003 0044     I2CSOFT_SDADDR=DDR_OUT;
00020b 9aa1      	SBI  0x14,1
                 ; 0003 0045     I2CSOFT_SDAOUT=0;
00020c 98a9      	CBI  0x15,1
                 ; 0003 0046     I2CSOFT_SCL=1;
00020d 940e 071a 	CALL SUBOPT_0x5
                 ; 0003 0047     delay_us(5);
                 ; 0003 0048     I2CSOFT_SDAOUT=1;
00020f 9aa9      	SBI  0x15,1
                 ; 0003 0049     delay_us(5);
                 _0x20A0009:
                +
000210 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000211 958a     +DEC R24
000212 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ; 0003 004A     I2CSOFT_SCL=0;
000213 98a8      	CBI  0x15,0
                 ; 0003 004B     delay_us(5);
                 _0x20A000A:
                +
000214 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000215 958a     +DEC R24
000216 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ; 0003 004C }
000217 9508      	RET
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Viet du lieu len Bus I2C.
                 ;Tham Bien   :   Data: Gia tri du lieu.
                 ;Tra Ve      :   Khong.
                 ;********************************************************************************/
                 ;
                 ;uint8_t I2CSOFT_WriteData(uint8_t Data)
                 ; 0003 0055 {
                 _I2CSOFT_WriteData:
                 ; 0003 0056     uint8_t i;
                 ; 0003 0057     I2CSOFT_SDADDR=DDR_OUT;
000218 931a      	ST   -Y,R17
                 ;	Data -> Y+1
                 ;	i -> R17
000219 9aa1      	SBI  0x14,1
                 ; 0003 0058     for(i=0;i<8;i++)
00021a e010      	LDI  R17,LOW(0)
                 _0x60022:
00021b 3018      	CPI  R17,8
00021c f4a0      	BRSH _0x60023
                 ; 0003 0059     {
                 ; 0003 005A         if(Data&0x80)
00021d 81e9      	LDD  R30,Y+1
00021e 78e0      	ANDI R30,LOW(0x80)
00021f f011      	BREQ _0x60024
                 ; 0003 005B             I2CSOFT_SDAOUT=1;
000220 9aa9      	SBI  0x15,1
                 ; 0003 005C         else
000221 c001      	RJMP _0x60027
                 _0x60024:
                 ; 0003 005D             I2CSOFT_SDAOUT=0;
000222 98a9      	CBI  0x15,1
                 ; 0003 005E         Data<<=1;
                 _0x60027:
000223 81e9      	LDD  R30,Y+1
000224 0fee      	LSL  R30
000225 83e9      	STD  Y+1,R30
                 ; 0003 005F         delay_us(5);
                +
000226 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000227 958a     +DEC R24
000228 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ; 0003 0060         I2CSOFT_SCL=1;
000229 940e 071a 	CALL SUBOPT_0x5
                 ; 0003 0061         delay_us(5);
                 ; 0003 0062         I2CSOFT_SCL=0;
00022b 98a8      	CBI  0x15,0
                 ; 0003 0063         delay_us(5);
                +
00022c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00022d 958a     +DEC R24
00022e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ; 0003 0064     }
00022f 5f1f      	SUBI R17,-1
000230 cfea      	RJMP _0x60022
                 _0x60023:
                 ; 0003 0065     I2CSOFT_SDADDR=DDR_IN;
000231 98a1      	CBI  0x14,1
                 ; 0003 0066     I2CSOFT_SCL=1;
000232 940e 071a 	CALL SUBOPT_0x5
                 ; 0003 0067     delay_us(5);
                 ; 0003 0068     i=I2CSOFT_SDAIN;
000234 e0e0      	LDI  R30,0
000235 9999      	SBIC 0x13,1
000236 e0e1      	LDI  R30,1
000237 2f1e      	MOV  R17,R30
                 ; 0003 0069     delay_us(5);
                +
000238 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000239 958a     +DEC R24
00023a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ; 0003 006A     I2CSOFT_SCL=0;
00023b 98a8      	CBI  0x15,0
                 ; 0003 006B     delay_us(5);
                +
00023c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00023d 958a     +DEC R24
00023e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ; 0003 006C     return i;
                 _0x20A0008:
00023f 2fe1      	MOV  R30,R17
000240 8118      	LDD  R17,Y+0
                 _0x20A0007:
000241 9622      	ADIW R28,2
000242 9508      	RET
                 ; 0003 006D }
                 ;
                 ;/*******************************************************************************
                 ;Noi Dung    :   Lay du lieu tren Bus I2C.
                 ;Tham Bien   :   Ack:
                 ;Tra Ve      :   Gia tri du lieu.
                 ;********************************************************************************/
                 ;
                 ;uint8_t I2CSOFT_ReadData(uint8_t Ack)
                 ; 0003 0076 {
                 _I2CSOFT_ReadData:
                 ; 0003 0077     uint8_t I2C_Data=0,i;
                 ; 0003 0078     I2CSOFT_SDADDR=DDR_IN;
000243 931a      	ST   -Y,R17
000244 930a      	ST   -Y,R16
                 ;	Ack -> Y+2
                 ;	I2C_Data -> R17
                 ;	i -> R16
000245 e010      	LDI  R17,0
000246 98a1      	CBI  0x14,1
                 ; 0003 0079     for(i=0;i<8;i++)
000247 e000      	LDI  R16,LOW(0)
                 _0x60037:
000248 3008      	CPI  R16,8
000249 f468      	BRSH _0x60038
                 ; 0003 007A     {
                 ; 0003 007B         I2CSOFT_SCL=1;
00024a 9aa8      	SBI  0x15,0
                 ; 0003 007C         delay_us(10);
                +
00024b e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00024c 958a     +DEC R24
00024d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0003 007D         I2C_Data<<=1;
00024e 0f11      	LSL  R17
                 ; 0003 007E         if(I2CSOFT_SDAIN)I2C_Data|=1;
00024f 9999      	SBIC 0x13,1
000250 6011      	ORI  R17,LOW(1)
                 ; 0003 007F         delay_us(10);
                +
000251 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000252 958a     +DEC R24
000253 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0003 0080         I2CSOFT_SCL=0;
000254 98a8      	CBI  0x15,0
                 ; 0003 0081     }
000255 5f0f      	SUBI R16,-1
000256 cff1      	RJMP _0x60037
                 _0x60038:
                 ; 0003 0082     I2CSOFT_SDADDR=DDR_OUT;
000257 9aa1      	SBI  0x14,1
                 ; 0003 0083     I2CSOFT_SCL=1;
000258 940e 071a 	CALL SUBOPT_0x5
                 ; 0003 0084     delay_us(5);
                 ; 0003 0085     I2CSOFT_SDAOUT=Ack;
00025a 81ea      	LDD  R30,Y+2
00025b 30e0      	CPI  R30,0
00025c f411      	BRNE _0x60042
00025d 98a9      	CBI  0x15,1
00025e c001      	RJMP _0x60043
                 _0x60042:
00025f 9aa9      	SBI  0x15,1
                 _0x60043:
                 ; 0003 0086     delay_us(5);
                +
000260 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000261 958a     +DEC R24
000262 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ; 0003 0087     I2CSOFT_SCL=0;
000263 98a8      	CBI  0x15,0
                 ; 0003 0088     return I2C_Data;
000264 2fe1      	MOV  R30,R17
000265 8119      	LDD  R17,Y+1
000266 8108      	LDD  R16,Y+0
                 _0x20A0006:
000267 9623      	ADIW R28,3
000268 9508      	RET
                 ; 0003 0089 }
                 ;
                 ;/*------------------------------KET THUC FILE-------------------------------
                 ; ______________________________MinhHa R&D Team______________________________*/
                 
                 	.CSEG
                 _strcpyf:
000269 91e9          ld   r30,y+
00026a 91f9          ld   r31,y+
00026b 91a9          ld   r26,y+
00026c 91b9          ld   r27,y+
00026d 01cd          movw r24,r26
                 strcpyf0:
00026e 9005      	lpm  r0,z+
00026f 920d          st   x+,r0
000270 2000          tst  r0
000271 f7e1          brne strcpyf0
000272 01fc          movw r30,r24
000273 9508          ret
                 _strlen:
000274 91a9          ld   r26,y+
000275 91b9          ld   r27,y+
000276 27ee          clr  r30
000277 27ff          clr  r31
                 strlen0:
000278 916d          ld   r22,x+
000279 2366          tst  r22
00027a f011          breq strlen1
00027b 9631          adiw r30,1
00027c cffb          rjmp strlen0
                 strlen1:
00027d 9508          ret
                 _strlenf:
00027e 27aa          clr  r26
00027f 27bb          clr  r27
000280 91e9          ld   r30,y+
000281 91f9          ld   r31,y+
                 strlenf0:
000282 9005      	lpm  r0,z+
000283 2000          tst  r0
000284 f011          breq strlenf1
000285 9611          adiw r26,1
000286 cffb          rjmp strlenf0
                 strlenf1:
000287 01fd          movw r30,r26
000288 9508          ret
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftoa:
000289 9724      	SBIW R28,4
00028a e0e0      	LDI  R30,LOW(0)
00028b 83e8      	ST   Y,R30
00028c 83e9      	STD  Y+1,R30
00028d 83ea      	STD  Y+2,R30
00028e e3ef      	LDI  R30,LOW(63)
00028f 83eb      	STD  Y+3,R30
000290 931a      	ST   -Y,R17
000291 930a      	ST   -Y,R16
000292 85eb      	LDD  R30,Y+11
000293 85fc      	LDD  R31,Y+11+1
000294 3fef      	CPI  R30,LOW(0xFFFF)
000295 efaf      	LDI  R26,HIGH(0xFFFF)
000296 07fa      	CPC  R31,R26
000297 f439      	BRNE _0x204000D
000298 940e 071f 	CALL SUBOPT_0x6
                +
00029a e7ea     +LDI R30 , LOW ( 2 * _0x2040000 + ( 0 ) )
00029b e0f0     +LDI R31 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW1FN _0x2040000,0
00029c 940e 0724 	CALL SUBOPT_0x7
00029e c0a7      	RJMP _0x20A0005
                 _0x204000D:
00029f 3fef      	CPI  R30,LOW(0x7FFF)
0002a0 e7af      	LDI  R26,HIGH(0x7FFF)
0002a1 07fa      	CPC  R31,R26
0002a2 f439      	BRNE _0x204000C
0002a3 940e 071f 	CALL SUBOPT_0x6
                +
0002a5 e7eb     +LDI R30 , LOW ( 2 * _0x2040000 + ( 1 ) )
0002a6 e0f0     +LDI R31 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW1FN _0x2040000,1
0002a7 940e 0724 	CALL SUBOPT_0x7
0002a9 c09c      	RJMP _0x20A0005
                 _0x204000C:
0002aa 85ac      	LDD  R26,Y+12
0002ab 23aa      	TST  R26
0002ac f462      	BRPL _0x204000F
                +
0002ad 85e9     +LDD R30 , Y + 9
0002ae 85fa     +LDD R31 , Y + 9 + 1
0002af 856b     +LDD R22 , Y + 9 + 2
0002b0 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0002b1 940e 0815 	CALL __ANEGF1
0002b3 940e 0728 	CALL SUBOPT_0x8
0002b5 940e 072d 	CALL SUBOPT_0x9
0002b7 e2ed      	LDI  R30,LOW(45)
0002b8 93ec      	ST   X,R30
                 _0x204000F:
0002b9 85a8      	LDD  R26,Y+8
0002ba 30a7      	CPI  R26,LOW(0x7)
0002bb f010      	BRLO _0x2040010
0002bc e0e6      	LDI  R30,LOW(6)
0002bd 87e8      	STD  Y+8,R30
                 _0x2040010:
0002be 8518      	LDD  R17,Y+8
                 _0x2040011:
0002bf 2fe1      	MOV  R30,R17
0002c0 5011      	SUBI R17,1
0002c1 30e0      	CPI  R30,0
0002c2 f039      	BREQ _0x2040013
0002c3 940e 0734 	CALL SUBOPT_0xA
0002c5 940e 0739 	CALL SUBOPT_0xB
0002c7 940e 0740 	CALL SUBOPT_0xC
0002c9 cff5      	RJMP _0x2040011
                 _0x2040013:
0002ca 940e 0745 	CALL SUBOPT_0xD
0002cc 940e 08bb 	CALL __ADDF12
0002ce 940e 0728 	CALL SUBOPT_0x8
0002d0 e010      	LDI  R17,LOW(0)
                +
0002d1 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0002d2 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0002d3 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0002d4 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0002d5 940e 0740 	CALL SUBOPT_0xC
                 _0x2040014:
0002d7 940e 0745 	CALL SUBOPT_0xD
0002d9 940e 099e 	CALL __CMPF12
0002db f088      	BRLO _0x2040016
0002dc 940e 0734 	CALL SUBOPT_0xA
0002de 940e 074e 	CALL SUBOPT_0xE
0002e0 940e 0740 	CALL SUBOPT_0xC
0002e2 5f1f      	SUBI R17,-LOW(1)
0002e3 3217      	CPI  R17,39
0002e4 f038      	BRLO _0x2040017
0002e5 940e 071f 	CALL SUBOPT_0x6
                +
0002e7 e7ef     +LDI R30 , LOW ( 2 * _0x2040000 + ( 5 ) )
0002e8 e0f0     +LDI R31 , HIGH ( 2 * _0x2040000 + ( 5 ) )
                 	__POINTW1FN _0x2040000,5
0002e9 940e 0724 	CALL SUBOPT_0x7
0002eb c05a      	RJMP _0x20A0005
                 _0x2040017:
0002ec cfea      	RJMP _0x2040014
                 _0x2040016:
0002ed 3010      	CPI  R17,0
0002ee f429      	BRNE _0x2040018
0002ef 940e 072d 	CALL SUBOPT_0x9
0002f1 e3e0      	LDI  R30,LOW(48)
0002f2 93ec      	ST   X,R30
0002f3 c028      	RJMP _0x2040019
                 _0x2040018:
                 _0x204001A:
0002f4 2fe1      	MOV  R30,R17
0002f5 5011      	SUBI R17,1
0002f6 30e0      	CPI  R30,0
0002f7 f121      	BREQ _0x204001C
0002f8 940e 0734 	CALL SUBOPT_0xA
0002fa 940e 0739 	CALL SUBOPT_0xB
0002fc 940e 0755 	CALL SUBOPT_0xF
0002fe 940e 0a83 	CALL __PUTPARD1
000300 940e 06ee 	CALL _floor
000302 940e 0740 	CALL SUBOPT_0xC
000304 940e 0745 	CALL SUBOPT_0xD
000306 940e 0959 	CALL __DIVF21
000308 940e 0848 	CALL __CFD1U
00030a 2f0e      	MOV  R16,R30
00030b 940e 072d 	CALL SUBOPT_0x9
00030d 940e 075c 	CALL SUBOPT_0x10
00030f 940e 0734 	CALL SUBOPT_0xA
000311 940e 09dd 	CALL __CWD1
000313 940e 0881 	CALL __CDF1
000315 940e 090b 	CALL __MULF12
000317 940e 0762 	CALL SUBOPT_0x11
000319 940e 0767 	CALL SUBOPT_0x12
00031b cfd8      	RJMP _0x204001A
                 _0x204001C:
                 _0x2040019:
00031c 85e8      	LDD  R30,Y+8
00031d 30e0      	CPI  R30,0
00031e f119      	BREQ _0x20A0004
00031f 940e 072d 	CALL SUBOPT_0x9
000321 e2ee      	LDI  R30,LOW(46)
000322 93ec      	ST   X,R30
                 _0x204001E:
000323 85e8      	LDD  R30,Y+8
000324 50e1      	SUBI R30,LOW(1)
000325 87e8      	STD  Y+8,R30
000326 5fef      	SUBI R30,-LOW(1)
000327 f0d1      	BREQ _0x2040020
000328 940e 0762 	CALL SUBOPT_0x11
00032a 940e 074e 	CALL SUBOPT_0xE
00032c 940e 0728 	CALL SUBOPT_0x8
                +
00032e 85e9     +LDD R30 , Y + 9
00032f 85fa     +LDD R31 , Y + 9 + 1
000330 856b     +LDD R22 , Y + 9 + 2
000331 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000332 940e 0848 	CALL __CFD1U
000334 2f0e      	MOV  R16,R30
000335 940e 072d 	CALL SUBOPT_0x9
000337 940e 075c 	CALL SUBOPT_0x10
000339 940e 0762 	CALL SUBOPT_0x11
00033b 940e 09dd 	CALL __CWD1
00033d 940e 0881 	CALL __CDF1
00033f 940e 0767 	CALL SUBOPT_0x12
000341 cfe1      	RJMP _0x204001E
                 _0x2040020:
                 _0x20A0004:
000342 81ae      	LDD  R26,Y+6
000343 81bf      	LDD  R27,Y+6+1
000344 e0e0      	LDI  R30,LOW(0)
000345 93ec      	ST   X,R30
                 _0x20A0005:
000346 8119      	LDD  R17,Y+1
000347 8108      	LDD  R16,Y+0
000348 962d      	ADIW R28,13
000349 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G103:
00034a 931a      	ST   -Y,R17
00034b 930a      	ST   -Y,R16
00034c 81aa      	LDD  R26,Y+2
00034d 81bb      	LDD  R27,Y+2+1
00034e 9612      	ADIW R26,2
00034f 940e 0a6f 	CALL __GETW1P
000351 9730      	SBIW R30,0
000352 f129      	BREQ _0x2060010
000353 81aa      	LDD  R26,Y+2
000354 81bb      	LDD  R27,Y+2+1
000355 9614      	ADIW R26,4
000356 940e 0a6f 	CALL __GETW1P
000358 018f      	MOVW R16,R30
000359 9730      	SBIW R30,0
00035a f061      	BREQ _0x2060012
                +
00035b 3002     +CPI R16 , LOW ( 2 )
00035c e0e0     +LDI R30 , HIGH ( 2 )
00035d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00035e f0c0      	BRLO _0x2060013
00035f 01f8      	MOVW R30,R16
000360 9731      	SBIW R30,1
000361 018f      	MOVW R16,R30
                +
000362 81aa     +LDD R26 , Y + 2
000363 81bb     +LDD R27 , Y + 2 + 1
000364 9614     +ADIW R26 , 4
000365 93ed     +ST X + , R30
000366 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2060012:
000367 81aa      	LDD  R26,Y+2
000368 81bb      	LDD  R27,Y+2+1
000369 9612      	ADIW R26,2
00036a 940e 076c 	CALL SUBOPT_0x13
00036c 9731      	SBIW R30,1
00036d 81ac      	LDD  R26,Y+4
00036e 83a0      	STD  Z+0,R26
00036f 81aa      	LDD  R26,Y+2
000370 81bb      	LDD  R27,Y+2+1
000371 940e 0a6f 	CALL __GETW1P
000373 23ff      	TST  R31
000374 f012      	BRMI _0x2060014
000375 940e 076c 	CALL SUBOPT_0x13
                 _0x2060014:
                 _0x2060013:
000377 c006      	RJMP _0x2060015
                 _0x2060010:
000378 81aa      	LDD  R26,Y+2
000379 81bb      	LDD  R27,Y+2+1
00037a efef      	LDI  R30,LOW(65535)
00037b efff      	LDI  R31,HIGH(65535)
00037c 93ed      	ST   X+,R30
00037d 93fc      	ST   X,R31
                 _0x2060015:
00037e 8119      	LDD  R17,Y+1
00037f 8108      	LDD  R16,Y+0
000380 9625      	ADIW R28,5
000381 9508      	RET
                 __ftoe_G103:
000382 9724      	SBIW R28,4
000383 e0e0      	LDI  R30,LOW(0)
000384 83e8      	ST   Y,R30
000385 83e9      	STD  Y+1,R30
000386 e8e0      	LDI  R30,LOW(128)
000387 83ea      	STD  Y+2,R30
000388 e3ef      	LDI  R30,LOW(63)
000389 83eb      	STD  Y+3,R30
00038a 940e 0ab8 	CALL __SAVELOCR4
00038c 85ee      	LDD  R30,Y+14
00038d 85ff      	LDD  R31,Y+14+1
00038e 3fef      	CPI  R30,LOW(0xFFFF)
00038f efaf      	LDI  R26,HIGH(0xFFFF)
000390 07fa      	CPC  R31,R26
000391 f449      	BRNE _0x2060019
000392 85e8      	LDD  R30,Y+8
000393 85f9      	LDD  R31,Y+8+1
000394 93fa      	ST   -Y,R31
000395 93ea      	ST   -Y,R30
                +
000396 e8e4     +LDI R30 , LOW ( 2 * _0x2060000 + ( 0 ) )
000397 e0f0     +LDI R31 , HIGH ( 2 * _0x2060000 + ( 0 ) )
                 	__POINTW1FN _0x2060000,0
000398 940e 0724 	CALL SUBOPT_0x7
00039a c0cc      	RJMP _0x20A0003
                 _0x2060019:
00039b 3fef      	CPI  R30,LOW(0x7FFF)
00039c e7af      	LDI  R26,HIGH(0x7FFF)
00039d 07fa      	CPC  R31,R26
00039e f449      	BRNE _0x2060018
00039f 85e8      	LDD  R30,Y+8
0003a0 85f9      	LDD  R31,Y+8+1
0003a1 93fa      	ST   -Y,R31
0003a2 93ea      	ST   -Y,R30
                +
0003a3 e8e5     +LDI R30 , LOW ( 2 * _0x2060000 + ( 1 ) )
0003a4 e0f0     +LDI R31 , HIGH ( 2 * _0x2060000 + ( 1 ) )
                 	__POINTW1FN _0x2060000,1
0003a5 940e 0724 	CALL SUBOPT_0x7
0003a7 c0bf      	RJMP _0x20A0003
                 _0x2060018:
0003a8 85ab      	LDD  R26,Y+11
0003a9 30a7      	CPI  R26,LOW(0x7)
0003aa f010      	BRLO _0x206001B
0003ab e0e6      	LDI  R30,LOW(6)
0003ac 87eb      	STD  Y+11,R30
                 _0x206001B:
0003ad 851b      	LDD  R17,Y+11
                 _0x206001C:
0003ae 2fe1      	MOV  R30,R17
0003af 5011      	SUBI R17,1
0003b0 30e0      	CPI  R30,0
0003b1 f029      	BREQ _0x206001E
0003b2 940e 0772 	CALL SUBOPT_0x14
0003b4 940e 0777 	CALL SUBOPT_0x15
0003b6 cff7      	RJMP _0x206001C
                 _0x206001E:
                +
0003b7 85ec     +LDD R30 , Y + 12
0003b8 85fd     +LDD R31 , Y + 12 + 1
0003b9 856e     +LDD R22 , Y + 12 + 2
0003ba 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0003bb 940e 0ab2 	CALL __CPD10
0003bd f431      	BRNE _0x206001F
0003be e030      	LDI  R19,LOW(0)
0003bf 940e 0772 	CALL SUBOPT_0x14
0003c1 940e 0777 	CALL SUBOPT_0x15
0003c3 c038      	RJMP _0x2060020
                 _0x206001F:
0003c4 853b      	LDD  R19,Y+11
0003c5 940e 077c 	CALL SUBOPT_0x16
0003c7 f009      	BREQ PC+2
0003c8 f410      	BRCC PC+3
0003c9 940c 03db 	JMP  _0x2060021
0003cb 940e 0772 	CALL SUBOPT_0x14
0003cd 940e 0777 	CALL SUBOPT_0x15
                 _0x2060022:
0003cf 940e 077c 	CALL SUBOPT_0x16
0003d1 f040      	BRLO _0x2060024
0003d2 940e 0787 	CALL SUBOPT_0x17
0003d4 940e 0739 	CALL SUBOPT_0xB
0003d6 940e 078c 	CALL SUBOPT_0x18
0003d8 5f3f      	SUBI R19,-LOW(1)
0003d9 cff5      	RJMP _0x2060022
                 _0x2060024:
0003da c00f      	RJMP _0x2060025
                 _0x2060021:
                 _0x2060026:
0003db 940e 077c 	CALL SUBOPT_0x16
0003dd f440      	BRSH _0x2060028
0003de 940e 0787 	CALL SUBOPT_0x17
0003e0 940e 074e 	CALL SUBOPT_0xE
0003e2 940e 078c 	CALL SUBOPT_0x18
0003e4 5031      	SUBI R19,LOW(1)
0003e5 cff5      	RJMP _0x2060026
                 _0x2060028:
0003e6 940e 0772 	CALL SUBOPT_0x14
0003e8 940e 0777 	CALL SUBOPT_0x15
                 _0x2060025:
                +
0003ea 85ec     +LDD R30 , Y + 12
0003eb 85fd     +LDD R31 , Y + 12 + 1
0003ec 856e     +LDD R22 , Y + 12 + 2
0003ed 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0003ee 940e 0755 	CALL SUBOPT_0xF
0003f0 940e 078c 	CALL SUBOPT_0x18
0003f2 940e 077c 	CALL SUBOPT_0x16
0003f4 f038      	BRLO _0x2060029
0003f5 940e 0787 	CALL SUBOPT_0x17
0003f7 940e 0739 	CALL SUBOPT_0xB
0003f9 940e 078c 	CALL SUBOPT_0x18
0003fb 5f3f      	SUBI R19,-LOW(1)
                 _0x2060029:
                 _0x2060020:
0003fc e010      	LDI  R17,LOW(0)
                 _0x206002A:
0003fd 85eb      	LDD  R30,Y+11
0003fe 17e1      	CP   R30,R17
0003ff f1d8      	BRLO _0x206002C
                +
000400 81ac     +LDD R26 , Y + 4
000401 81bd     +LDD R27 , Y + 4 + 1
000402 818e     +LDD R24 , Y + 4 + 2
000403 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000404 940e 0739 	CALL SUBOPT_0xB
000406 940e 0755 	CALL SUBOPT_0xF
000408 940e 0a83 	CALL __PUTPARD1
00040a 940e 06ee 	CALL _floor
00040c 940e 0777 	CALL SUBOPT_0x15
                +
00040e 81ec     +LDD R30 , Y + 4
00040f 81fd     +LDD R31 , Y + 4 + 1
000410 816e     +LDD R22 , Y + 4 + 2
000411 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000412 940e 0787 	CALL SUBOPT_0x17
000414 940e 0959 	CALL __DIVF21
000416 940e 0848 	CALL __CFD1U
000418 2f0e      	MOV  R16,R30
000419 940e 0791 	CALL SUBOPT_0x19
00041b 2fe0      	MOV  R30,R16
00041c 5de0      	SUBI R30,-LOW(48)
00041d 93ec      	ST   X,R30
00041e 2fe0      	MOV  R30,R16
00041f 27ff      	CLR  R31
000420 2766      	CLR  R22
000421 2777      	CLR  R23
000422 940e 0881 	CALL __CDF1
                +
000424 81ac     +LDD R26 , Y + 4
000425 81bd     +LDD R27 , Y + 4 + 1
000426 818e     +LDD R24 , Y + 4 + 2
000427 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000428 940e 090b 	CALL __MULF12
00042a 940e 0787 	CALL SUBOPT_0x17
00042c 940e 0a88 	CALL __SWAPD12
00042e 940e 08b4 	CALL __SUBF12
000430 940e 078c 	CALL SUBOPT_0x18
000432 2fe1      	MOV  R30,R17
000433 5f1f      	SUBI R17,-1
000434 30e0      	CPI  R30,0
000435 f639      	BRNE _0x206002A
000436 940e 0791 	CALL SUBOPT_0x19
000438 e2ee      	LDI  R30,LOW(46)
000439 93ec      	ST   X,R30
00043a cfc2      	RJMP _0x206002A
                 _0x206002C:
00043b 940e 0798 	CALL SUBOPT_0x1A
00043d 9731      	SBIW R30,1
00043e 85aa      	LDD  R26,Y+10
00043f 83a0      	STD  Z+0,R26
000440 3030      	CPI  R19,0
000441 f42c      	BRGE _0x206002E
000442 9531      	NEG  R19
000443 85a8      	LDD  R26,Y+8
000444 85b9      	LDD  R27,Y+8+1
000445 e2ed      	LDI  R30,LOW(45)
000446 c003      	RJMP _0x2060111
                 _0x206002E:
000447 85a8      	LDD  R26,Y+8
000448 85b9      	LDD  R27,Y+8+1
000449 e2eb      	LDI  R30,LOW(43)
                 _0x2060111:
00044a 93ec      	ST   X,R30
00044b 940e 0798 	CALL SUBOPT_0x1A
00044d 940e 0798 	CALL SUBOPT_0x1A
00044f 9731      	SBIW R30,1
000450 01bf      	MOVW R22,R30
000451 2fa3      	MOV  R26,R19
000452 e0ea      	LDI  R30,LOW(10)
000453 940e 09f5 	CALL __DIVB21
000455 5de0      	SUBI R30,-LOW(48)
000456 01db      	MOVW R26,R22
000457 93ec      	ST   X,R30
000458 940e 0798 	CALL SUBOPT_0x1A
00045a 9731      	SBIW R30,1
00045b 01bf      	MOVW R22,R30
00045c 2fa3      	MOV  R26,R19
00045d e0ea      	LDI  R30,LOW(10)
00045e 940e 0a37 	CALL __MODB21
000460 5de0      	SUBI R30,-LOW(48)
000461 01db      	MOVW R26,R22
000462 93ec      	ST   X,R30
000463 85a8      	LDD  R26,Y+8
000464 85b9      	LDD  R27,Y+8+1
000465 e0e0      	LDI  R30,LOW(0)
000466 93ec      	ST   X,R30
                 _0x20A0003:
000467 940e 0abf 	CALL __LOADLOCR4
000469 9660      	ADIW R28,16
00046a 9508      	RET
                 __print_G103:
00046b 97ef      	SBIW R28,63
00046c 9761      	SBIW R28,17
00046d 940e 0ab6 	CALL __SAVELOCR6
00046f e010      	LDI  R17,0
                +
000470 01fe     +MOVW R30 , R28
000471 5ae8     +SUBI R30 , LOW ( - 88 )
000472 4fff     +SBCI R31 , HIGH ( - 88 )
000473 9001     +LD R0 , Z +
000474 81f0     +LD R31 , Z
000475 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000476 87e8      	STD  Y+8,R30
000477 87f9      	STD  Y+8+1,R31
                +
000478 01fe     +MOVW R30 , R28
000479 5aea     +SUBI R30 , LOW ( - 86 )
00047a 4fff     +SBCI R31 , HIGH ( - 86 )
00047b 9001     +LD R0 , Z +
00047c 81f0     +LD R31 , Z
00047d 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00047e 83ee      	STD  Y+6,R30
00047f 83ff      	STD  Y+6+1,R31
000480 81ae      	LDD  R26,Y+6
000481 81bf      	LDD  R27,Y+6+1
000482 e0e0      	LDI  R30,LOW(0)
000483 e0f0      	LDI  R31,HIGH(0)
000484 93ed      	ST   X+,R30
000485 93fc      	ST   X,R31
                 _0x2060030:
000486 01de      	MOVW R26,R28
000487 5aa4      	SUBI R26,LOW(-(92))
000488 4fbf      	SBCI R27,HIGH(-(92))
000489 940e 076c 	CALL SUBOPT_0x13
00048b 9731      	SBIW R30,1
00048c 91e4      	LPM  R30,Z
00048d 2f2e      	MOV  R18,R30
00048e 30e0      	CPI  R30,0
00048f f411      	BRNE PC+3
000490 940c 0680 	JMP _0x2060032
000492 2fe1      	MOV  R30,R17
000493 30e0      	CPI  R30,0
000494 f439      	BRNE _0x2060036
000495 3225      	CPI  R18,37
000496 f411      	BRNE _0x2060037
000497 e011      	LDI  R17,LOW(1)
000498 c002      	RJMP _0x2060038
                 _0x2060037:
000499 940e 079e 	CALL SUBOPT_0x1B
                 _0x2060038:
00049b c1e3      	RJMP _0x2060035
                 _0x2060036:
00049c 30e1      	CPI  R30,LOW(0x1)
00049d f4c1      	BRNE _0x2060039
00049e 3225      	CPI  R18,37
00049f f419      	BRNE _0x206003A
0004a0 940e 079e 	CALL SUBOPT_0x1B
0004a2 c1db      	RJMP _0x2060112
                 _0x206003A:
0004a3 e012      	LDI  R17,LOW(2)
0004a4 e0e0      	LDI  R30,LOW(0)
0004a5 8bed      	STD  Y+21,R30
0004a6 e000      	LDI  R16,LOW(0)
0004a7 322d      	CPI  R18,45
0004a8 f411      	BRNE _0x206003B
0004a9 e001      	LDI  R16,LOW(1)
0004aa c1d4      	RJMP _0x2060035
                 _0x206003B:
0004ab 322b      	CPI  R18,43
0004ac f419      	BRNE _0x206003C
0004ad e2eb      	LDI  R30,LOW(43)
0004ae 8bed      	STD  Y+21,R30
0004af c1cf      	RJMP _0x2060035
                 _0x206003C:
0004b0 3220      	CPI  R18,32
0004b1 f419      	BRNE _0x206003D
0004b2 e2e0      	LDI  R30,LOW(32)
0004b3 8bed      	STD  Y+21,R30
0004b4 c1ca      	RJMP _0x2060035
                 _0x206003D:
0004b5 c002      	RJMP _0x206003E
                 _0x2060039:
0004b6 30e2      	CPI  R30,LOW(0x2)
0004b7 f439      	BRNE _0x206003F
                 _0x206003E:
0004b8 e050      	LDI  R21,LOW(0)
0004b9 e013      	LDI  R17,LOW(3)
0004ba 3320      	CPI  R18,48
0004bb f411      	BRNE _0x2060040
0004bc 6800      	ORI  R16,LOW(128)
0004bd c1c1      	RJMP _0x2060035
                 _0x2060040:
0004be c002      	RJMP _0x2060041
                 _0x206003F:
0004bf 30e3      	CPI  R30,LOW(0x3)
0004c0 f491      	BRNE _0x2060042
                 _0x2060041:
0004c1 3320      	CPI  R18,48
0004c2 f010      	BRLO _0x2060044
0004c3 332a      	CPI  R18,58
0004c4 f008      	BRLO _0x2060045
                 _0x2060044:
0004c5 c007      	RJMP _0x2060043
                 _0x2060045:
0004c6 e0aa      	LDI  R26,LOW(10)
0004c7 9f5a      	MUL  R21,R26
0004c8 2d50      	MOV  R21,R0
0004c9 2fe2      	MOV  R30,R18
0004ca 53e0      	SUBI R30,LOW(48)
0004cb 0f5e      	ADD  R21,R30
0004cc c1b2      	RJMP _0x2060035
                 _0x2060043:
0004cd e040      	LDI  R20,LOW(0)
0004ce 322e      	CPI  R18,46
0004cf f411      	BRNE _0x2060046
0004d0 e014      	LDI  R17,LOW(4)
0004d1 c1ad      	RJMP _0x2060035
                 _0x2060046:
0004d2 c00f      	RJMP _0x2060047
                 _0x2060042:
0004d3 30e4      	CPI  R30,LOW(0x4)
0004d4 f499      	BRNE _0x2060049
0004d5 3320      	CPI  R18,48
0004d6 f010      	BRLO _0x206004B
0004d7 332a      	CPI  R18,58
0004d8 f008      	BRLO _0x206004C
                 _0x206004B:
0004d9 c008      	RJMP _0x206004A
                 _0x206004C:
0004da 6200      	ORI  R16,LOW(32)
0004db e0aa      	LDI  R26,LOW(10)
0004dc 9f4a      	MUL  R20,R26
0004dd 2d40      	MOV  R20,R0
0004de 2fe2      	MOV  R30,R18
0004df 53e0      	SUBI R30,LOW(48)
0004e0 0f4e      	ADD  R20,R30
0004e1 c19d      	RJMP _0x2060035
                 _0x206004A:
                 _0x2060047:
0004e2 362c      	CPI  R18,108
0004e3 f419      	BRNE _0x206004D
0004e4 6002      	ORI  R16,LOW(2)
0004e5 e015      	LDI  R17,LOW(5)
0004e6 c198      	RJMP _0x2060035
                 _0x206004D:
0004e7 c004      	RJMP _0x206004E
                 _0x2060049:
0004e8 30e5      	CPI  R30,LOW(0x5)
0004e9 f011      	BREQ PC+3
0004ea 940c 067f 	JMP _0x2060035
                 _0x206004E:
0004ec 2fe2      	MOV  R30,R18
0004ed 36e3      	CPI  R30,LOW(0x63)
0004ee f459      	BRNE _0x2060053
0004ef 940e 07a7 	CALL SUBOPT_0x1C
0004f1 940e 07ae 	CALL SUBOPT_0x1D
0004f3 940e 07a7 	CALL SUBOPT_0x1C
0004f5 81a4      	LDD  R26,Z+4
0004f6 93aa      	ST   -Y,R26
0004f7 940e 07b5 	CALL SUBOPT_0x1E
0004f9 c184      	RJMP _0x2060054
                 _0x2060053:
0004fa 34e5      	CPI  R30,LOW(0x45)
0004fb f011      	BREQ _0x2060057
0004fc 36e5      	CPI  R30,LOW(0x65)
0004fd f409      	BRNE _0x2060058
                 _0x2060057:
0004fe c004      	RJMP _0x2060059
                 _0x2060058:
0004ff 36e6      	CPI  R30,LOW(0x66)
000500 f011      	BREQ PC+3
000501 940c 054d 	JMP _0x206005A
                 _0x2060059:
000503 01fe      	MOVW R30,R28
000504 9676      	ADIW R30,22
000505 87ee      	STD  Y+14,R30
000506 87ff      	STD  Y+14+1,R31
000507 940e 07bd 	CALL SUBOPT_0x1F
000509 940e 0a73 	CALL __GETD1P
00050b 940e 07c4 	CALL SUBOPT_0x20
00050d 940e 07c9 	CALL SUBOPT_0x21
00050f 85ad      	LDD  R26,Y+13
000510 23aa      	TST  R26
000511 f022      	BRMI _0x206005B
000512 89ad      	LDD  R26,Y+21
000513 32ab      	CPI  R26,LOW(0x2B)
000514 f049      	BREQ _0x206005D
000515 c017      	RJMP _0x206005E
                 _0x206005B:
000516 940e 07cb 	CALL SUBOPT_0x22
000518 940e 0815 	CALL __ANEGF1
00051a 940e 07c4 	CALL SUBOPT_0x20
00051c e2ed      	LDI  R30,LOW(45)
00051d 8bed      	STD  Y+21,R30
                 _0x206005D:
00051e ff07      	SBRS R16,7
00051f c005      	RJMP _0x206005F
000520 89ed      	LDD  R30,Y+21
000521 93ea      	ST   -Y,R30
000522 940e 07b5 	CALL SUBOPT_0x1E
000524 c008      	RJMP _0x2060060
                 _0x206005F:
000525 85ee      	LDD  R30,Y+14
000526 85ff      	LDD  R31,Y+14+1
000527 9631      	ADIW R30,1
000528 87ee      	STD  Y+14,R30
000529 87ff      	STD  Y+14+1,R31
00052a 9731      	SBIW R30,1
00052b 89ad      	LDD  R26,Y+21
00052c 83a0      	STD  Z+0,R26
                 _0x2060060:
                 _0x206005E:
00052d ff05      	SBRS R16,5
00052e e046      	LDI  R20,LOW(6)
00052f 3626      	CPI  R18,102
000530 f461      	BRNE _0x2060062
000531 940e 07cb 	CALL SUBOPT_0x22
000533 940e 0a83 	CALL __PUTPARD1
000535 934a      	ST   -Y,R20
000536 89eb      	LDD  R30,Y+19
000537 89fc      	LDD  R31,Y+19+1
000538 93fa      	ST   -Y,R31
000539 93ea      	ST   -Y,R30
00053a 940e 0289 	CALL _ftoa
00053c c00b      	RJMP _0x2060063
                 _0x2060062:
00053d 940e 07cb 	CALL SUBOPT_0x22
00053f 940e 0a83 	CALL __PUTPARD1
000541 934a      	ST   -Y,R20
000542 932a      	ST   -Y,R18
000543 89ec      	LDD  R30,Y+20
000544 89fd      	LDD  R31,Y+20+1
000545 93fa      	ST   -Y,R31
000546 93ea      	ST   -Y,R30
000547 de3a      	RCALL __ftoe_G103
                 _0x2060063:
000548 01fe      	MOVW R30,R28
000549 9676      	ADIW R30,22
00054a 940e 07d0 	CALL SUBOPT_0x23
00054c c01e      	RJMP _0x2060064
                 _0x206005A:
00054d 37e3      	CPI  R30,LOW(0x73)
00054e f439      	BRNE _0x2060066
00054f 940e 07c9 	CALL SUBOPT_0x21
000551 940e 07d8 	CALL SUBOPT_0x24
000553 940e 07d0 	CALL SUBOPT_0x23
000555 c00e      	RJMP _0x2060067
                 _0x2060066:
000556 37e0      	CPI  R30,LOW(0x70)
000557 f4c1      	BRNE _0x2060069
000558 940e 07c9 	CALL SUBOPT_0x21
00055a 940e 07d8 	CALL SUBOPT_0x24
00055c 87ee      	STD  Y+14,R30
00055d 87ff      	STD  Y+14+1,R31
00055e 93fa      	ST   -Y,R31
00055f 93ea      	ST   -Y,R30
000560 940e 027e 	CALL _strlenf
000562 2f1e      	MOV  R17,R30
000563 6008      	ORI  R16,LOW(8)
                 _0x2060067:
000564 770f      	ANDI R16,LOW(127)
000565 3040      	CPI  R20,0
000566 f011      	BREQ _0x206006B
000567 1741      	CP   R20,R17
000568 f008      	BRLO _0x206006C
                 _0x206006B:
000569 c001      	RJMP _0x206006A
                 _0x206006C:
00056a 2f14      	MOV  R17,R20
                 _0x206006A:
                 _0x2060064:
00056b e040      	LDI  R20,LOW(0)
00056c e0e0      	LDI  R30,LOW(0)
00056d 8bec      	STD  Y+20,R30
00056e e030      	LDI  R19,LOW(0)
00056f c06e      	RJMP _0x206006D
                 _0x2060069:
000570 36e4      	CPI  R30,LOW(0x64)
000571 f011      	BREQ _0x2060070
000572 36e9      	CPI  R30,LOW(0x69)
000573 f411      	BRNE _0x2060071
                 _0x2060070:
000574 6004      	ORI  R16,LOW(4)
000575 c002      	RJMP _0x2060072
                 _0x2060071:
000576 37e5      	CPI  R30,LOW(0x75)
000577 f4a1      	BRNE _0x2060073
                 _0x2060072:
000578 e0ea      	LDI  R30,LOW(10)
000579 8bec      	STD  Y+20,R30
00057a ff01      	SBRS R16,1
00057b c008      	RJMP _0x2060074
                +
00057c e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00057d ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00057e e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00057f e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000580 940e 07dd 	CALL SUBOPT_0x25
000582 e01a      	LDI  R17,LOW(10)
000583 c023      	RJMP _0x2060075
                 _0x2060074:
                +
000584 e1e0     +LDI R30 , LOW ( 0x2710 )
000585 e2f7     +LDI R31 , HIGH ( 0x2710 )
000586 e060     +LDI R22 , BYTE3 ( 0x2710 )
000587 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000588 940e 07dd 	CALL SUBOPT_0x25
00058a e015      	LDI  R17,LOW(5)
00058b c01b      	RJMP _0x2060075
                 _0x2060073:
00058c 35e8      	CPI  R30,LOW(0x58)
00058d f411      	BRNE _0x2060077
00058e 6008      	ORI  R16,LOW(8)
00058f c004      	RJMP _0x2060078
                 _0x2060077:
000590 37e8      	CPI  R30,LOW(0x78)
000591 f011      	BREQ PC+3
000592 940c 067e 	JMP _0x20600B6
                 _0x2060078:
000594 e1e0      	LDI  R30,LOW(16)
000595 8bec      	STD  Y+20,R30
000596 ff01      	SBRS R16,1
000597 c008      	RJMP _0x206007A
                +
000598 e0e0     +LDI R30 , LOW ( 0x10000000 )
000599 e0f0     +LDI R31 , HIGH ( 0x10000000 )
00059a e060     +LDI R22 , BYTE3 ( 0x10000000 )
00059b e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00059c 940e 07dd 	CALL SUBOPT_0x25
00059e e018      	LDI  R17,LOW(8)
00059f c007      	RJMP _0x2060075
                 _0x206007A:
                +
0005a0 e0e0     +LDI R30 , LOW ( 0x1000 )
0005a1 e1f0     +LDI R31 , HIGH ( 0x1000 )
0005a2 e060     +LDI R22 , BYTE3 ( 0x1000 )
0005a3 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0005a4 940e 07dd 	CALL SUBOPT_0x25
0005a6 e014      	LDI  R17,LOW(4)
                 _0x2060075:
0005a7 3040      	CPI  R20,0
0005a8 f011      	BREQ _0x206007B
0005a9 770f      	ANDI R16,LOW(127)
0005aa c001      	RJMP _0x206007C
                 _0x206007B:
0005ab e041      	LDI  R20,LOW(1)
                 _0x206007C:
0005ac ff01      	SBRS R16,1
0005ad c008      	RJMP _0x206007D
0005ae 940e 07c9 	CALL SUBOPT_0x21
0005b0 940e 07bd 	CALL SUBOPT_0x1F
0005b2 9614      	ADIW R26,4
0005b3 940e 0a73 	CALL __GETD1P
0005b5 c00f      	RJMP _0x2060113
                 _0x206007D:
0005b6 ff02      	SBRS R16,2
0005b7 c007      	RJMP _0x206007F
0005b8 940e 07c9 	CALL SUBOPT_0x21
0005ba 940e 07d8 	CALL SUBOPT_0x24
0005bc 940e 09dd 	CALL __CWD1
0005be c006      	RJMP _0x2060113
                 _0x206007F:
0005bf 940e 07c9 	CALL SUBOPT_0x21
0005c1 940e 07d8 	CALL SUBOPT_0x24
0005c3 2766      	CLR  R22
0005c4 2777      	CLR  R23
                 _0x2060113:
                +
0005c5 87ea     +STD Y + 10 , R30
0005c6 87fb     +STD Y + 10 + 1 , R31
0005c7 876c     +STD Y + 10 + 2 , R22
0005c8 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0005c9 ff02      	SBRS R16,2
0005ca c012      	RJMP _0x2060081
0005cb 85ad      	LDD  R26,Y+13
0005cc 23aa      	TST  R26
0005cd f442      	BRPL _0x2060082
0005ce 940e 07cb 	CALL SUBOPT_0x22
0005d0 940e 09c6 	CALL __ANEGD1
0005d2 940e 07c4 	CALL SUBOPT_0x20
0005d4 e2ed      	LDI  R30,LOW(45)
0005d5 8bed      	STD  Y+21,R30
                 _0x2060082:
0005d6 89ed      	LDD  R30,Y+21
0005d7 30e0      	CPI  R30,0
0005d8 f019      	BREQ _0x2060083
0005d9 5f1f      	SUBI R17,-LOW(1)
0005da 5f4f      	SUBI R20,-LOW(1)
0005db c001      	RJMP _0x2060084
                 _0x2060083:
0005dc 7f0b      	ANDI R16,LOW(251)
                 _0x2060084:
                 _0x2060081:
0005dd 2f34      	MOV  R19,R20
                 _0x206006D:
0005de fd00      	SBRC R16,0
0005df c014      	RJMP _0x2060085
                 _0x2060086:
0005e0 1715      	CP   R17,R21
0005e1 f410      	BRSH _0x2060089
0005e2 1735      	CP   R19,R21
0005e3 f008      	BRLO _0x206008A
                 _0x2060089:
0005e4 c00f      	RJMP _0x2060088
                 _0x206008A:
0005e5 ff07      	SBRS R16,7
0005e6 c008      	RJMP _0x206008B
0005e7 ff02      	SBRS R16,2
0005e8 c004      	RJMP _0x206008C
0005e9 7f0b      	ANDI R16,LOW(251)
0005ea 892d      	LDD  R18,Y+21
0005eb 5011      	SUBI R17,LOW(1)
0005ec c001      	RJMP _0x206008D
                 _0x206008C:
0005ed e320      	LDI  R18,LOW(48)
                 _0x206008D:
0005ee c001      	RJMP _0x206008E
                 _0x206008B:
0005ef e220      	LDI  R18,LOW(32)
                 _0x206008E:
0005f0 940e 079e 	CALL SUBOPT_0x1B
0005f2 5051      	SUBI R21,LOW(1)
0005f3 cfec      	RJMP _0x2060086
                 _0x2060088:
                 _0x2060085:
                 _0x206008F:
0005f4 1714      	CP   R17,R20
0005f5 f490      	BRSH _0x2060091
0005f6 6100      	ORI  R16,LOW(16)
0005f7 ff02      	SBRS R16,2
0005f8 c006      	RJMP _0x2060092
0005f9 940e 07e2 	CALL SUBOPT_0x26
0005fb f009      	BREQ _0x2060093
0005fc 5051      	SUBI R21,LOW(1)
                 _0x2060093:
0005fd 5011      	SUBI R17,LOW(1)
0005fe 5041      	SUBI R20,LOW(1)
                 _0x2060092:
0005ff e3e0      	LDI  R30,LOW(48)
000600 93ea      	ST   -Y,R30
000601 940e 07b5 	CALL SUBOPT_0x1E
000603 3050      	CPI  R21,0
000604 f009      	BREQ _0x2060094
000605 5051      	SUBI R21,LOW(1)
                 _0x2060094:
000606 5041      	SUBI R20,LOW(1)
000607 cfec      	RJMP _0x206008F
                 _0x2060091:
000608 2f31      	MOV  R19,R17
000609 89ec      	LDD  R30,Y+20
00060a 30e0      	CPI  R30,0
00060b f4b9      	BRNE _0x2060095
                 _0x2060096:
00060c 3030      	CPI  R19,0
00060d f0a1      	BREQ _0x2060098
00060e ff03      	SBRS R16,3
00060f c006      	RJMP _0x2060099
000610 85ee      	LDD  R30,Y+14
000611 85ff      	LDD  R31,Y+14+1
000612 9125      	LPM  R18,Z+
000613 87ee      	STD  Y+14,R30
000614 87ff      	STD  Y+14+1,R31
000615 c005      	RJMP _0x206009A
                 _0x2060099:
000616 85ae      	LDD  R26,Y+14
000617 85bf      	LDD  R27,Y+14+1
000618 912d      	LD   R18,X+
000619 87ae      	STD  Y+14,R26
00061a 87bf      	STD  Y+14+1,R27
                 _0x206009A:
00061b 940e 079e 	CALL SUBOPT_0x1B
00061d 3050      	CPI  R21,0
00061e f009      	BREQ _0x206009B
00061f 5051      	SUBI R21,LOW(1)
                 _0x206009B:
000620 5031      	SUBI R19,LOW(1)
000621 cfea      	RJMP _0x2060096
                 _0x2060098:
000622 c051      	RJMP _0x206009C
                 _0x2060095:
                 _0x206009E:
000623 940e 07f6 	CALL SUBOPT_0x27
000625 940e 0a12 	CALL __DIVD21U
000627 2f2e      	MOV  R18,R30
000628 302a      	CPI  R18,10
000629 f030      	BRLO _0x20600A0
00062a ff03      	SBRS R16,3
00062b c002      	RJMP _0x20600A1
00062c 5c29      	SUBI R18,-LOW(55)
00062d c001      	RJMP _0x20600A2
                 _0x20600A1:
00062e 5a29      	SUBI R18,-LOW(87)
                 _0x20600A2:
00062f c001      	RJMP _0x20600A3
                 _0x20600A0:
000630 5d20      	SUBI R18,-LOW(48)
                 _0x20600A3:
000631 fd04      	SBRC R16,4
000632 c021      	RJMP _0x20600A5
000633 3321      	CPI  R18,49
000634 f460      	BRSH _0x20600A7
                +
000635 89a8     +LDD R26 , Y + 16
000636 89b9     +LDD R27 , Y + 16 + 1
000637 898a     +LDD R24 , Y + 16 + 2
000638 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000639 30a1     +CPI R26 , LOW ( 0x1 )
00063a e0e0     +LDI R30 , HIGH ( 0x1 )
00063b 07be     +CPC R27 , R30
00063c e0e0     +LDI R30 , BYTE3 ( 0x1 )
00063d 078e     +CPC R24 , R30
00063e e0e0     +LDI R30 , BYTE4 ( 0x1 )
00063f 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000640 f409      	BRNE _0x20600A6
                 _0x20600A7:
000641 c00b      	RJMP _0x20600A9
                 _0x20600A6:
000642 1743      	CP   R20,R19
000643 f440      	BRSH _0x2060114
000644 1753      	CP   R21,R19
000645 f010      	BRLO _0x20600AC
000646 ff00      	SBRS R16,0
000647 c001      	RJMP _0x20600AD
                 _0x20600AC:
000648 c010      	RJMP _0x20600AB
                 _0x20600AD:
000649 e220      	LDI  R18,LOW(32)
00064a ff07      	SBRS R16,7
00064b c008      	RJMP _0x20600AE
                 _0x2060114:
00064c e320      	LDI  R18,LOW(48)
                 _0x20600A9:
00064d 6100      	ORI  R16,LOW(16)
00064e ff02      	SBRS R16,2
00064f c004      	RJMP _0x20600AF
000650 940e 07e2 	CALL SUBOPT_0x26
000652 f009      	BREQ _0x20600B0
000653 5051      	SUBI R21,LOW(1)
                 _0x20600B0:
                 _0x20600AF:
                 _0x20600AE:
                 _0x20600A5:
000654 940e 079e 	CALL SUBOPT_0x1B
000656 3050      	CPI  R21,0
000657 f009      	BREQ _0x20600B1
000658 5051      	SUBI R21,LOW(1)
                 _0x20600B1:
                 _0x20600AB:
000659 5031      	SUBI R19,LOW(1)
00065a 940e 07f6 	CALL SUBOPT_0x27
00065c 940e 0a51 	CALL __MODD21U
00065e 940e 07c4 	CALL SUBOPT_0x20
000660 89ec      	LDD  R30,Y+20
                +
000661 89a8     +LDD R26 , Y + 16
000662 89b9     +LDD R27 , Y + 16 + 1
000663 898a     +LDD R24 , Y + 16 + 2
000664 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000665 27ff      	CLR  R31
000666 2766      	CLR  R22
000667 2777      	CLR  R23
000668 940e 0a12 	CALL __DIVD21U
00066a 940e 07dd 	CALL SUBOPT_0x25
                +
00066c 89e8     +LDD R30 , Y + 16
00066d 89f9     +LDD R31 , Y + 16 + 1
00066e 896a     +LDD R22 , Y + 16 + 2
00066f 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000670 940e 0ab2 	CALL __CPD10
000672 f009      	BREQ _0x206009F
000673 cfaf      	RJMP _0x206009E
                 _0x206009F:
                 _0x206009C:
000674 ff00      	SBRS R16,0
000675 c008      	RJMP _0x20600B2
                 _0x20600B3:
000676 3050      	CPI  R21,0
000677 f031      	BREQ _0x20600B5
000678 5051      	SUBI R21,LOW(1)
000679 e2e0      	LDI  R30,LOW(32)
00067a 93ea      	ST   -Y,R30
00067b 940e 07b5 	CALL SUBOPT_0x1E
00067d cff8      	RJMP _0x20600B3
                 _0x20600B5:
                 _0x20600B2:
                 _0x20600B6:
                 _0x2060054:
                 _0x2060112:
00067e e010      	LDI  R17,LOW(0)
                 _0x2060035:
00067f ce06      	RJMP _0x2060030
                 _0x2060032:
000680 81ae      	LDD  R26,Y+6
000681 81bf      	LDD  R27,Y+6+1
000682 940e 0a6f 	CALL __GETW1P
000684 940e 0abd 	CALL __LOADLOCR6
000686 96ef      	ADIW R28,63
000687 966f      	ADIW R28,31
000688 9508      	RET
                 _sprintf:
000689 92ff      	PUSH R15
00068a 2ef8      	MOV  R15,R24
00068b 9726      	SBIW R28,6
00068c 940e 0ab8 	CALL __SAVELOCR4
00068e 940e 07ff 	CALL SUBOPT_0x28
000690 9730      	SBIW R30,0
000691 f419      	BRNE _0x20600B7
000692 efef      	LDI  R30,LOW(65535)
000693 efff      	LDI  R31,HIGH(65535)
000694 c025      	RJMP _0x20A0002
                 _0x20600B7:
000695 01de      	MOVW R26,R28
000696 9616      	ADIW R26,6
000697 940e 09be 	CALL __ADDW2R15
000699 018d      	MOVW R16,R26
00069a 940e 07ff 	CALL SUBOPT_0x28
00069c 83ee      	STD  Y+6,R30
00069d 83ff      	STD  Y+6+1,R31
00069e e0e0      	LDI  R30,LOW(0)
00069f 87e8      	STD  Y+8,R30
0006a0 87e9      	STD  Y+8+1,R30
0006a1 01de      	MOVW R26,R28
0006a2 961a      	ADIW R26,10
0006a3 940e 09be 	CALL __ADDW2R15
0006a5 940e 0a6f 	CALL __GETW1P
0006a7 93fa      	ST   -Y,R31
0006a8 93ea      	ST   -Y,R30
0006a9 931a      	ST   -Y,R17
0006aa 930a      	ST   -Y,R16
0006ab e4ea      	LDI  R30,LOW(_put_buff_G103)
0006ac e0f3      	LDI  R31,HIGH(_put_buff_G103)
0006ad 93fa      	ST   -Y,R31
0006ae 93ea      	ST   -Y,R30
0006af 01fe      	MOVW R30,R28
0006b0 963a      	ADIW R30,10
0006b1 93fa      	ST   -Y,R31
0006b2 93ea      	ST   -Y,R30
0006b3 ddb7      	RCALL __print_G103
0006b4 019f      	MOVW R18,R30
0006b5 81ae      	LDD  R26,Y+6
0006b6 81bf      	LDD  R27,Y+6+1
0006b7 e0e0      	LDI  R30,LOW(0)
0006b8 93ec      	ST   X,R30
0006b9 01f9      	MOVW R30,R18
                 _0x20A0002:
0006ba 940e 0abf 	CALL __LOADLOCR4
0006bc 962a      	ADIW R28,10
0006bd 90ff      	POP  R15
0006be 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
0006bf 817b         ldd  r23,y+3
0006c0 816a         ldd  r22,y+2
0006c1 81f9         ldd  r31,y+1
0006c2 81e8         ld   r30,y
0006c3 fb77         bst  r23,7
0006c4 0f77         lsl  r23
0006c5 fd67         sbrc r22,7
0006c6 6071         sbr  r23,1
0006c7 2f97         mov  r25,r23
0006c8 579e         subi r25,0x7e
0006c9 f081         breq __ftrunc0
0006ca f078         brcs __ftrunc0
0006cb 3198         cpi  r25,24
0006cc f490         brsh __ftrunc1
0006cd 27aa         clr  r26
0006ce 27bb         clr  r27
0006cf 2788         clr  r24
                 __ftrunc2:
0006d0 9408         sec
0006d1 9587         ror  r24
0006d2 95b7         ror  r27
0006d3 95a7         ror  r26
0006d4 959a         dec  r25
0006d5 f7d1         brne __ftrunc2
0006d6 23ea         and  r30,r26
0006d7 23fb         and  r31,r27
0006d8 2368         and  r22,r24
0006d9 c005         rjmp __ftrunc1
                 __ftrunc0:
0006da 94e8         clt
0006db 2777         clr  r23
0006dc 27ee         clr  r30
0006dd 27ff         clr  r31
0006de 2766         clr  r22
                 __ftrunc1:
0006df 776f         cbr  r22,0x80
0006e0 9576         lsr  r23
0006e1 f408         brcc __ftrunc3
0006e2 6860         sbr  r22,0x80
                 __ftrunc3:
0006e3 f977         bld  r23,7
0006e4 91a9         ld   r26,y+
0006e5 91b9         ld   r27,y+
0006e6 9189         ld   r24,y+
0006e7 9199         ld   r25,y+
0006e8 17ea         cp   r30,r26
0006e9 07fb         cpc  r31,r27
0006ea 0768         cpc  r22,r24
0006eb 0779         cpc  r23,r25
0006ec fb97         bst  r25,7
0006ed 9508         ret
                 _floor:
0006ee d117      	RCALL SUBOPT_0x29
0006ef 940e 0a83 	CALL __PUTPARD1
0006f1 940e 06bf 	CALL _ftrunc
0006f3 940e 0a7e 	CALL __PUTD1S0
0006f5 f411          brne __floor1
                 __floor0:
0006f6 d10f      	RCALL SUBOPT_0x29
0006f7 c008      	RJMP _0x20A0001
                 __floor1:
0006f8 f7ee          brtc __floor0
0006f9 d10c      	RCALL SUBOPT_0x29
                +
0006fa e0a0     +LDI R26 , LOW ( 0x3F800000 )
0006fb e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0006fc e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0006fd e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0006fe 940e 08b4 	CALL __SUBF12
                 _0x20A0001:
000700 9624      	ADIW R28,4
000701 9508      	RET
                 
                 	.ESEG
                 _FlagSetTime:
000000 01        	.DB  0x1
                 
                 	.DSEG
                 __seed_G102:
000171           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000702 27ff      	CLR  R31
000703 2766      	CLR  R22
000704 2777      	CLR  R23
000705 940e 0a83 	CALL __PUTPARD1
000707 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000708 93fa      	ST   -Y,R31
000709 93ea      	ST   -Y,R30
00070a 940c 0809 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
00070c 93ea      	ST   -Y,R30
00070d 940e 010b 	CALL _LCD16X2_Send4Bit
00070f 940c 0102 	JMP  _LCD16X2_Enable
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000711 e0e5      	LDI  R30,LOW(5)
000712 e0f0      	LDI  R31,HIGH(5)
000713 cff4      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000714 940e 0205 	CALL _I2CSOFT_Start
000716 ede0      	LDI  R30,LOW(208)
000717 93ea      	ST   -Y,R30
000718 940c 0218 	JMP  _I2CSOFT_WriteData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
00071a 9aa8      	SBI  0x15,0
                +
00071b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00071c 958a     +DEC R24
00071d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00071e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
00071f 81ee      	LDD  R30,Y+6
000720 81ff      	LDD  R31,Y+6+1
000721 93fa      	ST   -Y,R31
000722 93ea      	ST   -Y,R30
000723 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
000724 93fa      	ST   -Y,R31
000725 93ea      	ST   -Y,R30
000726 940c 0269 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
                +
000728 87e9     +STD Y + 9 , R30
000729 87fa     +STD Y + 9 + 1 , R31
00072a 876b     +STD Y + 9 + 2 , R22
00072b 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00072c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9:
00072d 81ae      	LDD  R26,Y+6
00072e 81bf      	LDD  R27,Y+6+1
00072f 9611      	ADIW R26,1
000730 83ae      	STD  Y+6,R26
000731 83bf      	STD  Y+6+1,R27
000732 9711      	SBIW R26,1
000733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
                +
000734 81aa     +LDD R26 , Y + 2
000735 81bb     +LDD R27 , Y + 2 + 1
000736 818c     +LDD R24 , Y + 2 + 2
000737 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000738 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xB:
                +
000739 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00073a ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00073b ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00073c e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00073d 940e 090b 	CALL __MULF12
00073f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
                +
000740 83ea     +STD Y + 2 , R30
000741 83fb     +STD Y + 2 + 1 , R31
000742 836c     +STD Y + 2 + 2 , R22
000743 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000744 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xD:
                +
000745 81ea     +LDD R30 , Y + 2
000746 81fb     +LDD R31 , Y + 2 + 1
000747 816c     +LDD R22 , Y + 2 + 2
000748 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000749 85a9     +LDD R26 , Y + 9
00074a 85ba     +LDD R27 , Y + 9 + 1
00074b 858b     +LDD R24 , Y + 9 + 2
00074c 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00074d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
                +
00074e e0e0     +LDI R30 , LOW ( 0x41200000 )
00074f e0f0     +LDI R31 , HIGH ( 0x41200000 )
000750 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000751 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000752 940e 090b 	CALL __MULF12
000754 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
                +
000755 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000756 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000757 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000758 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000759 940e 08bb 	CALL __ADDF12
00075b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x10:
00075c 2fe0      	MOV  R30,R16
00075d 5de0      	SUBI R30,-LOW(48)
00075e 93ec      	ST   X,R30
00075f 2fe0      	MOV  R30,R16
000760 e0f0      	LDI  R31,0
000761 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
000762 85a9     +LDD R26 , Y + 9
000763 85ba     +LDD R27 , Y + 9 + 1
000764 858b     +LDD R24 , Y + 9 + 2
000765 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000766 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000767 940e 0a88 	CALL __SWAPD12
000769 940e 08b4 	CALL __SUBF12
00076b cfbc      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00076c 91ed      	LD   R30,X+
00076d 91fd      	LD   R31,X+
00076e 9631      	ADIW R30,1
00076f 93fe      	ST   -X,R31
000770 93ee      	ST   -X,R30
000771 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
                +
000772 81ac     +LDD R26 , Y + 4
000773 81bd     +LDD R27 , Y + 4 + 1
000774 818e     +LDD R24 , Y + 4 + 2
000775 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000776 cfd7      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
                +
000777 83ec     +STD Y + 4 , R30
000778 83fd     +STD Y + 4 + 1 , R31
000779 836e     +STD Y + 4 + 2 , R22
00077a 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00077b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x16:
                +
00077c 81ec     +LDD R30 , Y + 4
00077d 81fd     +LDD R31 , Y + 4 + 1
00077e 816e     +LDD R22 , Y + 4 + 2
00077f 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000780 85ac     +LDD R26 , Y + 12
000781 85bd     +LDD R27 , Y + 12 + 1
000782 858e     +LDD R24 , Y + 12 + 2
000783 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000784 940e 099e 	CALL __CMPF12
000786 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
                +
000787 85ac     +LDD R26 , Y + 12
000788 85bd     +LDD R27 , Y + 12 + 1
000789 858e     +LDD R24 , Y + 12 + 2
00078a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00078b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
                +
00078c 87ec     +STD Y + 12 , R30
00078d 87fd     +STD Y + 12 + 1 , R31
00078e 876e     +STD Y + 12 + 2 , R22
00078f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000790 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000791 85a8      	LDD  R26,Y+8
000792 85b9      	LDD  R27,Y+8+1
000793 9611      	ADIW R26,1
000794 87a8      	STD  Y+8,R26
000795 87b9      	STD  Y+8+1,R27
000796 9711      	SBIW R26,1
000797 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1A:
000798 85e8      	LDD  R30,Y+8
000799 85f9      	LDD  R31,Y+8+1
00079a 9631      	ADIW R30,1
00079b 87e8      	STD  Y+8,R30
00079c 87f9      	STD  Y+8+1,R31
00079d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B:
00079e 932a      	ST   -Y,R18
00079f 81ef      	LDD  R30,Y+7
0007a0 85f8      	LDD  R31,Y+7+1
0007a1 93fa      	ST   -Y,R31
0007a2 93ea      	ST   -Y,R30
0007a3 85eb      	LDD  R30,Y+11
0007a4 85fc      	LDD  R31,Y+11+1
0007a5 9509      	ICALL
0007a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1C:
                +
0007a7 01fe     +MOVW R30 , R28
0007a8 5ae6     +SUBI R30 , LOW ( - 90 )
0007a9 4fff     +SBCI R31 , HIGH ( - 90 )
0007aa 9001     +LD R0 , Z +
0007ab 81f0     +LD R31 , Z
0007ac 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0007ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D:
0007ae 9734      	SBIW R30,4
                +
0007af 01de     +MOVW R26 , R28
0007b0 5aa6     +SUBI R26 , LOW ( - 90 )
0007b1 4fbf     +SBCI R27 , HIGH ( - 90 )
0007b2 93ed     +ST X + , R30
0007b3 93fc     +ST X , R31
                 	__PUTW1SX 90
0007b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E:
0007b5 81ef      	LDD  R30,Y+7
0007b6 85f8      	LDD  R31,Y+7+1
0007b7 93fa      	ST   -Y,R31
0007b8 93ea      	ST   -Y,R30
0007b9 85eb      	LDD  R30,Y+11
0007ba 85fc      	LDD  R31,Y+11+1
0007bb 9509      	ICALL
0007bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1F:
                +
0007bd 01de     +MOVW R26 , R28
0007be 5aa6     +SUBI R26 , LOW ( - 90 )
0007bf 4fbf     +SBCI R27 , HIGH ( - 90 )
0007c0 900d     +LD R0 , X +
0007c1 91bc     +LD R27 , X
0007c2 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0007c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
                +
0007c4 87ea     +STD Y + 10 , R30
0007c5 87fb     +STD Y + 10 + 1 , R31
0007c6 876c     +STD Y + 10 + 2 , R22
0007c7 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x21:
0007c9 dfdd      	RCALL SUBOPT_0x1C
0007ca cfe3      	RJMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
0007cb 85ea     +LDD R30 , Y + 10
0007cc 85fb     +LDD R31 , Y + 10 + 1
0007cd 856c     +LDD R22 , Y + 10 + 2
0007ce 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0007cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x23:
0007d0 87ee      	STD  Y+14,R30
0007d1 87ff      	STD  Y+14+1,R31
0007d2 93fa      	ST   -Y,R31
0007d3 93ea      	ST   -Y,R30
0007d4 940e 0274 	CALL _strlen
0007d6 2f1e      	MOV  R17,R30
0007d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24:
0007d8 dfe4      	RCALL SUBOPT_0x1F
0007d9 9614      	ADIW R26,4
0007da 940e 0a6f 	CALL __GETW1P
0007dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
                +
0007dd 8be8     +STD Y + 16 , R30
0007de 8bf9     +STD Y + 16 + 1 , R31
0007df 8b6a     +STD Y + 16 + 2 , R22
0007e0 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0007e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x26:
0007e2 7f0b      	ANDI R16,LOW(251)
0007e3 89ed      	LDD  R30,Y+21
0007e4 93ea      	ST   -Y,R30
                +
0007e5 01fe     +MOVW R30 , R28
0007e6 5ae9     +SUBI R30 , LOW ( - 87 )
0007e7 4fff     +SBCI R31 , HIGH ( - 87 )
0007e8 9001     +LD R0 , Z +
0007e9 81f0     +LD R31 , Z
0007ea 2de0     +MOV R30 , R0
                 	__GETW1SX 87
0007eb 93fa      	ST   -Y,R31
0007ec 93ea      	ST   -Y,R30
                +
0007ed 01fe     +MOVW R30 , R28
0007ee 5ae5     +SUBI R30 , LOW ( - 91 )
0007ef 4fff     +SBCI R31 , HIGH ( - 91 )
0007f0 9001     +LD R0 , Z +
0007f1 81f0     +LD R31 , Z
0007f2 2de0     +MOV R30 , R0
                 	__GETW1SX 91
0007f3 9509      	ICALL
0007f4 3050      	CPI  R21,0
0007f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27:
                +
0007f6 89e8     +LDD R30 , Y + 16
0007f7 89f9     +LDD R31 , Y + 16 + 1
0007f8 896a     +LDD R22 , Y + 16 + 2
0007f9 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0007fa 85aa     +LDD R26 , Y + 10
0007fb 85bb     +LDD R27 , Y + 10 + 1
0007fc 858c     +LDD R24 , Y + 10 + 2
0007fd 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0007fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
0007ff 01de      	MOVW R26,R28
000800 961c      	ADIW R26,12
000801 940e 09be 	CALL __ADDW2R15
000803 940e 0a6f 	CALL __GETW1P
000805 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000806 940e 0a79 	CALL __GETD1S0
000808 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000809 91e9      	ld   r30,y+
00080a 91f9      	ld   r31,y+
00080b 9630      	adiw r30,0
00080c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00080d ed80     +LDI R24 , LOW ( 0x7D0 )
00080e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00080f 9701     +SBIW R24 , 1
000810 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000811 95a8      	wdr
000812 9731      	sbiw r30,1
000813 f7c9      	brne __delay_ms0
                 __delay_ms1:
000814 9508      	ret
                 
                 __ANEGF1:
000815 9730      	SBIW R30,0
000816 4060      	SBCI R22,0
000817 4070      	SBCI R23,0
000818 f009      	BREQ __ANEGF10
000819 5870      	SUBI R23,0x80
                 __ANEGF10:
00081a 9508      	RET
                 
                 __ROUND_REPACK:
00081b 2355      	TST  R21
00081c f442      	BRPL __REPACK
00081d 3850      	CPI  R21,0x80
00081e f411      	BRNE __ROUND_REPACK0
00081f ffe0      	SBRS R30,0
000820 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000821 9631      	ADIW R30,1
000822 1f69      	ADC  R22,R25
000823 1f79      	ADC  R23,R25
000824 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000825 e850      	LDI  R21,0x80
000826 2757      	EOR  R21,R23
000827 f411      	BRNE __REPACK0
000828 935f      	PUSH R21
000829 c0cf      	RJMP __ZERORES
                 __REPACK0:
00082a 3f5f      	CPI  R21,0xFF
00082b f031      	BREQ __REPACK1
00082c 0f66      	LSL  R22
00082d 0c00      	LSL  R0
00082e 9557      	ROR  R21
00082f 9567      	ROR  R22
000830 2f75      	MOV  R23,R21
000831 9508      	RET
                 __REPACK1:
000832 935f      	PUSH R21
000833 2000      	TST  R0
000834 f00a      	BRMI __REPACK2
000835 c0cf      	RJMP __MAXRES
                 __REPACK2:
000836 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000837 e850      	LDI  R21,0x80
000838 2e19      	MOV  R1,R25
000839 2215      	AND  R1,R21
00083a 0f88      	LSL  R24
00083b 1f99      	ROL  R25
00083c 2795      	EOR  R25,R21
00083d 0f55      	LSL  R21
00083e 9587      	ROR  R24
                 
                 __UNPACK1:
00083f e850      	LDI  R21,0x80
000840 2e07      	MOV  R0,R23
000841 2205      	AND  R0,R21
000842 0f66      	LSL  R22
000843 1f77      	ROL  R23
000844 2775      	EOR  R23,R21
000845 0f55      	LSL  R21
000846 9567      	ROR  R22
000847 9508      	RET
                 
                 __CFD1U:
000848 9468      	SET
000849 c001      	RJMP __CFD1U0
                 __CFD1:
00084a 94e8      	CLT
                 __CFD1U0:
00084b 935f      	PUSH R21
00084c dff2      	RCALL __UNPACK1
00084d 3870      	CPI  R23,0x80
00084e f018      	BRLO __CFD10
00084f 3f7f      	CPI  R23,0xFF
000850 f408      	BRCC __CFD10
000851 c0a7      	RJMP __ZERORES
                 __CFD10:
000852 e156      	LDI  R21,22
000853 1b57      	SUB  R21,R23
000854 f4aa      	BRPL __CFD11
000855 9551      	NEG  R21
000856 3058      	CPI  R21,8
000857 f40e      	BRTC __CFD19
000858 3059      	CPI  R21,9
                 __CFD19:
000859 f030      	BRLO __CFD17
00085a efef      	SER  R30
00085b efff      	SER  R31
00085c ef6f      	SER  R22
00085d e77f      	LDI  R23,0x7F
00085e f977      	BLD  R23,7
00085f c01a      	RJMP __CFD15
                 __CFD17:
000860 2777      	CLR  R23
000861 2355      	TST  R21
000862 f0b9      	BREQ __CFD15
                 __CFD18:
000863 0fee      	LSL  R30
000864 1fff      	ROL  R31
000865 1f66      	ROL  R22
000866 1f77      	ROL  R23
000867 955a      	DEC  R21
000868 f7d1      	BRNE __CFD18
000869 c010      	RJMP __CFD15
                 __CFD11:
00086a 2777      	CLR  R23
                 __CFD12:
00086b 3058      	CPI  R21,8
00086c f028      	BRLO __CFD13
00086d 2fef      	MOV  R30,R31
00086e 2ff6      	MOV  R31,R22
00086f 2f67      	MOV  R22,R23
000870 5058      	SUBI R21,8
000871 cff9      	RJMP __CFD12
                 __CFD13:
000872 2355      	TST  R21
000873 f031      	BREQ __CFD15
                 __CFD14:
000874 9576      	LSR  R23
000875 9567      	ROR  R22
000876 95f7      	ROR  R31
000877 95e7      	ROR  R30
000878 955a      	DEC  R21
000879 f7d1      	BRNE __CFD14
                 __CFD15:
00087a 2000      	TST  R0
00087b f40a      	BRPL __CFD16
00087c d149      	RCALL __ANEGD1
                 __CFD16:
00087d 915f      	POP  R21
00087e 9508      	RET
                 
                 __CDF1U:
00087f 9468      	SET
000880 c001      	RJMP __CDF1U0
                 __CDF1:
000881 94e8      	CLT
                 __CDF1U0:
000882 9730      	SBIW R30,0
000883 4060      	SBCI R22,0
000884 4070      	SBCI R23,0
000885 f0b1      	BREQ __CDF10
000886 2400      	CLR  R0
000887 f026      	BRTS __CDF11
000888 2377      	TST  R23
000889 f412      	BRPL __CDF11
00088a 9400      	COM  R0
00088b d13a      	RCALL __ANEGD1
                 __CDF11:
00088c 2e17      	MOV  R1,R23
00088d e17e      	LDI  R23,30
00088e 2011      	TST  R1
                 __CDF12:
00088f f032      	BRMI __CDF13
000890 957a      	DEC  R23
000891 0fee      	LSL  R30
000892 1fff      	ROL  R31
000893 1f66      	ROL  R22
000894 1c11      	ROL  R1
000895 cff9      	RJMP __CDF12
                 __CDF13:
000896 2fef      	MOV  R30,R31
000897 2ff6      	MOV  R31,R22
000898 2d61      	MOV  R22,R1
000899 935f      	PUSH R21
00089a df8a      	RCALL __REPACK
00089b 915f      	POP  R21
                 __CDF10:
00089c 9508      	RET
                 
                 __SWAPACC:
00089d 934f      	PUSH R20
00089e 01af      	MOVW R20,R30
00089f 01fd      	MOVW R30,R26
0008a0 01da      	MOVW R26,R20
0008a1 01ab      	MOVW R20,R22
0008a2 01bc      	MOVW R22,R24
0008a3 01ca      	MOVW R24,R20
0008a4 2d40      	MOV  R20,R0
0008a5 2c01      	MOV  R0,R1
0008a6 2e14      	MOV  R1,R20
0008a7 914f      	POP  R20
0008a8 9508      	RET
                 
                 __UADD12:
0008a9 0fea      	ADD  R30,R26
0008aa 1ffb      	ADC  R31,R27
0008ab 1f68      	ADC  R22,R24
0008ac 9508      	RET
                 
                 __NEGMAN1:
0008ad 95e0      	COM  R30
0008ae 95f0      	COM  R31
0008af 9560      	COM  R22
0008b0 5fef      	SUBI R30,-1
0008b1 4fff      	SBCI R31,-1
0008b2 4f6f      	SBCI R22,-1
0008b3 9508      	RET
                 
                 __SUBF12:
0008b4 935f      	PUSH R21
0008b5 df81      	RCALL __UNPACK
0008b6 3890      	CPI  R25,0x80
0008b7 f171      	BREQ __ADDF129
0008b8 e850      	LDI  R21,0x80
0008b9 2615      	EOR  R1,R21
                 
0008ba c004      	RJMP __ADDF120
                 
                 __ADDF12:
0008bb 935f      	PUSH R21
0008bc df7a      	RCALL __UNPACK
0008bd 3890      	CPI  R25,0x80
0008be f139      	BREQ __ADDF129
                 
                 __ADDF120:
0008bf 3870      	CPI  R23,0x80
0008c0 f121      	BREQ __ADDF128
                 __ADDF121:
0008c1 2f57      	MOV  R21,R23
0008c2 1b59      	SUB  R21,R25
0008c3 f12b      	BRVS __ADDF1211
0008c4 f412      	BRPL __ADDF122
0008c5 dfd7      	RCALL __SWAPACC
0008c6 cffa      	RJMP __ADDF121
                 __ADDF122:
0008c7 3158      	CPI  R21,24
0008c8 f018      	BRLO __ADDF123
0008c9 27aa      	CLR  R26
0008ca 27bb      	CLR  R27
0008cb 2788      	CLR  R24
                 __ADDF123:
0008cc 3058      	CPI  R21,8
0008cd f028      	BRLO __ADDF124
0008ce 2fab      	MOV  R26,R27
0008cf 2fb8      	MOV  R27,R24
0008d0 2788      	CLR  R24
0008d1 5058      	SUBI R21,8
0008d2 cff9      	RJMP __ADDF123
                 __ADDF124:
0008d3 2355      	TST  R21
0008d4 f029      	BREQ __ADDF126
                 __ADDF125:
0008d5 9586      	LSR  R24
0008d6 95b7      	ROR  R27
0008d7 95a7      	ROR  R26
0008d8 955a      	DEC  R21
0008d9 f7d9      	BRNE __ADDF125
                 __ADDF126:
0008da 2d50      	MOV  R21,R0
0008db 2551      	EOR  R21,R1
0008dc f072      	BRMI __ADDF127
0008dd dfcb      	RCALL __UADD12
0008de f438      	BRCC __ADDF129
0008df 9567      	ROR  R22
0008e0 95f7      	ROR  R31
0008e1 95e7      	ROR  R30
0008e2 9573      	INC  R23
0008e3 f413      	BRVC __ADDF129
0008e4 c020      	RJMP __MAXRES
                 __ADDF128:
0008e5 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0008e6 df3e      	RCALL __REPACK
0008e7 915f      	POP  R21
0008e8 9508      	RET
                 __ADDF1211:
0008e9 f7d8      	BRCC __ADDF128
0008ea cffb      	RJMP __ADDF129
                 __ADDF127:
0008eb 1bea      	SUB  R30,R26
0008ec 0bfb      	SBC  R31,R27
0008ed 0b68      	SBC  R22,R24
0008ee f051      	BREQ __ZERORES
0008ef f410      	BRCC __ADDF1210
0008f0 9400      	COM  R0
0008f1 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0008f2 2366      	TST  R22
0008f3 f392      	BRMI __ADDF129
0008f4 0fee      	LSL  R30
0008f5 1fff      	ROL  R31
0008f6 1f66      	ROL  R22
0008f7 957a      	DEC  R23
0008f8 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0008f9 27ee      	CLR  R30
0008fa 27ff      	CLR  R31
0008fb 2766      	CLR  R22
0008fc 2777      	CLR  R23
0008fd 915f      	POP  R21
0008fe 9508      	RET
                 
                 __MINRES:
0008ff efef      	SER  R30
000900 efff      	SER  R31
000901 e76f      	LDI  R22,0x7F
000902 ef7f      	SER  R23
000903 915f      	POP  R21
000904 9508      	RET
                 
                 __MAXRES:
000905 efef      	SER  R30
000906 efff      	SER  R31
000907 e76f      	LDI  R22,0x7F
000908 e77f      	LDI  R23,0x7F
000909 915f      	POP  R21
00090a 9508      	RET
                 
                 __MULF12:
00090b 935f      	PUSH R21
00090c df2a      	RCALL __UNPACK
00090d 3870      	CPI  R23,0x80
00090e f351      	BREQ __ZERORES
00090f 3890      	CPI  R25,0x80
000910 f341      	BREQ __ZERORES
000911 2401      	EOR  R0,R1
000912 9408      	SEC
000913 1f79      	ADC  R23,R25
000914 f423      	BRVC __MULF124
000915 f31c      	BRLT __ZERORES
                 __MULF125:
000916 2000      	TST  R0
000917 f33a      	BRMI __MINRES
000918 cfec      	RJMP __MAXRES
                 __MULF124:
000919 920f      	PUSH R0
00091a 931f      	PUSH R17
00091b 932f      	PUSH R18
00091c 933f      	PUSH R19
00091d 934f      	PUSH R20
00091e 2711      	CLR  R17
00091f 2722      	CLR  R18
000920 2799      	CLR  R25
000921 9f68      	MUL  R22,R24
000922 01a0      	MOVW R20,R0
000923 9f8f      	MUL  R24,R31
000924 2d30      	MOV  R19,R0
000925 0d41      	ADD  R20,R1
000926 1f59      	ADC  R21,R25
000927 9f6b      	MUL  R22,R27
000928 0d30      	ADD  R19,R0
000929 1d41      	ADC  R20,R1
00092a 1f59      	ADC  R21,R25
00092b 9f8e      	MUL  R24,R30
00092c d027      	RCALL __MULF126
00092d 9fbf      	MUL  R27,R31
00092e d025      	RCALL __MULF126
00092f 9f6a      	MUL  R22,R26
000930 d023      	RCALL __MULF126
000931 9fbe      	MUL  R27,R30
000932 d01d      	RCALL __MULF127
000933 9faf      	MUL  R26,R31
000934 d01b      	RCALL __MULF127
000935 9fae      	MUL  R26,R30
000936 0d11      	ADD  R17,R1
000937 1f29      	ADC  R18,R25
000938 1f39      	ADC  R19,R25
000939 1f49      	ADC  R20,R25
00093a 1f59      	ADC  R21,R25
00093b 2fe3      	MOV  R30,R19
00093c 2ff4      	MOV  R31,R20
00093d 2f65      	MOV  R22,R21
00093e 2f52      	MOV  R21,R18
00093f 914f      	POP  R20
000940 913f      	POP  R19
000941 912f      	POP  R18
000942 911f      	POP  R17
000943 900f      	POP  R0
000944 2366      	TST  R22
000945 f02a      	BRMI __MULF122
000946 0f55      	LSL  R21
000947 1fee      	ROL  R30
000948 1fff      	ROL  R31
000949 1f66      	ROL  R22
00094a c002      	RJMP __MULF123
                 __MULF122:
00094b 9573      	INC  R23
00094c f24b      	BRVS __MULF125
                 __MULF123:
00094d decd      	RCALL __ROUND_REPACK
00094e 915f      	POP  R21
00094f 9508      	RET
                 
                 __MULF127:
000950 0d10      	ADD  R17,R0
000951 1d21      	ADC  R18,R1
000952 1f39      	ADC  R19,R25
000953 c002      	RJMP __MULF128
                 __MULF126:
000954 0d20      	ADD  R18,R0
000955 1d31      	ADC  R19,R1
                 __MULF128:
000956 1f49      	ADC  R20,R25
000957 1f59      	ADC  R21,R25
000958 9508      	RET
                 
                 __DIVF21:
000959 935f      	PUSH R21
00095a dedc      	RCALL __UNPACK
00095b 3870      	CPI  R23,0x80
00095c f421      	BRNE __DIVF210
00095d 2011      	TST  R1
                 __DIVF211:
00095e f40a      	BRPL __DIVF219
00095f cf9f      	RJMP __MINRES
                 __DIVF219:
000960 cfa4      	RJMP __MAXRES
                 __DIVF210:
000961 3890      	CPI  R25,0x80
000962 f409      	BRNE __DIVF218
                 __DIVF217:
000963 cf95      	RJMP __ZERORES
                 __DIVF218:
000964 2401      	EOR  R0,R1
000965 9408      	SEC
000966 0b97      	SBC  R25,R23
000967 f41b      	BRVC __DIVF216
000968 f3d4      	BRLT __DIVF217
000969 2000      	TST  R0
00096a cff3      	RJMP __DIVF211
                 __DIVF216:
00096b 2f79      	MOV  R23,R25
00096c 931f      	PUSH R17
00096d 932f      	PUSH R18
00096e 933f      	PUSH R19
00096f 934f      	PUSH R20
000970 2411      	CLR  R1
000971 2711      	CLR  R17
000972 2722      	CLR  R18
000973 2733      	CLR  R19
000974 2744      	CLR  R20
000975 2755      	CLR  R21
000976 e290      	LDI  R25,32
                 __DIVF212:
000977 17ae      	CP   R26,R30
000978 07bf      	CPC  R27,R31
000979 0786      	CPC  R24,R22
00097a 0741      	CPC  R20,R17
00097b f030      	BRLO __DIVF213
00097c 1bae      	SUB  R26,R30
00097d 0bbf      	SBC  R27,R31
00097e 0b86      	SBC  R24,R22
00097f 0b41      	SBC  R20,R17
000980 9408      	SEC
000981 c001      	RJMP __DIVF214
                 __DIVF213:
000982 9488      	CLC
                 __DIVF214:
000983 1f55      	ROL  R21
000984 1f22      	ROL  R18
000985 1f33      	ROL  R19
000986 1c11      	ROL  R1
000987 1faa      	ROL  R26
000988 1fbb      	ROL  R27
000989 1f88      	ROL  R24
00098a 1f44      	ROL  R20
00098b 959a      	DEC  R25
00098c f751      	BRNE __DIVF212
00098d 01f9      	MOVW R30,R18
00098e 2d61      	MOV  R22,R1
00098f 914f      	POP  R20
000990 913f      	POP  R19
000991 912f      	POP  R18
000992 911f      	POP  R17
000993 2366      	TST  R22
000994 f032      	BRMI __DIVF215
000995 0f55      	LSL  R21
000996 1fee      	ROL  R30
000997 1fff      	ROL  R31
000998 1f66      	ROL  R22
000999 957a      	DEC  R23
00099a f243      	BRVS __DIVF217
                 __DIVF215:
00099b de7f      	RCALL __ROUND_REPACK
00099c 915f      	POP  R21
00099d 9508      	RET
                 
                 __CMPF12:
00099e 2399      	TST  R25
00099f f09a      	BRMI __CMPF120
0009a0 2377      	TST  R23
0009a1 f042      	BRMI __CMPF121
0009a2 1797      	CP   R25,R23
0009a3 f048      	BRLO __CMPF122
0009a4 f429      	BRNE __CMPF121
0009a5 17ae      	CP   R26,R30
0009a6 07bf      	CPC  R27,R31
0009a7 0786      	CPC  R24,R22
0009a8 f020      	BRLO __CMPF122
0009a9 f031      	BREQ __CMPF123
                 __CMPF121:
0009aa 9498      	CLZ
0009ab 9488      	CLC
0009ac 9508      	RET
                 __CMPF122:
0009ad 9498      	CLZ
0009ae 9408      	SEC
0009af 9508      	RET
                 __CMPF123:
0009b0 9418      	SEZ
0009b1 9488      	CLC
0009b2 9508      	RET
                 __CMPF120:
0009b3 2377      	TST  R23
0009b4 f7c2      	BRPL __CMPF122
0009b5 1797      	CP   R25,R23
0009b6 f398      	BRLO __CMPF121
0009b7 f7a9      	BRNE __CMPF122
0009b8 17ea      	CP   R30,R26
0009b9 07fb      	CPC  R31,R27
0009ba 0768      	CPC  R22,R24
0009bb f388      	BRLO __CMPF122
0009bc f399      	BREQ __CMPF123
0009bd cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0009be 2400      	CLR  R0
0009bf 0daf      	ADD  R26,R15
0009c0 1db0      	ADC  R27,R0
0009c1 9508      	RET
                 
                 __ANEGW1:
0009c2 95f1      	NEG  R31
0009c3 95e1      	NEG  R30
0009c4 40f0      	SBCI R31,0
0009c5 9508      	RET
                 
                 __ANEGD1:
0009c6 95f0      	COM  R31
0009c7 9560      	COM  R22
0009c8 9570      	COM  R23
0009c9 95e1      	NEG  R30
0009ca 4fff      	SBCI R31,-1
0009cb 4f6f      	SBCI R22,-1
0009cc 4f7f      	SBCI R23,-1
0009cd 9508      	RET
                 
                 __ASRW4:
0009ce 95f5      	ASR  R31
0009cf 95e7      	ROR  R30
                 __ASRW3:
0009d0 95f5      	ASR  R31
0009d1 95e7      	ROR  R30
                 __ASRW2:
0009d2 95f5      	ASR  R31
0009d3 95e7      	ROR  R30
0009d4 95f5      	ASR  R31
0009d5 95e7      	ROR  R30
0009d6 9508      	RET
                 
                 __CBD1:
0009d7 2ffe      	MOV  R31,R30
0009d8 0fff      	ADD  R31,R31
0009d9 0bff      	SBC  R31,R31
0009da 2f6f      	MOV  R22,R31
0009db 2f7f      	MOV  R23,R31
0009dc 9508      	RET
                 
                 __CWD1:
0009dd 2f6f      	MOV  R22,R31
0009de 0f66      	ADD  R22,R22
0009df 0b66      	SBC  R22,R22
0009e0 2f76      	MOV  R23,R22
0009e1 9508      	RET
                 
                 __EQB12:
0009e2 17ea      	CP   R30,R26
0009e3 e0e1      	LDI  R30,1
0009e4 f009      	BREQ __EQB12T
0009e5 27ee      	CLR  R30
                 __EQB12T:
0009e6 9508      	RET
                 
                 __DIVB21U:
0009e7 2400      	CLR  R0
0009e8 e098      	LDI  R25,8
                 __DIVB21U1:
0009e9 0faa      	LSL  R26
0009ea 1c00      	ROL  R0
0009eb 1a0e      	SUB  R0,R30
0009ec f410      	BRCC __DIVB21U2
0009ed 0e0e      	ADD  R0,R30
0009ee c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0009ef 60a1      	SBR  R26,1
                 __DIVB21U3:
0009f0 959a      	DEC  R25
0009f1 f7b9      	BRNE __DIVB21U1
0009f2 2fea      	MOV  R30,R26
0009f3 2da0      	MOV  R26,R0
0009f4 9508      	RET
                 
                 __DIVB21:
0009f5 d05f      	RCALL __CHKSIGNB
0009f6 dff0      	RCALL __DIVB21U
0009f7 f40e      	BRTC __DIVB211
0009f8 95e1      	NEG  R30
                 __DIVB211:
0009f9 9508      	RET
                 
                 __DIVW21U:
0009fa 2400      	CLR  R0
0009fb 2411      	CLR  R1
0009fc e190      	LDI  R25,16
                 __DIVW21U1:
0009fd 0faa      	LSL  R26
0009fe 1fbb      	ROL  R27
0009ff 1c00      	ROL  R0
000a00 1c11      	ROL  R1
000a01 1a0e      	SUB  R0,R30
000a02 0a1f      	SBC  R1,R31
000a03 f418      	BRCC __DIVW21U2
000a04 0e0e      	ADD  R0,R30
000a05 1e1f      	ADC  R1,R31
000a06 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000a07 60a1      	SBR  R26,1
                 __DIVW21U3:
000a08 959a      	DEC  R25
000a09 f799      	BRNE __DIVW21U1
000a0a 01fd      	MOVW R30,R26
000a0b 01d0      	MOVW R26,R0
000a0c 9508      	RET
                 
                 __DIVW21:
000a0d d053      	RCALL __CHKSIGNW
000a0e dfeb      	RCALL __DIVW21U
000a0f f40e      	BRTC __DIVW211
000a10 dfb1      	RCALL __ANEGW1
                 __DIVW211:
000a11 9508      	RET
                 
                 __DIVD21U:
000a12 933f      	PUSH R19
000a13 934f      	PUSH R20
000a14 935f      	PUSH R21
000a15 2400      	CLR  R0
000a16 2411      	CLR  R1
000a17 2744      	CLR  R20
000a18 2755      	CLR  R21
000a19 e230      	LDI  R19,32
                 __DIVD21U1:
000a1a 0faa      	LSL  R26
000a1b 1fbb      	ROL  R27
000a1c 1f88      	ROL  R24
000a1d 1f99      	ROL  R25
000a1e 1c00      	ROL  R0
000a1f 1c11      	ROL  R1
000a20 1f44      	ROL  R20
000a21 1f55      	ROL  R21
000a22 1a0e      	SUB  R0,R30
000a23 0a1f      	SBC  R1,R31
000a24 0b46      	SBC  R20,R22
000a25 0b57      	SBC  R21,R23
000a26 f428      	BRCC __DIVD21U2
000a27 0e0e      	ADD  R0,R30
000a28 1e1f      	ADC  R1,R31
000a29 1f46      	ADC  R20,R22
000a2a 1f57      	ADC  R21,R23
000a2b c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000a2c 60a1      	SBR  R26,1
                 __DIVD21U3:
000a2d 953a      	DEC  R19
000a2e f759      	BRNE __DIVD21U1
000a2f 01fd      	MOVW R30,R26
000a30 01bc      	MOVW R22,R24
000a31 01d0      	MOVW R26,R0
000a32 01ca      	MOVW R24,R20
000a33 915f      	POP  R21
000a34 914f      	POP  R20
000a35 913f      	POP  R19
000a36 9508      	RET
                 
                 __MODB21:
000a37 94e8      	CLT
000a38 ffa7      	SBRS R26,7
000a39 c002      	RJMP __MODB211
000a3a 95a1      	NEG  R26
000a3b 9468      	SET
                 __MODB211:
000a3c fde7      	SBRC R30,7
000a3d 95e1      	NEG  R30
000a3e dfa8      	RCALL __DIVB21U
000a3f 2fea      	MOV  R30,R26
000a40 f40e      	BRTC __MODB212
000a41 95e1      	NEG  R30
                 __MODB212:
000a42 9508      	RET
                 
                 __MODW21:
000a43 94e8      	CLT
000a44 ffb7      	SBRS R27,7
000a45 c004      	RJMP __MODW211
000a46 95a0      	COM  R26
000a47 95b0      	COM  R27
000a48 9611      	ADIW R26,1
000a49 9468      	SET
                 __MODW211:
000a4a fdf7      	SBRC R31,7
000a4b df76      	RCALL __ANEGW1
000a4c dfad      	RCALL __DIVW21U
000a4d 01fd      	MOVW R30,R26
000a4e f40e      	BRTC __MODW212
000a4f df72      	RCALL __ANEGW1
                 __MODW212:
000a50 9508      	RET
                 
                 __MODD21U:
000a51 dfc0      	RCALL __DIVD21U
000a52 01fd      	MOVW R30,R26
000a53 01bc      	MOVW R22,R24
000a54 9508      	RET
                 
                 __CHKSIGNB:
000a55 94e8      	CLT
000a56 ffe7      	SBRS R30,7
000a57 c002      	RJMP __CHKSB1
000a58 95e1      	NEG  R30
000a59 9468      	SET
                 __CHKSB1:
000a5a ffa7      	SBRS R26,7
000a5b c004      	RJMP __CHKSB2
000a5c 95a1      	NEG  R26
000a5d f800      	BLD  R0,0
000a5e 9403      	INC  R0
000a5f fa00      	BST  R0,0
                 __CHKSB2:
000a60 9508      	RET
                 
                 __CHKSIGNW:
000a61 94e8      	CLT
000a62 fff7      	SBRS R31,7
000a63 c002      	RJMP __CHKSW1
000a64 df5d      	RCALL __ANEGW1
000a65 9468      	SET
                 __CHKSW1:
000a66 ffb7      	SBRS R27,7
000a67 c006      	RJMP __CHKSW2
000a68 95a0      	COM  R26
000a69 95b0      	COM  R27
000a6a 9611      	ADIW R26,1
000a6b f800      	BLD  R0,0
000a6c 9403      	INC  R0
000a6d fa00      	BST  R0,0
                 __CHKSW2:
000a6e 9508      	RET
                 
                 __GETW1P:
000a6f 91ed      	LD   R30,X+
000a70 91fc      	LD   R31,X
000a71 9711      	SBIW R26,1
000a72 9508      	RET
                 
                 __GETD1P:
000a73 91ed      	LD   R30,X+
000a74 91fd      	LD   R31,X+
000a75 916d      	LD   R22,X+
000a76 917c      	LD   R23,X
000a77 9713      	SBIW R26,3
000a78 9508      	RET
                 
                 __GETD1S0:
000a79 81e8      	LD   R30,Y
000a7a 81f9      	LDD  R31,Y+1
000a7b 816a      	LDD  R22,Y+2
000a7c 817b      	LDD  R23,Y+3
000a7d 9508      	RET
                 
                 __PUTD1S0:
000a7e 83e8      	ST   Y,R30
000a7f 83f9      	STD  Y+1,R31
000a80 836a      	STD  Y+2,R22
000a81 837b      	STD  Y+3,R23
000a82 9508      	RET
                 
                 __PUTPARD1:
000a83 937a      	ST   -Y,R23
000a84 936a      	ST   -Y,R22
000a85 93fa      	ST   -Y,R31
000a86 93ea      	ST   -Y,R30
000a87 9508      	RET
                 
                 __SWAPD12:
000a88 2e18      	MOV  R1,R24
000a89 2f86      	MOV  R24,R22
000a8a 2d61      	MOV  R22,R1
000a8b 2e19      	MOV  R1,R25
000a8c 2f97      	MOV  R25,R23
000a8d 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000a8e 2e1b      	MOV  R1,R27
000a8f 2fbf      	MOV  R27,R31
000a90 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000a91 2e1a      	MOV  R1,R26
000a92 2fae      	MOV  R26,R30
000a93 2de1      	MOV  R30,R1
000a94 9508      	RET
                 
                 __EEPROMRDB:
000a95 99e1      	SBIC EECR,EEWE
000a96 cffe      	RJMP __EEPROMRDB
000a97 93ff      	PUSH R31
000a98 b7ff      	IN   R31,SREG
000a99 94f8      	CLI
000a9a bbae      	OUT  EEARL,R26
000a9b bbbf      	OUT  EEARH,R27
000a9c 9ae0      	SBI  EECR,EERE
000a9d b3ed      	IN   R30,EEDR
000a9e bfff      	OUT  SREG,R31
000a9f 91ff      	POP  R31
000aa0 9508      	RET
                 
                 __EEPROMWRB:
000aa1 9be1      	SBIS EECR,EEWE
000aa2 c002      	RJMP __EEPROMWRB1
000aa3 95a8      	WDR
000aa4 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000aa5 b79f      	IN   R25,SREG
000aa6 94f8      	CLI
000aa7 bbae      	OUT  EEARL,R26
000aa8 bbbf      	OUT  EEARH,R27
000aa9 9ae0      	SBI  EECR,EERE
000aaa b38d      	IN   R24,EEDR
000aab 17e8      	CP   R30,R24
000aac f019      	BREQ __EEPROMWRB0
000aad bbed      	OUT  EEDR,R30
000aae 9ae2      	SBI  EECR,EEMWE
000aaf 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000ab0 bf9f      	OUT  SREG,R25
000ab1 9508      	RET
                 
                 __CPD10:
000ab2 9730      	SBIW R30,0
000ab3 4060      	SBCI R22,0
000ab4 4070      	SBCI R23,0
000ab5 9508      	RET
                 
                 __SAVELOCR6:
000ab6 935a      	ST   -Y,R21
                 __SAVELOCR5:
000ab7 934a      	ST   -Y,R20
                 __SAVELOCR4:
000ab8 933a      	ST   -Y,R19
                 __SAVELOCR3:
000ab9 932a      	ST   -Y,R18
                 __SAVELOCR2:
000aba 931a      	ST   -Y,R17
000abb 930a      	ST   -Y,R16
000abc 9508      	RET
                 
                 __LOADLOCR6:
000abd 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000abe 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000abf 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000ac0 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000ac1 8119      	LDD  R17,Y+1
000ac2 8108      	LD   R16,Y
000ac3 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  69 r1 :  38 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  60 r17:  85 r18:  48 r19:  39 r20:  50 r21:  90 r22: 107 r23:  91 
r24:  84 r25:  62 r26: 168 r27:  81 r28:  35 r29:   1 r30: 548 r31: 192 
x  :  42 y  : 425 z  :  25 
Registers used: 22 out of 35 (62.9%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  22 add   :  16 
adiw  :  36 and   :   5 andi  :  11 asr   :   4 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   1 break :   0 breq  :  49 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  26 
brlt  :   2 brmi  :  11 brne  :  73 brpl  :   9 brsh  :   8 brtc  :   6 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 227 
cbi   :  19 cbr   :   1 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  55 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  15 cpc   :  18 cpi   :  88 cpse  :   0 dec   :  24 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :  10 inc   :   4 jmp   :  33 ld    :  50 ldd   : 208 ldi   : 235 
lds   :   0 lpm   :  12 lsl   :  17 lsr   :   3 mov   :  92 movw  :  49 
mul   :  11 muls  :   1 mulsu :   0 neg   :  11 nop   :   0 or    :   0 
ori   :   9 out   :  49 pop   :  26 push  :  26 rcall :  70 ret   : 100 
reti  :   0 rjmp  : 153 rol   :  35 ror   :  19 sbc   :  12 sbci  :  20 
sbi   :  23 sbic  :   3 sbis  :   1 sbiw  :  30 sbr   :   5 sbrc  :   5 
sbrs  :  23 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 144 std   :  79 sts   :   0 sub   :   7 subi  :  51 swap  :   1 
tst   :  24 wdr   :   2 
Instructions used: 80 out of 116 (69.0%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001588   5444     68   5512   16384  33.6%
[.dseg] 0x000060 0x000175      0     21     21    1119   1.9%
[.eseg] 0x000000 0x000001      0      1      1     512   0.2%

Assembly complete, 0 errors, 4 warnings
