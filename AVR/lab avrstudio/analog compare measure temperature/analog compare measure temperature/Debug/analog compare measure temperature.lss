
analog compare measure temperature.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000018  00800060  00800060  00000a1a  2**0
                  ALLOC
  2 .stab         00002c40  00000000  00000000  00000a1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000097e  00000000  00000000  0000365c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000040  00000000  00000000  00003fda  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000010a  00000000  00000000  0000401a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000004d4  00000000  00000000  00004124  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000210  00000000  00000000  000045f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000064f  00000000  00000000  00004808  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  00004e58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001fa  00000000  00000000  00004f48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000237  00000000  00000000  00005142  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000063  00000000  00000000  00005379  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_5>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf e5       	ldi	r28, 0x5F	; 95
  82:	d4 e0       	ldi	r29, 0x04	; 4
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_clear_bss>:
  88:	10 e0       	ldi	r17, 0x00	; 0
  8a:	a0 e6       	ldi	r26, 0x60	; 96
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a8 37       	cpi	r26, 0x78	; 120
  94:	b1 07       	cpc	r27, r17
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 07 01 	call	0x20e	; 0x20e <main>
  9c:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <__vector_5>:
volatile float j;
volatile float i,t,V,T;


ISR(TIMER1_CAPT_vect)
{
  a4:	1f 92       	push	r1
  a6:	0f 92       	push	r0
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	0f 92       	push	r0
  ac:	11 24       	eor	r1, r1
  ae:	2f 93       	push	r18
  b0:	3f 93       	push	r19
  b2:	4f 93       	push	r20
  b4:	5f 93       	push	r21
  b6:	6f 93       	push	r22
  b8:	7f 93       	push	r23
  ba:	8f 93       	push	r24
  bc:	9f 93       	push	r25
  be:	af 93       	push	r26
  c0:	bf 93       	push	r27
  c2:	ef 93       	push	r30
  c4:	ff 93       	push	r31
	
	if (bit_is_clear(ACSR,ACO))
  c6:	45 99       	sbic	0x08, 5	; 8
  c8:	91 c0       	rjmp	.+290    	; 0x1ec <__vector_5+0x148>
	{
		
		//TCCR1B = 0;
		j = ICR1;
  ca:	66 b5       	in	r22, 0x26	; 38
  cc:	77 b5       	in	r23, 0x27	; 39
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	0e 94 29 03 	call	0x652	; 0x652 <__floatunsisf>
  d6:	60 93 64 00 	sts	0x0064, r22
  da:	70 93 65 00 	sts	0x0065, r23
  de:	80 93 66 00 	sts	0x0066, r24
  e2:	90 93 67 00 	sts	0x0067, r25
		t=j*pow(10,-6);
  e6:	60 91 64 00 	lds	r22, 0x0064
  ea:	70 91 65 00 	lds	r23, 0x0065
  ee:	80 91 66 00 	lds	r24, 0x0066
  f2:	90 91 67 00 	lds	r25, 0x0067
  f6:	2d eb       	ldi	r18, 0xBD	; 189
  f8:	37 e3       	ldi	r19, 0x37	; 55
  fa:	46 e8       	ldi	r20, 0x86	; 134
  fc:	55 e3       	ldi	r21, 0x35	; 53
  fe:	0e 94 4c 04 	call	0x898	; 0x898 <__mulsf3>
 102:	26 2f       	mov	r18, r22
 104:	37 2f       	mov	r19, r23
 106:	48 2f       	mov	r20, r24
 108:	59 2f       	mov	r21, r25
 10a:	20 93 60 00 	sts	0x0060, r18
 10e:	30 93 61 00 	sts	0x0061, r19
 112:	40 93 62 00 	sts	0x0062, r20
 116:	50 93 63 00 	sts	0x0063, r21
		V=(5*(1-exp(-(100*t))))*1000;
 11a:	60 91 60 00 	lds	r22, 0x0060
 11e:	70 91 61 00 	lds	r23, 0x0061
 122:	80 91 62 00 	lds	r24, 0x0062
 126:	90 91 63 00 	lds	r25, 0x0063
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	48 ec       	ldi	r20, 0xC8	; 200
 130:	52 e4       	ldi	r21, 0x42	; 66
 132:	0e 94 4c 04 	call	0x898	; 0x898 <__mulsf3>
 136:	90 58       	subi	r25, 0x80	; 128
 138:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <exp>
 13c:	9b 01       	movw	r18, r22
 13e:	ac 01       	movw	r20, r24
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	70 e0       	ldi	r23, 0x00	; 0
 144:	80 e8       	ldi	r24, 0x80	; 128
 146:	9f e3       	ldi	r25, 0x3F	; 63
 148:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__subsf3>
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	40 ea       	ldi	r20, 0xA0	; 160
 152:	50 e4       	ldi	r21, 0x40	; 64
 154:	0e 94 4c 04 	call	0x898	; 0x898 <__mulsf3>
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	4a e7       	ldi	r20, 0x7A	; 122
 15e:	54 e4       	ldi	r21, 0x44	; 68
 160:	0e 94 4c 04 	call	0x898	; 0x898 <__mulsf3>
 164:	26 2f       	mov	r18, r22
 166:	37 2f       	mov	r19, r23
 168:	48 2f       	mov	r20, r24
 16a:	59 2f       	mov	r21, r25
 16c:	20 93 6c 00 	sts	0x006C, r18
 170:	30 93 6d 00 	sts	0x006D, r19
 174:	40 93 6e 00 	sts	0x006E, r20
 178:	50 93 6f 00 	sts	0x006F, r21
		T=V/10-273;
 17c:	60 91 6c 00 	lds	r22, 0x006C
 180:	70 91 6d 00 	lds	r23, 0x006D
 184:	80 91 6e 00 	lds	r24, 0x006E
 188:	90 91 6f 00 	lds	r25, 0x006F
 18c:	20 e0       	ldi	r18, 0x00	; 0
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	40 e2       	ldi	r20, 0x20	; 32
 192:	51 e4       	ldi	r21, 0x41	; 65
 194:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__divsf3>
 198:	20 e0       	ldi	r18, 0x00	; 0
 19a:	30 e8       	ldi	r19, 0x80	; 128
 19c:	48 e8       	ldi	r20, 0x88	; 136
 19e:	53 e4       	ldi	r21, 0x43	; 67
 1a0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__subsf3>
 1a4:	26 2f       	mov	r18, r22
 1a6:	37 2f       	mov	r19, r23
 1a8:	48 2f       	mov	r20, r24
 1aa:	59 2f       	mov	r21, r25
 1ac:	20 93 68 00 	sts	0x0068, r18
 1b0:	30 93 69 00 	sts	0x0069, r19
 1b4:	40 93 6a 00 	sts	0x006A, r20
 1b8:	50 93 6b 00 	sts	0x006B, r21
		movecursor(2,1);
 1bc:	82 e0       	ldi	r24, 0x02	; 2
 1be:	61 e0       	ldi	r22, 0x01	; 1
 1c0:	0e 94 87 01 	call	0x30e	; 0x30e <movecursor>
		printnumber_lcd(T+1);
 1c4:	60 91 68 00 	lds	r22, 0x0068
 1c8:	70 91 69 00 	lds	r23, 0x0069
 1cc:	80 91 6a 00 	lds	r24, 0x006A
 1d0:	90 91 6b 00 	lds	r25, 0x006B
 1d4:	20 e0       	ldi	r18, 0x00	; 0
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	40 e8       	ldi	r20, 0x80	; 128
 1da:	5f e3       	ldi	r21, 0x3F	; 63
 1dc:	0e 94 00 02 	call	0x400	; 0x400 <__addsf3>
 1e0:	0e 94 fd 02 	call	0x5fa	; 0x5fa <__fixunssfsi>
 1e4:	dc 01       	movw	r26, r24
 1e6:	cb 01       	movw	r24, r22
 1e8:	0e 94 a9 01 	call	0x352	; 0x352 <printnumber_lcd>
		frequency = 0;
 
		// Set the counter's overflow flag to 0
		ACSR &= ~(1 << ACI);
	}*/
}
 1ec:	ff 91       	pop	r31
 1ee:	ef 91       	pop	r30
 1f0:	bf 91       	pop	r27
 1f2:	af 91       	pop	r26
 1f4:	9f 91       	pop	r25
 1f6:	8f 91       	pop	r24
 1f8:	7f 91       	pop	r23
 1fa:	6f 91       	pop	r22
 1fc:	5f 91       	pop	r21
 1fe:	4f 91       	pop	r20
 200:	3f 91       	pop	r19
 202:	2f 91       	pop	r18
 204:	0f 90       	pop	r0
 206:	0f be       	out	0x3f, r0	; 63
 208:	0f 90       	pop	r0
 20a:	1f 90       	pop	r1
 20c:	18 95       	reti

0000020e <main>:
int main()
{
	init_lcd();
 20e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <init_lcd>
 
	PINA=0x00;
 212:	19 ba       	out	0x19, r1	; 25
	DDRA=0xff;
 214:	8f ef       	ldi	r24, 0xFF	; 255
 216:	8a bb       	out	0x1a, r24	; 26
	
	PIND=0x00;
 218:	10 ba       	out	0x10, r1	; 16
	DDRC=0xFF;
 21a:	84 bb       	out	0x14, r24	; 20

	
	TCNT1=0;
 21c:	1d bc       	out	0x2d, r1	; 45
 21e:	1c bc       	out	0x2c, r1	; 44
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 220:	e7 ea       	ldi	r30, 0xA7	; 167
 222:	f1 e6       	ldi	r31, 0x61	; 97
 224:	31 97       	sbiw	r30, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <main+0x16>
 228:	00 c0       	rjmp	.+0      	; 0x22a <main+0x1c>
 22a:	00 00       	nop
	_delay_ms(100);
	
	DDRA=0x00;
 22c:	1a ba       	out	0x1a, r1	; 26
	PINA=0xff;
 22e:	89 bb       	out	0x19, r24	; 25
	TCCR1B = (1<<ICNC1)|(1 << CS10);
 230:	81 e8       	ldi	r24, 0x81	; 129
 232:	8e bd       	out	0x2e, r24	; 46
 
	
	TIMSK = (1 << TICIE1);
 234:	80 e2       	ldi	r24, 0x20	; 32
 236:	89 bf       	out	0x39, r24	; 57
	
	ACSR=(1<<ACIC);
 238:	84 e0       	ldi	r24, 0x04	; 4
 23a:	88 b9       	out	0x08, r24	; 8
 
	
	sei();
 23c:	78 94       	sei
 23e:	ff cf       	rjmp	.-2      	; 0x23e <main+0x30>

00000240 <read_2Nib>:


char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
 240:	aa 9a       	sbi	0x15, 2	; 21
	DDR_DATA=0x0F;
 242:	8f e0       	ldi	r24, 0x0F	; 15
 244:	84 bb       	out	0x14, r24	; 20
	HNib=DATA_input&0xF0;
 246:	83 b3       	in	r24, 0x13	; 19
	clearbit(CTRL,EN);
 248:	aa 98       	cbi	0x15, 2	; 21
	
	setbit(CTRL,EN);
 24a:	aa 9a       	sbi	0x15, 2	; 21
	LNib=DATA_input&0xF0;
 24c:	93 b3       	in	r25, 0x13	; 19
	clearbit(CTRL,EN);
 24e:	aa 98       	cbi	0x15, 2	; 21
	LNib>>=4;
 250:	92 95       	swap	r25
 252:	9f 70       	andi	r25, 0x0F	; 15
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
	DDR_DATA=0x0F;
	HNib=DATA_input&0xF0;
 254:	80 7f       	andi	r24, 0xF0	; 240
	LNib=DATA_input&0xF0;
	clearbit(CTRL,EN);
	LNib>>=4;
	
	return (HNib|LNib);
}
 256:	89 2b       	or	r24, r25
 258:	08 95       	ret

0000025a <write_2Nib>:
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
 25a:	95 b3       	in	r25, 0x15	; 21
 25c:	9f 70       	andi	r25, 0x0F	; 15
	HNib=data&0xF0;
 25e:	28 2f       	mov	r18, r24
 260:	20 7f       	andi	r18, 0xF0	; 240
	LNib=(data<<4)&0xF0;
	
	DATA_output=HNib|temp;
 262:	29 2b       	or	r18, r25
 264:	25 bb       	out	0x15, r18	; 21
	setbit(CTRL,EN);
 266:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 268:	aa 98       	cbi	0x15, 2	; 21
}
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
	HNib=data&0xF0;
	LNib=(data<<4)&0xF0;
 26a:	82 95       	swap	r24
 26c:	80 7f       	andi	r24, 0xF0	; 240
	
	DATA_output=HNib|temp;
	setbit(CTRL,EN);
	clearbit(CTRL,EN);
	
	DATA_output=LNib|temp;
 26e:	98 2b       	or	r25, r24
 270:	95 bb       	out	0x15, r25	; 21
	setbit(CTRL,EN);
 272:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 274:	aa 98       	cbi	0x15, 2	; 21
	
}
 276:	08 95       	ret

00000278 <wait_lcd>:
void wait_lcd(void){
 278:	0f 93       	push	r16
 27a:	1f 93       	push	r17
 27c:	df 93       	push	r29
 27e:	cf 93       	push	r28
 280:	0f 92       	push	r0
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
	while(1){
     	clearbit(CTRL,RS);
		setbit(CTRL,RW);
		temp=read_2Nib();
		
		if(bit_is_clear(temp,7)) break;
 286:	8e 01       	movw	r16, r28
 288:	0f 5f       	subi	r16, 0xFF	; 255
 28a:	1f 4f       	sbci	r17, 0xFF	; 255
}
void wait_lcd(void){
	unsigned char temp;
	
	while(1){
     	clearbit(CTRL,RS);
 28c:	a8 98       	cbi	0x15, 0	; 21
		setbit(CTRL,RW);
 28e:	a9 9a       	sbi	0x15, 1	; 21
		temp=read_2Nib();
 290:	0e 94 20 01 	call	0x240	; 0x240 <read_2Nib>
 294:	89 83       	std	Y+1, r24	; 0x01
		
		if(bit_is_clear(temp,7)) break;
 296:	f8 01       	movw	r30, r16
 298:	80 81       	ld	r24, Z
 29a:	88 23       	and	r24, r24
 29c:	bc f3       	brlt	.-18     	; 0x28c <wait_lcd+0x14>
	}
	clearbit(CTRL,RW);
 29e:	a9 98       	cbi	0x15, 1	; 21
	DDR_DATA=0xFF;
 2a0:	8f ef       	ldi	r24, 0xFF	; 255
 2a2:	84 bb       	out	0x14, r24	; 20
	
}
 2a4:	0f 90       	pop	r0
 2a6:	cf 91       	pop	r28
 2a8:	df 91       	pop	r29
 2aa:	1f 91       	pop	r17
 2ac:	0f 91       	pop	r16
 2ae:	08 95       	ret

000002b0 <init_lcd>:

void init_lcd(){//uses mode 4 bit
	DDR_CTRL=0xFF;
 2b0:	8f ef       	ldi	r24, 0xFF	; 255
 2b2:	84 bb       	out	0x14, r24	; 20
	DDR_DATA=0xFF;
 2b4:	84 bb       	out	0x14, r24	; 20
	clearbit(CTRL,RS);
 2b6:	a8 98       	cbi	0x15, 0	; 21
	clearbit(CTRL,RW);
 2b8:	a9 98       	cbi	0x15, 1	; 21
	clearbit(CTRL,EN);
 2ba:	aa 98       	cbi	0x15, 2	; 21
	
//function set	
	setbit(CTRL,EN);
 2bc:	aa 9a       	sbi	0x15, 2	; 21
	setbit(DATA_output,5);
 2be:	ad 9a       	sbi	0x15, 5	; 21
	clearbit(CTRL,EN);
 2c0:	aa 98       	cbi	0x15, 2	; 21
	wait_lcd();
 2c2:	0e 94 3c 01 	call	0x278	; 0x278 <wait_lcd>
	write_2Nib(0x28);
 2c6:	88 e2       	ldi	r24, 0x28	; 40
 2c8:	0e 94 2d 01 	call	0x25a	; 0x25a <write_2Nib>
	wait_lcd();
 2cc:	0e 94 3c 01 	call	0x278	; 0x278 <wait_lcd>
//display on/off control
    write_2Nib(0x0E);
 2d0:	8e e0       	ldi	r24, 0x0E	; 14
 2d2:	0e 94 2d 01 	call	0x25a	; 0x25a <write_2Nib>
	wait_lcd();
 2d6:	0e 94 3c 01 	call	0x278	; 0x278 <wait_lcd>

//entry mode set 
    
    write_2Nib(0x06);
 2da:	86 e0       	ldi	r24, 0x06	; 6
 2dc:	0e 94 2d 01 	call	0x25a	; 0x25a <write_2Nib>
    wait_lcd();		
 2e0:	0e 94 3c 01 	call	0x278	; 0x278 <wait_lcd>
}
 2e4:	08 95       	ret

000002e6 <putchar_lcd>:
void putchar_lcd(unsigned char data){
	
	setbit(CTRL,RS);
 2e6:	a8 9a       	sbi	0x15, 0	; 21
	write_2Nib(data);
 2e8:	0e 94 2d 01 	call	0x25a	; 0x25a <write_2Nib>
	wait_lcd();
 2ec:	0e 94 3c 01 	call	0x278	; 0x278 <wait_lcd>
}
 2f0:	08 95       	ret

000002f2 <cursor_home>:
void cursor_home(){
	clearbit(CTRL,RS);
 2f2:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x03);
 2f4:	83 e0       	ldi	r24, 0x03	; 3
 2f6:	0e 94 2d 01 	call	0x25a	; 0x25a <write_2Nib>
	wait_lcd();
 2fa:	0e 94 3c 01 	call	0x278	; 0x278 <wait_lcd>
}
 2fe:	08 95       	ret

00000300 <clear_lcd>:
void clear_lcd(){
	clearbit(CTRL,RS);
 300:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	0e 94 2d 01 	call	0x25a	; 0x25a <write_2Nib>
	wait_lcd();
 308:	0e 94 3c 01 	call	0x278	; 0x278 <wait_lcd>
}
 30c:	08 95       	ret

0000030e <movecursor>:
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
	clearbit(CTRL,RS);
 30e:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
	wait_lcd();
}
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
 310:	82 95       	swap	r24
 312:	88 0f       	add	r24, r24
 314:	88 0f       	add	r24, r24
 316:	80 7c       	andi	r24, 0xC0	; 192
 318:	86 0f       	add	r24, r22
	clearbit(CTRL,RS);
	write_2Nib(x);
 31a:	81 5c       	subi	r24, 0xC1	; 193
 31c:	0e 94 2d 01 	call	0x25a	; 0x25a <write_2Nib>
	wait_lcd();
 320:	0e 94 3c 01 	call	0x278	; 0x278 <wait_lcd>
}
 324:	08 95       	ret

00000326 <count_number>:
int count_number(unsigned int number){
 326:	bc 01       	movw	r22, r24
	int dem=0;
	while(number){
 328:	00 97       	sbiw	r24, 0x00	; 0
 32a:	71 f0       	breq	.+28     	; 0x348 <count_number+0x22>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 32c:	20 e0       	ldi	r18, 0x00	; 0
 32e:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
 330:	ea e0       	ldi	r30, 0x0A	; 10
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	cb 01       	movw	r24, r22
 336:	bf 01       	movw	r22, r30
 338:	0e 94 bd 04 	call	0x97a	; 0x97a <__udivmodhi4>
		dem++;
 33c:	2f 5f       	subi	r18, 0xFF	; 255
 33e:	3f 4f       	sbci	r19, 0xFF	; 255
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
	while(number){
 340:	61 15       	cp	r22, r1
 342:	71 05       	cpc	r23, r1
 344:	b9 f7       	brne	.-18     	; 0x334 <count_number+0xe>
 346:	02 c0       	rjmp	.+4      	; 0x34c <count_number+0x26>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 348:	20 e0       	ldi	r18, 0x00	; 0
 34a:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
		dem++;
	}
	return dem;
}
 34c:	82 2f       	mov	r24, r18
 34e:	93 2f       	mov	r25, r19
 350:	08 95       	ret

00000352 <printnumber_lcd>:
void printnumber_lcd(unsigned int number){
 352:	1f 93       	push	r17
 354:	cf 93       	push	r28
 356:	df 93       	push	r29
		temp=temp/10;
		putchar_lcd(a+48);
	}*/
	int a,b,c,d,e;
	a=number/10000;
	number=number%10000;
 358:	60 e1       	ldi	r22, 0x10	; 16
 35a:	77 e2       	ldi	r23, 0x27	; 39
 35c:	0e 94 bd 04 	call	0x97a	; 0x97a <__udivmodhi4>
 360:	ec 01       	movw	r28, r24
	putchar_lcd(a+48);
 362:	86 2f       	mov	r24, r22
 364:	80 5d       	subi	r24, 0xD0	; 208
 366:	0e 94 73 01 	call	0x2e6	; 0x2e6 <putchar_lcd>
	b=number/1000;
 36a:	ce 01       	movw	r24, r28
 36c:	68 ee       	ldi	r22, 0xE8	; 232
 36e:	73 e0       	ldi	r23, 0x03	; 3
 370:	0e 94 bd 04 	call	0x97a	; 0x97a <__udivmodhi4>
 374:	ec 01       	movw	r28, r24
	putchar_lcd(b+48);
 376:	86 2f       	mov	r24, r22
 378:	80 5d       	subi	r24, 0xD0	; 208
 37a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <putchar_lcd>
	number=number%1000;
	c=number/100;
 37e:	ce 01       	movw	r24, r28
 380:	64 e6       	ldi	r22, 0x64	; 100
 382:	70 e0       	ldi	r23, 0x00	; 0
 384:	0e 94 bd 04 	call	0x97a	; 0x97a <__udivmodhi4>
 388:	ec 01       	movw	r28, r24
	putchar_lcd(c+48);
 38a:	86 2f       	mov	r24, r22
 38c:	80 5d       	subi	r24, 0xD0	; 208
 38e:	0e 94 73 01 	call	0x2e6	; 0x2e6 <putchar_lcd>
	number=number%100;
	d=number/10;
 392:	ce 01       	movw	r24, r28
 394:	6a e0       	ldi	r22, 0x0A	; 10
 396:	70 e0       	ldi	r23, 0x00	; 0
 398:	0e 94 bd 04 	call	0x97a	; 0x97a <__udivmodhi4>
 39c:	18 2f       	mov	r17, r24
	putchar_lcd(d+48);
 39e:	86 2f       	mov	r24, r22
 3a0:	80 5d       	subi	r24, 0xD0	; 208
 3a2:	0e 94 73 01 	call	0x2e6	; 0x2e6 <putchar_lcd>
	e=number%10;
	putchar_lcd(e+48);
 3a6:	81 2f       	mov	r24, r17
 3a8:	80 5d       	subi	r24, 0xD0	; 208
 3aa:	0e 94 73 01 	call	0x2e6	; 0x2e6 <putchar_lcd>
}
 3ae:	df 91       	pop	r29
 3b0:	cf 91       	pop	r28
 3b2:	1f 91       	pop	r17
 3b4:	08 95       	ret

000003b6 <putstr_lcd>:
putstr_lcd(unsigned char *str, unsigned int lenght){
 3b6:	ef 92       	push	r14
 3b8:	ff 92       	push	r15
 3ba:	0f 93       	push	r16
 3bc:	1f 93       	push	r17
 3be:	cf 93       	push	r28
 3c0:	df 93       	push	r29
 3c2:	7b 01       	movw	r14, r22
	unsigned int i;
	for(i=0;i<lenght;i++){
 3c4:	61 15       	cp	r22, r1
 3c6:	71 05       	cpc	r23, r1
 3c8:	99 f0       	breq	.+38     	; 0x3f0 <putstr_lcd+0x3a>
 3ca:	08 2f       	mov	r16, r24
 3cc:	19 2f       	mov	r17, r25
 3ce:	c0 e0       	ldi	r28, 0x00	; 0
 3d0:	d0 e0       	ldi	r29, 0x00	; 0
		if(*(str+i)>0){ 
 3d2:	f8 01       	movw	r30, r16
 3d4:	81 91       	ld	r24, Z+
 3d6:	8f 01       	movw	r16, r30
 3d8:	88 23       	and	r24, r24
 3da:	19 f0       	breq	.+6      	; 0x3e2 <putstr_lcd+0x2c>
			putchar_lcd(*(str+i));
 3dc:	0e 94 73 01 	call	0x2e6	; 0x2e6 <putchar_lcd>
 3e0:	03 c0       	rjmp	.+6      	; 0x3e8 <putstr_lcd+0x32>
			}
		else putchar_lcd(0);	
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	0e 94 73 01 	call	0x2e6	; 0x2e6 <putchar_lcd>
	e=number%10;
	putchar_lcd(e+48);
}
putstr_lcd(unsigned char *str, unsigned int lenght){
	unsigned int i;
	for(i=0;i<lenght;i++){
 3e8:	21 96       	adiw	r28, 0x01	; 1
 3ea:	ce 15       	cp	r28, r14
 3ec:	df 05       	cpc	r29, r15
 3ee:	88 f3       	brcs	.-30     	; 0x3d2 <putstr_lcd+0x1c>
		if(*(str+i)>0){ 
			putchar_lcd(*(str+i));
			}
		else putchar_lcd(0);	
}
}
 3f0:	df 91       	pop	r29
 3f2:	cf 91       	pop	r28
 3f4:	1f 91       	pop	r17
 3f6:	0f 91       	pop	r16
 3f8:	ff 90       	pop	r15
 3fa:	ef 90       	pop	r14
 3fc:	08 95       	ret

000003fe <__subsf3>:
 3fe:	50 58       	subi	r21, 0x80	; 128

00000400 <__addsf3>:
 400:	bb 27       	eor	r27, r27
 402:	aa 27       	eor	r26, r26
 404:	0e d0       	rcall	.+28     	; 0x422 <__addsf3x>
 406:	9e c1       	rjmp	.+828    	; 0x744 <__fp_round>
 408:	8f d1       	rcall	.+798    	; 0x728 <__fp_pscA>
 40a:	30 f0       	brcs	.+12     	; 0x418 <__addsf3+0x18>
 40c:	94 d1       	rcall	.+808    	; 0x736 <__fp_pscB>
 40e:	20 f0       	brcs	.+8      	; 0x418 <__addsf3+0x18>
 410:	31 f4       	brne	.+12     	; 0x41e <__addsf3+0x1e>
 412:	9f 3f       	cpi	r25, 0xFF	; 255
 414:	11 f4       	brne	.+4      	; 0x41a <__addsf3+0x1a>
 416:	1e f4       	brtc	.+6      	; 0x41e <__addsf3+0x1e>
 418:	5f c1       	rjmp	.+702    	; 0x6d8 <__fp_nan>
 41a:	0e f4       	brtc	.+2      	; 0x41e <__addsf3+0x1e>
 41c:	e0 95       	com	r30
 41e:	e7 fb       	bst	r30, 7
 420:	55 c1       	rjmp	.+682    	; 0x6cc <__fp_inf>

00000422 <__addsf3x>:
 422:	e9 2f       	mov	r30, r25
 424:	a0 d1       	rcall	.+832    	; 0x766 <__fp_split3>
 426:	80 f3       	brcs	.-32     	; 0x408 <__addsf3+0x8>
 428:	ba 17       	cp	r27, r26
 42a:	62 07       	cpc	r22, r18
 42c:	73 07       	cpc	r23, r19
 42e:	84 07       	cpc	r24, r20
 430:	95 07       	cpc	r25, r21
 432:	18 f0       	brcs	.+6      	; 0x43a <__addsf3x+0x18>
 434:	71 f4       	brne	.+28     	; 0x452 <__addsf3x+0x30>
 436:	9e f5       	brtc	.+102    	; 0x49e <__stack+0x3f>
 438:	b8 c1       	rjmp	.+880    	; 0x7aa <__fp_zero>
 43a:	0e f4       	brtc	.+2      	; 0x43e <__addsf3x+0x1c>
 43c:	e0 95       	com	r30
 43e:	0b 2e       	mov	r0, r27
 440:	ba 2f       	mov	r27, r26
 442:	a0 2d       	mov	r26, r0
 444:	0b 01       	movw	r0, r22
 446:	b9 01       	movw	r22, r18
 448:	90 01       	movw	r18, r0
 44a:	0c 01       	movw	r0, r24
 44c:	ca 01       	movw	r24, r20
 44e:	a0 01       	movw	r20, r0
 450:	11 24       	eor	r1, r1
 452:	ff 27       	eor	r31, r31
 454:	59 1b       	sub	r21, r25
 456:	99 f0       	breq	.+38     	; 0x47e <__stack+0x1f>
 458:	59 3f       	cpi	r21, 0xF9	; 249
 45a:	50 f4       	brcc	.+20     	; 0x470 <__stack+0x11>
 45c:	50 3e       	cpi	r21, 0xE0	; 224
 45e:	68 f1       	brcs	.+90     	; 0x4ba <__stack+0x5b>
 460:	1a 16       	cp	r1, r26
 462:	f0 40       	sbci	r31, 0x00	; 0
 464:	a2 2f       	mov	r26, r18
 466:	23 2f       	mov	r18, r19
 468:	34 2f       	mov	r19, r20
 46a:	44 27       	eor	r20, r20
 46c:	58 5f       	subi	r21, 0xF8	; 248
 46e:	f3 cf       	rjmp	.-26     	; 0x456 <__addsf3x+0x34>
 470:	46 95       	lsr	r20
 472:	37 95       	ror	r19
 474:	27 95       	ror	r18
 476:	a7 95       	ror	r26
 478:	f0 40       	sbci	r31, 0x00	; 0
 47a:	53 95       	inc	r21
 47c:	c9 f7       	brne	.-14     	; 0x470 <__stack+0x11>
 47e:	7e f4       	brtc	.+30     	; 0x49e <__stack+0x3f>
 480:	1f 16       	cp	r1, r31
 482:	ba 0b       	sbc	r27, r26
 484:	62 0b       	sbc	r22, r18
 486:	73 0b       	sbc	r23, r19
 488:	84 0b       	sbc	r24, r20
 48a:	ba f0       	brmi	.+46     	; 0x4ba <__stack+0x5b>
 48c:	91 50       	subi	r25, 0x01	; 1
 48e:	a1 f0       	breq	.+40     	; 0x4b8 <__stack+0x59>
 490:	ff 0f       	add	r31, r31
 492:	bb 1f       	adc	r27, r27
 494:	66 1f       	adc	r22, r22
 496:	77 1f       	adc	r23, r23
 498:	88 1f       	adc	r24, r24
 49a:	c2 f7       	brpl	.-16     	; 0x48c <__stack+0x2d>
 49c:	0e c0       	rjmp	.+28     	; 0x4ba <__stack+0x5b>
 49e:	ba 0f       	add	r27, r26
 4a0:	62 1f       	adc	r22, r18
 4a2:	73 1f       	adc	r23, r19
 4a4:	84 1f       	adc	r24, r20
 4a6:	48 f4       	brcc	.+18     	; 0x4ba <__stack+0x5b>
 4a8:	87 95       	ror	r24
 4aa:	77 95       	ror	r23
 4ac:	67 95       	ror	r22
 4ae:	b7 95       	ror	r27
 4b0:	f7 95       	ror	r31
 4b2:	9e 3f       	cpi	r25, 0xFE	; 254
 4b4:	08 f0       	brcs	.+2      	; 0x4b8 <__stack+0x59>
 4b6:	b3 cf       	rjmp	.-154    	; 0x41e <__addsf3+0x1e>
 4b8:	93 95       	inc	r25
 4ba:	88 0f       	add	r24, r24
 4bc:	08 f0       	brcs	.+2      	; 0x4c0 <__stack+0x61>
 4be:	99 27       	eor	r25, r25
 4c0:	ee 0f       	add	r30, r30
 4c2:	97 95       	ror	r25
 4c4:	87 95       	ror	r24
 4c6:	08 95       	ret

000004c8 <__divsf3>:
 4c8:	0c d0       	rcall	.+24     	; 0x4e2 <__divsf3x>
 4ca:	3c c1       	rjmp	.+632    	; 0x744 <__fp_round>
 4cc:	34 d1       	rcall	.+616    	; 0x736 <__fp_pscB>
 4ce:	40 f0       	brcs	.+16     	; 0x4e0 <__divsf3+0x18>
 4d0:	2b d1       	rcall	.+598    	; 0x728 <__fp_pscA>
 4d2:	30 f0       	brcs	.+12     	; 0x4e0 <__divsf3+0x18>
 4d4:	21 f4       	brne	.+8      	; 0x4de <__divsf3+0x16>
 4d6:	5f 3f       	cpi	r21, 0xFF	; 255
 4d8:	19 f0       	breq	.+6      	; 0x4e0 <__divsf3+0x18>
 4da:	f8 c0       	rjmp	.+496    	; 0x6cc <__fp_inf>
 4dc:	51 11       	cpse	r21, r1
 4de:	66 c1       	rjmp	.+716    	; 0x7ac <__fp_szero>
 4e0:	fb c0       	rjmp	.+502    	; 0x6d8 <__fp_nan>

000004e2 <__divsf3x>:
 4e2:	41 d1       	rcall	.+642    	; 0x766 <__fp_split3>
 4e4:	98 f3       	brcs	.-26     	; 0x4cc <__divsf3+0x4>

000004e6 <__divsf3_pse>:
 4e6:	99 23       	and	r25, r25
 4e8:	c9 f3       	breq	.-14     	; 0x4dc <__divsf3+0x14>
 4ea:	55 23       	and	r21, r21
 4ec:	b1 f3       	breq	.-20     	; 0x4da <__divsf3+0x12>
 4ee:	95 1b       	sub	r25, r21
 4f0:	55 0b       	sbc	r21, r21
 4f2:	bb 27       	eor	r27, r27
 4f4:	aa 27       	eor	r26, r26
 4f6:	62 17       	cp	r22, r18
 4f8:	73 07       	cpc	r23, r19
 4fa:	84 07       	cpc	r24, r20
 4fc:	38 f0       	brcs	.+14     	; 0x50c <__divsf3_pse+0x26>
 4fe:	9f 5f       	subi	r25, 0xFF	; 255
 500:	5f 4f       	sbci	r21, 0xFF	; 255
 502:	22 0f       	add	r18, r18
 504:	33 1f       	adc	r19, r19
 506:	44 1f       	adc	r20, r20
 508:	aa 1f       	adc	r26, r26
 50a:	a9 f3       	breq	.-22     	; 0x4f6 <__divsf3_pse+0x10>
 50c:	33 d0       	rcall	.+102    	; 0x574 <__divsf3_pse+0x8e>
 50e:	0e 2e       	mov	r0, r30
 510:	3a f0       	brmi	.+14     	; 0x520 <__divsf3_pse+0x3a>
 512:	e0 e8       	ldi	r30, 0x80	; 128
 514:	30 d0       	rcall	.+96     	; 0x576 <__divsf3_pse+0x90>
 516:	91 50       	subi	r25, 0x01	; 1
 518:	50 40       	sbci	r21, 0x00	; 0
 51a:	e6 95       	lsr	r30
 51c:	00 1c       	adc	r0, r0
 51e:	ca f7       	brpl	.-14     	; 0x512 <__divsf3_pse+0x2c>
 520:	29 d0       	rcall	.+82     	; 0x574 <__divsf3_pse+0x8e>
 522:	fe 2f       	mov	r31, r30
 524:	27 d0       	rcall	.+78     	; 0x574 <__divsf3_pse+0x8e>
 526:	66 0f       	add	r22, r22
 528:	77 1f       	adc	r23, r23
 52a:	88 1f       	adc	r24, r24
 52c:	bb 1f       	adc	r27, r27
 52e:	26 17       	cp	r18, r22
 530:	37 07       	cpc	r19, r23
 532:	48 07       	cpc	r20, r24
 534:	ab 07       	cpc	r26, r27
 536:	b0 e8       	ldi	r27, 0x80	; 128
 538:	09 f0       	breq	.+2      	; 0x53c <__divsf3_pse+0x56>
 53a:	bb 0b       	sbc	r27, r27
 53c:	80 2d       	mov	r24, r0
 53e:	bf 01       	movw	r22, r30
 540:	ff 27       	eor	r31, r31
 542:	93 58       	subi	r25, 0x83	; 131
 544:	5f 4f       	sbci	r21, 0xFF	; 255
 546:	2a f0       	brmi	.+10     	; 0x552 <__divsf3_pse+0x6c>
 548:	9e 3f       	cpi	r25, 0xFE	; 254
 54a:	51 05       	cpc	r21, r1
 54c:	68 f0       	brcs	.+26     	; 0x568 <__divsf3_pse+0x82>
 54e:	be c0       	rjmp	.+380    	; 0x6cc <__fp_inf>
 550:	2d c1       	rjmp	.+602    	; 0x7ac <__fp_szero>
 552:	5f 3f       	cpi	r21, 0xFF	; 255
 554:	ec f3       	brlt	.-6      	; 0x550 <__divsf3_pse+0x6a>
 556:	98 3e       	cpi	r25, 0xE8	; 232
 558:	dc f3       	brlt	.-10     	; 0x550 <__divsf3_pse+0x6a>
 55a:	86 95       	lsr	r24
 55c:	77 95       	ror	r23
 55e:	67 95       	ror	r22
 560:	b7 95       	ror	r27
 562:	f7 95       	ror	r31
 564:	9f 5f       	subi	r25, 0xFF	; 255
 566:	c9 f7       	brne	.-14     	; 0x55a <__divsf3_pse+0x74>
 568:	88 0f       	add	r24, r24
 56a:	91 1d       	adc	r25, r1
 56c:	96 95       	lsr	r25
 56e:	87 95       	ror	r24
 570:	97 f9       	bld	r25, 7
 572:	08 95       	ret
 574:	e1 e0       	ldi	r30, 0x01	; 1
 576:	66 0f       	add	r22, r22
 578:	77 1f       	adc	r23, r23
 57a:	88 1f       	adc	r24, r24
 57c:	bb 1f       	adc	r27, r27
 57e:	62 17       	cp	r22, r18
 580:	73 07       	cpc	r23, r19
 582:	84 07       	cpc	r24, r20
 584:	ba 07       	cpc	r27, r26
 586:	20 f0       	brcs	.+8      	; 0x590 <__divsf3_pse+0xaa>
 588:	62 1b       	sub	r22, r18
 58a:	73 0b       	sbc	r23, r19
 58c:	84 0b       	sbc	r24, r20
 58e:	ba 0b       	sbc	r27, r26
 590:	ee 1f       	adc	r30, r30
 592:	88 f7       	brcc	.-30     	; 0x576 <__divsf3_pse+0x90>
 594:	e0 95       	com	r30
 596:	08 95       	ret
 598:	19 f4       	brne	.+6      	; 0x5a0 <__divsf3_pse+0xba>
 59a:	0e f0       	brts	.+2      	; 0x59e <__divsf3_pse+0xb8>
 59c:	97 c0       	rjmp	.+302    	; 0x6cc <__fp_inf>
 59e:	05 c1       	rjmp	.+522    	; 0x7aa <__fp_zero>
 5a0:	9b c0       	rjmp	.+310    	; 0x6d8 <__fp_nan>

000005a2 <exp>:
 5a2:	e9 d0       	rcall	.+466    	; 0x776 <__fp_splitA>
 5a4:	c8 f3       	brcs	.-14     	; 0x598 <__divsf3_pse+0xb2>
 5a6:	96 38       	cpi	r25, 0x86	; 134
 5a8:	c0 f7       	brcc	.-16     	; 0x59a <__divsf3_pse+0xb4>
 5aa:	07 f8       	bld	r0, 7
 5ac:	0f 92       	push	r0
 5ae:	e8 94       	clt
 5b0:	2b e3       	ldi	r18, 0x3B	; 59
 5b2:	3a ea       	ldi	r19, 0xAA	; 170
 5b4:	48 eb       	ldi	r20, 0xB8	; 184
 5b6:	5f e7       	ldi	r21, 0x7F	; 127
 5b8:	7d d1       	rcall	.+762    	; 0x8b4 <__mulsf3_pse>
 5ba:	0f 92       	push	r0
 5bc:	0f 92       	push	r0
 5be:	0f 92       	push	r0
 5c0:	4d b7       	in	r20, 0x3d	; 61
 5c2:	5e b7       	in	r21, 0x3e	; 62
 5c4:	0f 92       	push	r0
 5c6:	35 d1       	rcall	.+618    	; 0x832 <modf>
 5c8:	e4 e5       	ldi	r30, 0x54	; 84
 5ca:	f0 e0       	ldi	r31, 0x00	; 0
 5cc:	88 d0       	rcall	.+272    	; 0x6de <__fp_powser>
 5ce:	4f 91       	pop	r20
 5d0:	5f 91       	pop	r21
 5d2:	ef 91       	pop	r30
 5d4:	ff 91       	pop	r31
 5d6:	e5 95       	asr	r30
 5d8:	ee 1f       	adc	r30, r30
 5da:	ff 1f       	adc	r31, r31
 5dc:	49 f0       	breq	.+18     	; 0x5f0 <exp+0x4e>
 5de:	fe 57       	subi	r31, 0x7E	; 126
 5e0:	e0 68       	ori	r30, 0x80	; 128
 5e2:	44 27       	eor	r20, r20
 5e4:	ee 0f       	add	r30, r30
 5e6:	44 1f       	adc	r20, r20
 5e8:	fa 95       	dec	r31
 5ea:	e1 f7       	brne	.-8      	; 0x5e4 <exp+0x42>
 5ec:	41 95       	neg	r20
 5ee:	55 0b       	sbc	r21, r21
 5f0:	ec d0       	rcall	.+472    	; 0x7ca <ldexp>
 5f2:	0f 90       	pop	r0
 5f4:	07 fe       	sbrs	r0, 7
 5f6:	e0 c0       	rjmp	.+448    	; 0x7b8 <inverse>
 5f8:	08 95       	ret

000005fa <__fixunssfsi>:
 5fa:	bd d0       	rcall	.+378    	; 0x776 <__fp_splitA>
 5fc:	88 f0       	brcs	.+34     	; 0x620 <__fixunssfsi+0x26>
 5fe:	9f 57       	subi	r25, 0x7F	; 127
 600:	90 f0       	brcs	.+36     	; 0x626 <__fixunssfsi+0x2c>
 602:	b9 2f       	mov	r27, r25
 604:	99 27       	eor	r25, r25
 606:	b7 51       	subi	r27, 0x17	; 23
 608:	a0 f0       	brcs	.+40     	; 0x632 <__fixunssfsi+0x38>
 60a:	d1 f0       	breq	.+52     	; 0x640 <__fixunssfsi+0x46>
 60c:	66 0f       	add	r22, r22
 60e:	77 1f       	adc	r23, r23
 610:	88 1f       	adc	r24, r24
 612:	99 1f       	adc	r25, r25
 614:	1a f0       	brmi	.+6      	; 0x61c <__fixunssfsi+0x22>
 616:	ba 95       	dec	r27
 618:	c9 f7       	brne	.-14     	; 0x60c <__fixunssfsi+0x12>
 61a:	12 c0       	rjmp	.+36     	; 0x640 <__fixunssfsi+0x46>
 61c:	b1 30       	cpi	r27, 0x01	; 1
 61e:	81 f0       	breq	.+32     	; 0x640 <__fixunssfsi+0x46>
 620:	c4 d0       	rcall	.+392    	; 0x7aa <__fp_zero>
 622:	b1 e0       	ldi	r27, 0x01	; 1
 624:	08 95       	ret
 626:	c1 c0       	rjmp	.+386    	; 0x7aa <__fp_zero>
 628:	67 2f       	mov	r22, r23
 62a:	78 2f       	mov	r23, r24
 62c:	88 27       	eor	r24, r24
 62e:	b8 5f       	subi	r27, 0xF8	; 248
 630:	39 f0       	breq	.+14     	; 0x640 <__fixunssfsi+0x46>
 632:	b9 3f       	cpi	r27, 0xF9	; 249
 634:	cc f3       	brlt	.-14     	; 0x628 <__fixunssfsi+0x2e>
 636:	86 95       	lsr	r24
 638:	77 95       	ror	r23
 63a:	67 95       	ror	r22
 63c:	b3 95       	inc	r27
 63e:	d9 f7       	brne	.-10     	; 0x636 <__fixunssfsi+0x3c>
 640:	3e f4       	brtc	.+14     	; 0x650 <__fixunssfsi+0x56>
 642:	90 95       	com	r25
 644:	80 95       	com	r24
 646:	70 95       	com	r23
 648:	61 95       	neg	r22
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	08 95       	ret

00000652 <__floatunsisf>:
 652:	e8 94       	clt
 654:	09 c0       	rjmp	.+18     	; 0x668 <__floatsisf+0x12>

00000656 <__floatsisf>:
 656:	97 fb       	bst	r25, 7
 658:	3e f4       	brtc	.+14     	; 0x668 <__floatsisf+0x12>
 65a:	90 95       	com	r25
 65c:	80 95       	com	r24
 65e:	70 95       	com	r23
 660:	61 95       	neg	r22
 662:	7f 4f       	sbci	r23, 0xFF	; 255
 664:	8f 4f       	sbci	r24, 0xFF	; 255
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	99 23       	and	r25, r25
 66a:	a9 f0       	breq	.+42     	; 0x696 <__floatsisf+0x40>
 66c:	f9 2f       	mov	r31, r25
 66e:	96 e9       	ldi	r25, 0x96	; 150
 670:	bb 27       	eor	r27, r27
 672:	93 95       	inc	r25
 674:	f6 95       	lsr	r31
 676:	87 95       	ror	r24
 678:	77 95       	ror	r23
 67a:	67 95       	ror	r22
 67c:	b7 95       	ror	r27
 67e:	f1 11       	cpse	r31, r1
 680:	f8 cf       	rjmp	.-16     	; 0x672 <__floatsisf+0x1c>
 682:	fa f4       	brpl	.+62     	; 0x6c2 <__floatsisf+0x6c>
 684:	bb 0f       	add	r27, r27
 686:	11 f4       	brne	.+4      	; 0x68c <__floatsisf+0x36>
 688:	60 ff       	sbrs	r22, 0
 68a:	1b c0       	rjmp	.+54     	; 0x6c2 <__floatsisf+0x6c>
 68c:	6f 5f       	subi	r22, 0xFF	; 255
 68e:	7f 4f       	sbci	r23, 0xFF	; 255
 690:	8f 4f       	sbci	r24, 0xFF	; 255
 692:	9f 4f       	sbci	r25, 0xFF	; 255
 694:	16 c0       	rjmp	.+44     	; 0x6c2 <__floatsisf+0x6c>
 696:	88 23       	and	r24, r24
 698:	11 f0       	breq	.+4      	; 0x69e <__floatsisf+0x48>
 69a:	96 e9       	ldi	r25, 0x96	; 150
 69c:	11 c0       	rjmp	.+34     	; 0x6c0 <__floatsisf+0x6a>
 69e:	77 23       	and	r23, r23
 6a0:	21 f0       	breq	.+8      	; 0x6aa <__floatsisf+0x54>
 6a2:	9e e8       	ldi	r25, 0x8E	; 142
 6a4:	87 2f       	mov	r24, r23
 6a6:	76 2f       	mov	r23, r22
 6a8:	05 c0       	rjmp	.+10     	; 0x6b4 <__floatsisf+0x5e>
 6aa:	66 23       	and	r22, r22
 6ac:	71 f0       	breq	.+28     	; 0x6ca <__floatsisf+0x74>
 6ae:	96 e8       	ldi	r25, 0x86	; 134
 6b0:	86 2f       	mov	r24, r22
 6b2:	70 e0       	ldi	r23, 0x00	; 0
 6b4:	60 e0       	ldi	r22, 0x00	; 0
 6b6:	2a f0       	brmi	.+10     	; 0x6c2 <__floatsisf+0x6c>
 6b8:	9a 95       	dec	r25
 6ba:	66 0f       	add	r22, r22
 6bc:	77 1f       	adc	r23, r23
 6be:	88 1f       	adc	r24, r24
 6c0:	da f7       	brpl	.-10     	; 0x6b8 <__floatsisf+0x62>
 6c2:	88 0f       	add	r24, r24
 6c4:	96 95       	lsr	r25
 6c6:	87 95       	ror	r24
 6c8:	97 f9       	bld	r25, 7
 6ca:	08 95       	ret

000006cc <__fp_inf>:
 6cc:	97 f9       	bld	r25, 7
 6ce:	9f 67       	ori	r25, 0x7F	; 127
 6d0:	80 e8       	ldi	r24, 0x80	; 128
 6d2:	70 e0       	ldi	r23, 0x00	; 0
 6d4:	60 e0       	ldi	r22, 0x00	; 0
 6d6:	08 95       	ret

000006d8 <__fp_nan>:
 6d8:	9f ef       	ldi	r25, 0xFF	; 255
 6da:	80 ec       	ldi	r24, 0xC0	; 192
 6dc:	08 95       	ret

000006de <__fp_powser>:
 6de:	df 93       	push	r29
 6e0:	cf 93       	push	r28
 6e2:	1f 93       	push	r17
 6e4:	0f 93       	push	r16
 6e6:	ff 92       	push	r15
 6e8:	ef 92       	push	r14
 6ea:	df 92       	push	r13
 6ec:	7b 01       	movw	r14, r22
 6ee:	8c 01       	movw	r16, r24
 6f0:	68 94       	set
 6f2:	05 c0       	rjmp	.+10     	; 0x6fe <__fp_powser+0x20>
 6f4:	da 2e       	mov	r13, r26
 6f6:	ef 01       	movw	r28, r30
 6f8:	db d0       	rcall	.+438    	; 0x8b0 <__mulsf3x>
 6fa:	fe 01       	movw	r30, r28
 6fc:	e8 94       	clt
 6fe:	a5 91       	lpm	r26, Z+
 700:	25 91       	lpm	r18, Z+
 702:	35 91       	lpm	r19, Z+
 704:	45 91       	lpm	r20, Z+
 706:	55 91       	lpm	r21, Z+
 708:	ae f3       	brts	.-22     	; 0x6f4 <__fp_powser+0x16>
 70a:	ef 01       	movw	r28, r30
 70c:	8a de       	rcall	.-748    	; 0x422 <__addsf3x>
 70e:	fe 01       	movw	r30, r28
 710:	97 01       	movw	r18, r14
 712:	a8 01       	movw	r20, r16
 714:	da 94       	dec	r13
 716:	79 f7       	brne	.-34     	; 0x6f6 <__fp_powser+0x18>
 718:	df 90       	pop	r13
 71a:	ef 90       	pop	r14
 71c:	ff 90       	pop	r15
 71e:	0f 91       	pop	r16
 720:	1f 91       	pop	r17
 722:	cf 91       	pop	r28
 724:	df 91       	pop	r29
 726:	08 95       	ret

00000728 <__fp_pscA>:
 728:	00 24       	eor	r0, r0
 72a:	0a 94       	dec	r0
 72c:	16 16       	cp	r1, r22
 72e:	17 06       	cpc	r1, r23
 730:	18 06       	cpc	r1, r24
 732:	09 06       	cpc	r0, r25
 734:	08 95       	ret

00000736 <__fp_pscB>:
 736:	00 24       	eor	r0, r0
 738:	0a 94       	dec	r0
 73a:	12 16       	cp	r1, r18
 73c:	13 06       	cpc	r1, r19
 73e:	14 06       	cpc	r1, r20
 740:	05 06       	cpc	r0, r21
 742:	08 95       	ret

00000744 <__fp_round>:
 744:	09 2e       	mov	r0, r25
 746:	03 94       	inc	r0
 748:	00 0c       	add	r0, r0
 74a:	11 f4       	brne	.+4      	; 0x750 <__fp_round+0xc>
 74c:	88 23       	and	r24, r24
 74e:	52 f0       	brmi	.+20     	; 0x764 <__fp_round+0x20>
 750:	bb 0f       	add	r27, r27
 752:	40 f4       	brcc	.+16     	; 0x764 <__fp_round+0x20>
 754:	bf 2b       	or	r27, r31
 756:	11 f4       	brne	.+4      	; 0x75c <__fp_round+0x18>
 758:	60 ff       	sbrs	r22, 0
 75a:	04 c0       	rjmp	.+8      	; 0x764 <__fp_round+0x20>
 75c:	6f 5f       	subi	r22, 0xFF	; 255
 75e:	7f 4f       	sbci	r23, 0xFF	; 255
 760:	8f 4f       	sbci	r24, 0xFF	; 255
 762:	9f 4f       	sbci	r25, 0xFF	; 255
 764:	08 95       	ret

00000766 <__fp_split3>:
 766:	57 fd       	sbrc	r21, 7
 768:	90 58       	subi	r25, 0x80	; 128
 76a:	44 0f       	add	r20, r20
 76c:	55 1f       	adc	r21, r21
 76e:	59 f0       	breq	.+22     	; 0x786 <__fp_splitA+0x10>
 770:	5f 3f       	cpi	r21, 0xFF	; 255
 772:	71 f0       	breq	.+28     	; 0x790 <__fp_splitA+0x1a>
 774:	47 95       	ror	r20

00000776 <__fp_splitA>:
 776:	88 0f       	add	r24, r24
 778:	97 fb       	bst	r25, 7
 77a:	99 1f       	adc	r25, r25
 77c:	61 f0       	breq	.+24     	; 0x796 <__fp_splitA+0x20>
 77e:	9f 3f       	cpi	r25, 0xFF	; 255
 780:	79 f0       	breq	.+30     	; 0x7a0 <__fp_splitA+0x2a>
 782:	87 95       	ror	r24
 784:	08 95       	ret
 786:	12 16       	cp	r1, r18
 788:	13 06       	cpc	r1, r19
 78a:	14 06       	cpc	r1, r20
 78c:	55 1f       	adc	r21, r21
 78e:	f2 cf       	rjmp	.-28     	; 0x774 <__fp_split3+0xe>
 790:	46 95       	lsr	r20
 792:	f1 df       	rcall	.-30     	; 0x776 <__fp_splitA>
 794:	08 c0       	rjmp	.+16     	; 0x7a6 <__fp_splitA+0x30>
 796:	16 16       	cp	r1, r22
 798:	17 06       	cpc	r1, r23
 79a:	18 06       	cpc	r1, r24
 79c:	99 1f       	adc	r25, r25
 79e:	f1 cf       	rjmp	.-30     	; 0x782 <__fp_splitA+0xc>
 7a0:	86 95       	lsr	r24
 7a2:	71 05       	cpc	r23, r1
 7a4:	61 05       	cpc	r22, r1
 7a6:	08 94       	sec
 7a8:	08 95       	ret

000007aa <__fp_zero>:
 7aa:	e8 94       	clt

000007ac <__fp_szero>:
 7ac:	bb 27       	eor	r27, r27
 7ae:	66 27       	eor	r22, r22
 7b0:	77 27       	eor	r23, r23
 7b2:	cb 01       	movw	r24, r22
 7b4:	97 f9       	bld	r25, 7
 7b6:	08 95       	ret

000007b8 <inverse>:
 7b8:	9b 01       	movw	r18, r22
 7ba:	ac 01       	movw	r20, r24
 7bc:	60 e0       	ldi	r22, 0x00	; 0
 7be:	70 e0       	ldi	r23, 0x00	; 0
 7c0:	80 e8       	ldi	r24, 0x80	; 128
 7c2:	9f e3       	ldi	r25, 0x3F	; 63
 7c4:	81 ce       	rjmp	.-766    	; 0x4c8 <__divsf3>
 7c6:	82 cf       	rjmp	.-252    	; 0x6cc <__fp_inf>
 7c8:	ca c0       	rjmp	.+404    	; 0x95e <__fp_mpack>

000007ca <ldexp>:
 7ca:	d5 df       	rcall	.-86     	; 0x776 <__fp_splitA>
 7cc:	e8 f3       	brcs	.-6      	; 0x7c8 <inverse+0x10>
 7ce:	99 23       	and	r25, r25
 7d0:	d9 f3       	breq	.-10     	; 0x7c8 <inverse+0x10>
 7d2:	94 0f       	add	r25, r20
 7d4:	51 1d       	adc	r21, r1
 7d6:	bb f3       	brvs	.-18     	; 0x7c6 <inverse+0xe>
 7d8:	91 50       	subi	r25, 0x01	; 1
 7da:	50 40       	sbci	r21, 0x00	; 0
 7dc:	94 f0       	brlt	.+36     	; 0x802 <ldexp+0x38>
 7de:	59 f0       	breq	.+22     	; 0x7f6 <ldexp+0x2c>
 7e0:	88 23       	and	r24, r24
 7e2:	32 f0       	brmi	.+12     	; 0x7f0 <ldexp+0x26>
 7e4:	66 0f       	add	r22, r22
 7e6:	77 1f       	adc	r23, r23
 7e8:	88 1f       	adc	r24, r24
 7ea:	91 50       	subi	r25, 0x01	; 1
 7ec:	50 40       	sbci	r21, 0x00	; 0
 7ee:	c1 f7       	brne	.-16     	; 0x7e0 <ldexp+0x16>
 7f0:	9e 3f       	cpi	r25, 0xFE	; 254
 7f2:	51 05       	cpc	r21, r1
 7f4:	44 f7       	brge	.-48     	; 0x7c6 <inverse+0xe>
 7f6:	88 0f       	add	r24, r24
 7f8:	91 1d       	adc	r25, r1
 7fa:	96 95       	lsr	r25
 7fc:	87 95       	ror	r24
 7fe:	97 f9       	bld	r25, 7
 800:	08 95       	ret
 802:	5f 3f       	cpi	r21, 0xFF	; 255
 804:	ac f0       	brlt	.+42     	; 0x830 <ldexp+0x66>
 806:	98 3e       	cpi	r25, 0xE8	; 232
 808:	9c f0       	brlt	.+38     	; 0x830 <ldexp+0x66>
 80a:	bb 27       	eor	r27, r27
 80c:	86 95       	lsr	r24
 80e:	77 95       	ror	r23
 810:	67 95       	ror	r22
 812:	b7 95       	ror	r27
 814:	08 f4       	brcc	.+2      	; 0x818 <ldexp+0x4e>
 816:	b1 60       	ori	r27, 0x01	; 1
 818:	93 95       	inc	r25
 81a:	c1 f7       	brne	.-16     	; 0x80c <ldexp+0x42>
 81c:	bb 0f       	add	r27, r27
 81e:	58 f7       	brcc	.-42     	; 0x7f6 <ldexp+0x2c>
 820:	11 f4       	brne	.+4      	; 0x826 <ldexp+0x5c>
 822:	60 ff       	sbrs	r22, 0
 824:	e8 cf       	rjmp	.-48     	; 0x7f6 <ldexp+0x2c>
 826:	6f 5f       	subi	r22, 0xFF	; 255
 828:	7f 4f       	sbci	r23, 0xFF	; 255
 82a:	8f 4f       	sbci	r24, 0xFF	; 255
 82c:	9f 4f       	sbci	r25, 0xFF	; 255
 82e:	e3 cf       	rjmp	.-58     	; 0x7f6 <ldexp+0x2c>
 830:	bd cf       	rjmp	.-134    	; 0x7ac <__fp_szero>

00000832 <modf>:
 832:	fa 01       	movw	r30, r20
 834:	dc 01       	movw	r26, r24
 836:	aa 0f       	add	r26, r26
 838:	bb 1f       	adc	r27, r27
 83a:	9b 01       	movw	r18, r22
 83c:	ac 01       	movw	r20, r24
 83e:	bf 57       	subi	r27, 0x7F	; 127
 840:	28 f4       	brcc	.+10     	; 0x84c <modf+0x1a>
 842:	22 27       	eor	r18, r18
 844:	33 27       	eor	r19, r19
 846:	44 27       	eor	r20, r20
 848:	50 78       	andi	r21, 0x80	; 128
 84a:	1f c0       	rjmp	.+62     	; 0x88a <modf+0x58>
 84c:	b7 51       	subi	r27, 0x17	; 23
 84e:	88 f4       	brcc	.+34     	; 0x872 <modf+0x40>
 850:	ab 2f       	mov	r26, r27
 852:	00 24       	eor	r0, r0
 854:	46 95       	lsr	r20
 856:	37 95       	ror	r19
 858:	27 95       	ror	r18
 85a:	01 1c       	adc	r0, r1
 85c:	a3 95       	inc	r26
 85e:	d2 f3       	brmi	.-12     	; 0x854 <modf+0x22>
 860:	00 20       	and	r0, r0
 862:	69 f0       	breq	.+26     	; 0x87e <modf+0x4c>
 864:	22 0f       	add	r18, r18
 866:	33 1f       	adc	r19, r19
 868:	44 1f       	adc	r20, r20
 86a:	b3 95       	inc	r27
 86c:	da f3       	brmi	.-10     	; 0x864 <modf+0x32>
 86e:	0d d0       	rcall	.+26     	; 0x88a <modf+0x58>
 870:	c6 cd       	rjmp	.-1140   	; 0x3fe <__subsf3>
 872:	61 30       	cpi	r22, 0x01	; 1
 874:	71 05       	cpc	r23, r1
 876:	a0 e8       	ldi	r26, 0x80	; 128
 878:	8a 07       	cpc	r24, r26
 87a:	b9 46       	sbci	r27, 0x69	; 105
 87c:	30 f4       	brcc	.+12     	; 0x88a <modf+0x58>
 87e:	9b 01       	movw	r18, r22
 880:	ac 01       	movw	r20, r24
 882:	66 27       	eor	r22, r22
 884:	77 27       	eor	r23, r23
 886:	88 27       	eor	r24, r24
 888:	90 78       	andi	r25, 0x80	; 128
 88a:	30 96       	adiw	r30, 0x00	; 0
 88c:	21 f0       	breq	.+8      	; 0x896 <modf+0x64>
 88e:	20 83       	st	Z, r18
 890:	31 83       	std	Z+1, r19	; 0x01
 892:	42 83       	std	Z+2, r20	; 0x02
 894:	53 83       	std	Z+3, r21	; 0x03
 896:	08 95       	ret

00000898 <__mulsf3>:
 898:	0b d0       	rcall	.+22     	; 0x8b0 <__mulsf3x>
 89a:	54 cf       	rjmp	.-344    	; 0x744 <__fp_round>
 89c:	45 df       	rcall	.-374    	; 0x728 <__fp_pscA>
 89e:	28 f0       	brcs	.+10     	; 0x8aa <__mulsf3+0x12>
 8a0:	4a df       	rcall	.-364    	; 0x736 <__fp_pscB>
 8a2:	18 f0       	brcs	.+6      	; 0x8aa <__mulsf3+0x12>
 8a4:	95 23       	and	r25, r21
 8a6:	09 f0       	breq	.+2      	; 0x8aa <__mulsf3+0x12>
 8a8:	11 cf       	rjmp	.-478    	; 0x6cc <__fp_inf>
 8aa:	16 cf       	rjmp	.-468    	; 0x6d8 <__fp_nan>
 8ac:	11 24       	eor	r1, r1
 8ae:	7e cf       	rjmp	.-260    	; 0x7ac <__fp_szero>

000008b0 <__mulsf3x>:
 8b0:	5a df       	rcall	.-332    	; 0x766 <__fp_split3>
 8b2:	a0 f3       	brcs	.-24     	; 0x89c <__mulsf3+0x4>

000008b4 <__mulsf3_pse>:
 8b4:	95 9f       	mul	r25, r21
 8b6:	d1 f3       	breq	.-12     	; 0x8ac <__mulsf3+0x14>
 8b8:	95 0f       	add	r25, r21
 8ba:	50 e0       	ldi	r21, 0x00	; 0
 8bc:	55 1f       	adc	r21, r21
 8be:	62 9f       	mul	r22, r18
 8c0:	f0 01       	movw	r30, r0
 8c2:	72 9f       	mul	r23, r18
 8c4:	bb 27       	eor	r27, r27
 8c6:	f0 0d       	add	r31, r0
 8c8:	b1 1d       	adc	r27, r1
 8ca:	63 9f       	mul	r22, r19
 8cc:	aa 27       	eor	r26, r26
 8ce:	f0 0d       	add	r31, r0
 8d0:	b1 1d       	adc	r27, r1
 8d2:	aa 1f       	adc	r26, r26
 8d4:	64 9f       	mul	r22, r20
 8d6:	66 27       	eor	r22, r22
 8d8:	b0 0d       	add	r27, r0
 8da:	a1 1d       	adc	r26, r1
 8dc:	66 1f       	adc	r22, r22
 8de:	82 9f       	mul	r24, r18
 8e0:	22 27       	eor	r18, r18
 8e2:	b0 0d       	add	r27, r0
 8e4:	a1 1d       	adc	r26, r1
 8e6:	62 1f       	adc	r22, r18
 8e8:	73 9f       	mul	r23, r19
 8ea:	b0 0d       	add	r27, r0
 8ec:	a1 1d       	adc	r26, r1
 8ee:	62 1f       	adc	r22, r18
 8f0:	83 9f       	mul	r24, r19
 8f2:	a0 0d       	add	r26, r0
 8f4:	61 1d       	adc	r22, r1
 8f6:	22 1f       	adc	r18, r18
 8f8:	74 9f       	mul	r23, r20
 8fa:	33 27       	eor	r19, r19
 8fc:	a0 0d       	add	r26, r0
 8fe:	61 1d       	adc	r22, r1
 900:	23 1f       	adc	r18, r19
 902:	84 9f       	mul	r24, r20
 904:	60 0d       	add	r22, r0
 906:	21 1d       	adc	r18, r1
 908:	82 2f       	mov	r24, r18
 90a:	76 2f       	mov	r23, r22
 90c:	6a 2f       	mov	r22, r26
 90e:	11 24       	eor	r1, r1
 910:	9f 57       	subi	r25, 0x7F	; 127
 912:	50 40       	sbci	r21, 0x00	; 0
 914:	8a f0       	brmi	.+34     	; 0x938 <__mulsf3_pse+0x84>
 916:	e1 f0       	breq	.+56     	; 0x950 <__mulsf3_pse+0x9c>
 918:	88 23       	and	r24, r24
 91a:	4a f0       	brmi	.+18     	; 0x92e <__mulsf3_pse+0x7a>
 91c:	ee 0f       	add	r30, r30
 91e:	ff 1f       	adc	r31, r31
 920:	bb 1f       	adc	r27, r27
 922:	66 1f       	adc	r22, r22
 924:	77 1f       	adc	r23, r23
 926:	88 1f       	adc	r24, r24
 928:	91 50       	subi	r25, 0x01	; 1
 92a:	50 40       	sbci	r21, 0x00	; 0
 92c:	a9 f7       	brne	.-22     	; 0x918 <__mulsf3_pse+0x64>
 92e:	9e 3f       	cpi	r25, 0xFE	; 254
 930:	51 05       	cpc	r21, r1
 932:	70 f0       	brcs	.+28     	; 0x950 <__mulsf3_pse+0x9c>
 934:	cb ce       	rjmp	.-618    	; 0x6cc <__fp_inf>
 936:	3a cf       	rjmp	.-396    	; 0x7ac <__fp_szero>
 938:	5f 3f       	cpi	r21, 0xFF	; 255
 93a:	ec f3       	brlt	.-6      	; 0x936 <__mulsf3_pse+0x82>
 93c:	98 3e       	cpi	r25, 0xE8	; 232
 93e:	dc f3       	brlt	.-10     	; 0x936 <__mulsf3_pse+0x82>
 940:	86 95       	lsr	r24
 942:	77 95       	ror	r23
 944:	67 95       	ror	r22
 946:	b7 95       	ror	r27
 948:	f7 95       	ror	r31
 94a:	e7 95       	ror	r30
 94c:	9f 5f       	subi	r25, 0xFF	; 255
 94e:	c1 f7       	brne	.-16     	; 0x940 <__mulsf3_pse+0x8c>
 950:	fe 2b       	or	r31, r30
 952:	88 0f       	add	r24, r24
 954:	91 1d       	adc	r25, r1
 956:	96 95       	lsr	r25
 958:	87 95       	ror	r24
 95a:	97 f9       	bld	r25, 7
 95c:	08 95       	ret

0000095e <__fp_mpack>:
 95e:	9f 3f       	cpi	r25, 0xFF	; 255
 960:	31 f0       	breq	.+12     	; 0x96e <__fp_mpack_finite+0xc>

00000962 <__fp_mpack_finite>:
 962:	91 50       	subi	r25, 0x01	; 1
 964:	20 f4       	brcc	.+8      	; 0x96e <__fp_mpack_finite+0xc>
 966:	87 95       	ror	r24
 968:	77 95       	ror	r23
 96a:	67 95       	ror	r22
 96c:	b7 95       	ror	r27
 96e:	88 0f       	add	r24, r24
 970:	91 1d       	adc	r25, r1
 972:	96 95       	lsr	r25
 974:	87 95       	ror	r24
 976:	97 f9       	bld	r25, 7
 978:	08 95       	ret

0000097a <__udivmodhi4>:
 97a:	aa 1b       	sub	r26, r26
 97c:	bb 1b       	sub	r27, r27
 97e:	51 e1       	ldi	r21, 0x11	; 17
 980:	07 c0       	rjmp	.+14     	; 0x990 <__udivmodhi4_ep>

00000982 <__udivmodhi4_loop>:
 982:	aa 1f       	adc	r26, r26
 984:	bb 1f       	adc	r27, r27
 986:	a6 17       	cp	r26, r22
 988:	b7 07       	cpc	r27, r23
 98a:	10 f0       	brcs	.+4      	; 0x990 <__udivmodhi4_ep>
 98c:	a6 1b       	sub	r26, r22
 98e:	b7 0b       	sbc	r27, r23

00000990 <__udivmodhi4_ep>:
 990:	88 1f       	adc	r24, r24
 992:	99 1f       	adc	r25, r25
 994:	5a 95       	dec	r21
 996:	a9 f7       	brne	.-22     	; 0x982 <__udivmodhi4_loop>
 998:	80 95       	com	r24
 99a:	90 95       	com	r25
 99c:	bc 01       	movw	r22, r24
 99e:	cd 01       	movw	r24, r26
 9a0:	08 95       	ret

000009a2 <_exit>:
 9a2:	f8 94       	cli

000009a4 <__stop_program>:
 9a4:	ff cf       	rjmp	.-2      	; 0x9a4 <__stop_program>
