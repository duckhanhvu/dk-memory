
project 6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000032  00800060  00000f48  00000fdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  00800092  00800092  0000100e  2**0
                  ALLOC
  3 .stab         000033e4  00000000  00000000  00001010  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000abd  00000000  00000000  000043f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  00004eb1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000019d  00000000  00000000  00004ef1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000635  00000000  00000000  0000508e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000027d  00000000  00000000  000056c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000074e  00000000  00000000  00005940  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000110  00000000  00000000  00006090  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000219  00000000  00000000  000061a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000024f  00000000  00000000  000063b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000063  00000000  00000000  00006608  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  10:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <__vector_4>
  14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  48:	0c 94 95 02 	jmp	0x52a	; 0x52a <__vector_18>
  4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <pow+0xc>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d4 e0       	ldi	r29, 0x04	; 4
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e8 e4       	ldi	r30, 0x48	; 72
  ea:	ff e0       	ldi	r31, 0x0F	; 15
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	a2 39       	cpi	r26, 0x92	; 146
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
  f8:	10 e0       	ldi	r17, 0x00	; 0
  fa:	a2 e9       	ldi	r26, 0x92	; 146
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
 100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
 102:	a7 3b       	cpi	r26, 0xB7	; 183
 104:	b1 07       	cpc	r27, r17
 106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
 108:	0e 94 e7 01 	call	0x3ce	; 0x3ce <main>
 10c:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <_exit>

00000110 <__bad_interrupt>:
 110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <MOTOR_Speed_PID>:
volatile long int pPart=0, iPart=0, dPart=0;
volatile long int Ctrl_speed=5;
volatile long int output;
volatile unsigned char sample_count=0;

void MOTOR_Speed_PID(long int des_speed){
 114:	af 92       	push	r10
 116:	bf 92       	push	r11
 118:	cf 92       	push	r12
 11a:	df 92       	push	r13
 11c:	ef 92       	push	r14
 11e:	ff 92       	push	r15
 120:	0f 93       	push	r16
 122:	1f 93       	push	r17
 124:	9b 01       	movw	r18, r22
 126:	ac 01       	movw	r20, r24
	rSpeed=pulse-pre_pulse;
 128:	e0 90 af 00 	lds	r14, 0x00AF
 12c:	f0 90 b0 00 	lds	r15, 0x00B0
 130:	00 91 b1 00 	lds	r16, 0x00B1
 134:	10 91 b2 00 	lds	r17, 0x00B2
 138:	60 91 a7 00 	lds	r22, 0x00A7
 13c:	70 91 a8 00 	lds	r23, 0x00A8
 140:	80 91 a9 00 	lds	r24, 0x00A9
 144:	90 91 aa 00 	lds	r25, 0x00AA
 148:	57 01       	movw	r10, r14
 14a:	68 01       	movw	r12, r16
 14c:	a6 1a       	sub	r10, r22
 14e:	b7 0a       	sbc	r11, r23
 150:	c8 0a       	sbc	r12, r24
 152:	d9 0a       	sbc	r13, r25
 154:	a0 92 b3 00 	sts	0x00B3, r10
 158:	b0 92 b4 00 	sts	0x00B4, r11
 15c:	c0 92 b5 00 	sts	0x00B5, r12
 160:	d0 92 b6 00 	sts	0x00B6, r13
	pre_pulse=pulse;
 164:	80 91 af 00 	lds	r24, 0x00AF
 168:	90 91 b0 00 	lds	r25, 0x00B0
 16c:	a0 91 b1 00 	lds	r26, 0x00B1
 170:	b0 91 b2 00 	lds	r27, 0x00B2
 174:	80 93 a7 00 	sts	0x00A7, r24
 178:	90 93 a8 00 	sts	0x00A8, r25
 17c:	a0 93 a9 00 	sts	0x00A9, r26
 180:	b0 93 aa 00 	sts	0x00AA, r27
	
	Err=des_speed-abs(rSpeed);
 184:	80 91 b3 00 	lds	r24, 0x00B3
 188:	90 91 b4 00 	lds	r25, 0x00B4
 18c:	a0 91 b5 00 	lds	r26, 0x00B5
 190:	b0 91 b6 00 	lds	r27, 0x00B6
 194:	99 23       	and	r25, r25
 196:	1c f4       	brge	.+6      	; 0x19e <MOTOR_Speed_PID+0x8a>
 198:	90 95       	com	r25
 19a:	81 95       	neg	r24
 19c:	9f 4f       	sbci	r25, 0xFF	; 255
 19e:	aa 27       	eor	r26, r26
 1a0:	97 fd       	sbrc	r25, 7
 1a2:	a0 95       	com	r26
 1a4:	ba 2f       	mov	r27, r26
 1a6:	69 01       	movw	r12, r18
 1a8:	7a 01       	movw	r14, r20
 1aa:	c8 1a       	sub	r12, r24
 1ac:	d9 0a       	sbc	r13, r25
 1ae:	ea 0a       	sbc	r14, r26
 1b0:	fb 0a       	sbc	r15, r27
 1b2:	c0 92 ab 00 	sts	0x00AB, r12
 1b6:	d0 92 ac 00 	sts	0x00AC, r13
 1ba:	e0 92 ad 00 	sts	0x00AD, r14
 1be:	f0 92 ae 00 	sts	0x00AE, r15
	
	pPart=kp*Err;
 1c2:	20 91 81 00 	lds	r18, 0x0081
 1c6:	30 91 82 00 	lds	r19, 0x0082
 1ca:	40 91 83 00 	lds	r20, 0x0083
 1ce:	50 91 84 00 	lds	r21, 0x0084
 1d2:	60 91 ab 00 	lds	r22, 0x00AB
 1d6:	70 91 ac 00 	lds	r23, 0x00AC
 1da:	80 91 ad 00 	lds	r24, 0x00AD
 1de:	90 91 ae 00 	lds	r25, 0x00AE
 1e2:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__mulsi3>
 1e6:	60 93 92 00 	sts	0x0092, r22
 1ea:	70 93 93 00 	sts	0x0093, r23
 1ee:	80 93 94 00 	sts	0x0094, r24
 1f2:	90 93 95 00 	sts	0x0095, r25
	dPart=kd*(Err-pre_Err)*inv_Sampling_time;
 1f6:	e0 90 ab 00 	lds	r14, 0x00AB
 1fa:	f0 90 ac 00 	lds	r15, 0x00AC
 1fe:	00 91 ad 00 	lds	r16, 0x00AD
 202:	10 91 ae 00 	lds	r17, 0x00AE
 206:	a0 90 a3 00 	lds	r10, 0x00A3
 20a:	b0 90 a4 00 	lds	r11, 0x00A4
 20e:	c0 90 a5 00 	lds	r12, 0x00A5
 212:	d0 90 a6 00 	lds	r13, 0x00A6
 216:	60 91 85 00 	lds	r22, 0x0085
 21a:	70 91 86 00 	lds	r23, 0x0086
 21e:	80 91 87 00 	lds	r24, 0x0087
 222:	90 91 88 00 	lds	r25, 0x0088
 226:	28 e2       	ldi	r18, 0x28	; 40
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	40 e0       	ldi	r20, 0x00	; 0
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__mulsi3>
 232:	a8 01       	movw	r20, r16
 234:	97 01       	movw	r18, r14
 236:	2a 19       	sub	r18, r10
 238:	3b 09       	sbc	r19, r11
 23a:	4c 09       	sbc	r20, r12
 23c:	5d 09       	sbc	r21, r13
 23e:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__mulsi3>
 242:	60 93 9a 00 	sts	0x009A, r22
 246:	70 93 9b 00 	sts	0x009B, r23
 24a:	80 93 9c 00 	sts	0x009C, r24
 24e:	90 93 9d 00 	sts	0x009D, r25
	iPart+=ki*Err*Sampling_time/1000;
 252:	60 91 89 00 	lds	r22, 0x0089
 256:	70 91 8a 00 	lds	r23, 0x008A
 25a:	80 91 8b 00 	lds	r24, 0x008B
 25e:	90 91 8c 00 	lds	r25, 0x008C
 262:	20 91 ab 00 	lds	r18, 0x00AB
 266:	30 91 ac 00 	lds	r19, 0x00AC
 26a:	40 91 ad 00 	lds	r20, 0x00AD
 26e:	50 91 ae 00 	lds	r21, 0x00AE
 272:	e0 90 96 00 	lds	r14, 0x0096
 276:	f0 90 97 00 	lds	r15, 0x0097
 27a:	00 91 98 00 	lds	r16, 0x0098
 27e:	10 91 99 00 	lds	r17, 0x0099
 282:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__mulsi3>
 286:	29 e1       	ldi	r18, 0x19	; 25
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	40 e0       	ldi	r20, 0x00	; 0
 28c:	50 e0       	ldi	r21, 0x00	; 0
 28e:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__mulsi3>
 292:	28 ee       	ldi	r18, 0xE8	; 232
 294:	33 e0       	ldi	r19, 0x03	; 3
 296:	40 e0       	ldi	r20, 0x00	; 0
 298:	50 e0       	ldi	r21, 0x00	; 0
 29a:	0e 94 65 07 	call	0xeca	; 0xeca <__divmodsi4>
 29e:	2e 0d       	add	r18, r14
 2a0:	3f 1d       	adc	r19, r15
 2a2:	40 1f       	adc	r20, r16
 2a4:	51 1f       	adc	r21, r17
 2a6:	20 93 96 00 	sts	0x0096, r18
 2aa:	30 93 97 00 	sts	0x0097, r19
 2ae:	40 93 98 00 	sts	0x0098, r20
 2b2:	50 93 99 00 	sts	0x0099, r21
	
	output+=pPart+dPart+iPart;
 2b6:	20 91 92 00 	lds	r18, 0x0092
 2ba:	30 91 93 00 	lds	r19, 0x0093
 2be:	40 91 94 00 	lds	r20, 0x0094
 2c2:	50 91 95 00 	lds	r21, 0x0095
 2c6:	e0 90 9a 00 	lds	r14, 0x009A
 2ca:	f0 90 9b 00 	lds	r15, 0x009B
 2ce:	00 91 9c 00 	lds	r16, 0x009C
 2d2:	10 91 9d 00 	lds	r17, 0x009D
 2d6:	80 91 96 00 	lds	r24, 0x0096
 2da:	90 91 97 00 	lds	r25, 0x0097
 2de:	a0 91 98 00 	lds	r26, 0x0098
 2e2:	b0 91 99 00 	lds	r27, 0x0099
 2e6:	a0 90 9f 00 	lds	r10, 0x009F
 2ea:	b0 90 a0 00 	lds	r11, 0x00A0
 2ee:	c0 90 a1 00 	lds	r12, 0x00A1
 2f2:	d0 90 a2 00 	lds	r13, 0x00A2
 2f6:	2e 0d       	add	r18, r14
 2f8:	3f 1d       	adc	r19, r15
 2fa:	40 1f       	adc	r20, r16
 2fc:	51 1f       	adc	r21, r17
 2fe:	82 0f       	add	r24, r18
 300:	93 1f       	adc	r25, r19
 302:	a4 1f       	adc	r26, r20
 304:	b5 1f       	adc	r27, r21
 306:	a8 0e       	add	r10, r24
 308:	b9 1e       	adc	r11, r25
 30a:	ca 1e       	adc	r12, r26
 30c:	db 1e       	adc	r13, r27
 30e:	a0 92 9f 00 	sts	0x009F, r10
 312:	b0 92 a0 00 	sts	0x00A0, r11
 316:	c0 92 a1 00 	sts	0x00A1, r12
 31a:	d0 92 a2 00 	sts	0x00A2, r13
	
	if(output>=PWM_period) output=PWM_period-1;
 31e:	80 91 9f 00 	lds	r24, 0x009F
 322:	90 91 a0 00 	lds	r25, 0x00A0
 326:	a0 91 a1 00 	lds	r26, 0x00A1
 32a:	b0 91 a2 00 	lds	r27, 0x00A2
 32e:	80 34       	cpi	r24, 0x40	; 64
 330:	0f e1       	ldi	r16, 0x1F	; 31
 332:	90 07       	cpc	r25, r16
 334:	00 e0       	ldi	r16, 0x00	; 0
 336:	a0 07       	cpc	r26, r16
 338:	00 e0       	ldi	r16, 0x00	; 0
 33a:	b0 07       	cpc	r27, r16
 33c:	64 f0       	brlt	.+24     	; 0x356 <MOTOR_Speed_PID+0x242>
 33e:	8f e3       	ldi	r24, 0x3F	; 63
 340:	9f e1       	ldi	r25, 0x1F	; 31
 342:	a0 e0       	ldi	r26, 0x00	; 0
 344:	b0 e0       	ldi	r27, 0x00	; 0
 346:	80 93 9f 00 	sts	0x009F, r24
 34a:	90 93 a0 00 	sts	0x00A0, r25
 34e:	a0 93 a1 00 	sts	0x00A1, r26
 352:	b0 93 a2 00 	sts	0x00A2, r27
	if(output<=0) output=1;
 356:	80 91 9f 00 	lds	r24, 0x009F
 35a:	90 91 a0 00 	lds	r25, 0x00A0
 35e:	a0 91 a1 00 	lds	r26, 0x00A1
 362:	b0 91 a2 00 	lds	r27, 0x00A2
 366:	18 16       	cp	r1, r24
 368:	19 06       	cpc	r1, r25
 36a:	1a 06       	cpc	r1, r26
 36c:	1b 06       	cpc	r1, r27
 36e:	64 f0       	brlt	.+24     	; 0x388 <MOTOR_Speed_PID+0x274>
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	a0 e0       	ldi	r26, 0x00	; 0
 376:	b0 e0       	ldi	r27, 0x00	; 0
 378:	80 93 9f 00 	sts	0x009F, r24
 37c:	90 93 a0 00 	sts	0x00A0, r25
 380:	a0 93 a1 00 	sts	0x00A1, r26
 384:	b0 93 a2 00 	sts	0x00A2, r27
	
	OCR1A=output;
 388:	80 91 9f 00 	lds	r24, 0x009F
 38c:	90 91 a0 00 	lds	r25, 0x00A0
 390:	a0 91 a1 00 	lds	r26, 0x00A1
 394:	b0 91 a2 00 	lds	r27, 0x00A2
 398:	9b bd       	out	0x2b, r25	; 43
 39a:	8a bd       	out	0x2a, r24	; 42
	pre_Err=Err;
 39c:	80 91 ab 00 	lds	r24, 0x00AB
 3a0:	90 91 ac 00 	lds	r25, 0x00AC
 3a4:	a0 91 ad 00 	lds	r26, 0x00AD
 3a8:	b0 91 ae 00 	lds	r27, 0x00AE
 3ac:	80 93 a3 00 	sts	0x00A3, r24
 3b0:	90 93 a4 00 	sts	0x00A4, r25
 3b4:	a0 93 a5 00 	sts	0x00A5, r26
 3b8:	b0 93 a6 00 	sts	0x00A6, r27
	
}
 3bc:	1f 91       	pop	r17
 3be:	0f 91       	pop	r16
 3c0:	ff 90       	pop	r15
 3c2:	ef 90       	pop	r14
 3c4:	df 90       	pop	r13
 3c6:	cf 90       	pop	r12
 3c8:	bf 90       	pop	r11
 3ca:	af 90       	pop	r10
 3cc:	08 95       	ret

000003ce <main>:

int main(void)
{
 3ce:	1f 93       	push	r17
	pulse=0;
 3d0:	10 92 af 00 	sts	0x00AF, r1
 3d4:	10 92 b0 00 	sts	0x00B0, r1
 3d8:	10 92 b1 00 	sts	0x00B1, r1
 3dc:	10 92 b2 00 	sts	0x00B2, r1
	
	DDRB=0x00;
 3e0:	17 ba       	out	0x17, r1	; 23
	PORTB=0xFF;
 3e2:	8f ef       	ldi	r24, 0xFF	; 255
 3e4:	88 bb       	out	0x18, r24	; 24
	
	MOTOR_DDR=0xF0;
 3e6:	80 ef       	ldi	r24, 0xF0	; 240
 3e8:	81 bb       	out	0x11, r24	; 17
	sbi(MOTOR_PORT,MOTOR_DIR);
 3ea:	96 9a       	sbi	0x12, 6	; 18
	
	MCUCSR|=(0<<ISC2);
 3ec:	84 b7       	in	r24, 0x34	; 52
 3ee:	84 bf       	out	0x34, r24	; 52
	GIFR|=(1<<INT2);
 3f0:	8a b7       	in	r24, 0x3a	; 58
 3f2:	80 62       	ori	r24, 0x20	; 32
 3f4:	8a bf       	out	0x3a, r24	; 58
	
	TCCR2=(1<<CS22)|(1<<CS21)|(1<<CS20);
 3f6:	87 e0       	ldi	r24, 0x07	; 7
 3f8:	85 bd       	out	0x25, r24	; 37
	TCNT2=60;
 3fa:	8c e3       	ldi	r24, 0x3C	; 60
 3fc:	84 bd       	out	0x24, r24	; 36
	TIMSK=(1<<TOIE2);
 3fe:	80 e4       	ldi	r24, 0x40	; 64
 400:	89 bf       	out	0x39, r24	; 57
	
	TCCR1A=(1<<COM1A1)|(1<<WGM11);
 402:	82 e8       	ldi	r24, 0x82	; 130
 404:	8f bd       	out	0x2f, r24	; 47
	TCCR1B=(1<<WGM13)|(1<<WGM12)|(1<<CS10);
 406:	89 e1       	ldi	r24, 0x19	; 25
 408:	8e bd       	out	0x2e, r24	; 46
	
	init_lcd();
 40a:	0e 94 08 03 	call	0x610	; 0x610 <init_lcd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40e:	8f e3       	ldi	r24, 0x3F	; 63
 410:	9d e0       	ldi	r25, 0x0D	; 13
 412:	a3 e0       	ldi	r26, 0x03	; 3
 414:	81 50       	subi	r24, 0x01	; 1
 416:	90 40       	sbci	r25, 0x00	; 0
 418:	a0 40       	sbci	r26, 0x00	; 0
 41a:	e1 f7       	brne	.-8      	; 0x414 <main+0x46>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <main+0x50>
 41e:	00 00       	nop
	_delay_ms(1000);
	clear_lcd();
 420:	0e 94 30 03 	call	0x660	; 0x660 <clear_lcd>
	putstr_lcd("Actual:   /25ms",15);
 424:	80 e6       	ldi	r24, 0x60	; 96
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	6f e0       	ldi	r22, 0x0F	; 15
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	0e 94 a7 03 	call	0x74e	; 0x74e <putstr_lcd>
	movecursor(2,1);
 430:	82 e0       	ldi	r24, 0x02	; 2
 432:	61 e0       	ldi	r22, 0x01	; 1
 434:	0e 94 37 03 	call	0x66e	; 0x66e <movecursor>
	putstr_lcd("Desired:   /25ms",16);
 438:	80 e7       	ldi	r24, 0x70	; 112
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	60 e1       	ldi	r22, 0x10	; 16
 43e:	70 e0       	ldi	r23, 0x00	; 0
 440:	0e 94 a7 03 	call	0x74e	; 0x74e <putstr_lcd>
	
	OCR1A=1;
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	9b bd       	out	0x2b, r25	; 43
 44a:	8a bd       	out	0x2a, r24	; 42
	ICR1=PWM_period;
 44c:	80 e4       	ldi	r24, 0x40	; 64
 44e:	9f e1       	ldi	r25, 0x1F	; 31
 450:	97 bd       	out	0x27, r25	; 39
 452:	86 bd       	out	0x26, r24	; 38
	sbi(MOTOR_PORT,MOTOR_EN);
 454:	97 9a       	sbi	0x12, 7	; 18
	sei();
 456:	78 94       	sei
    while(1)
    {
		if(sample_count>=10){
			Ctrl_speed=(PINB>>4)*0x0F;
 458:	1f e0       	ldi	r17, 0x0F	; 15
	ICR1=PWM_period;
	sbi(MOTOR_PORT,MOTOR_EN);
	sei();
    while(1)
    {
		if(sample_count>=10){
 45a:	80 91 9e 00 	lds	r24, 0x009E
 45e:	8a 30       	cpi	r24, 0x0A	; 10
 460:	e0 f3       	brcs	.-8      	; 0x45a <main+0x8c>
			Ctrl_speed=(PINB>>4)*0x0F;
 462:	86 b3       	in	r24, 0x16	; 22
 464:	82 95       	swap	r24
 466:	8f 70       	andi	r24, 0x0F	; 15
 468:	81 9f       	mul	r24, r17
 46a:	c0 01       	movw	r24, r0
 46c:	11 24       	eor	r1, r1
 46e:	aa 27       	eor	r26, r26
 470:	97 fd       	sbrc	r25, 7
 472:	a0 95       	com	r26
 474:	ba 2f       	mov	r27, r26
 476:	80 93 8d 00 	sts	0x008D, r24
 47a:	90 93 8e 00 	sts	0x008E, r25
 47e:	a0 93 8f 00 	sts	0x008F, r26
 482:	b0 93 90 00 	sts	0x0090, r27
			movecursor(1,8);
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	68 e0       	ldi	r22, 0x08	; 8
 48a:	0e 94 37 03 	call	0x66e	; 0x66e <movecursor>
			printnumber_lcd(rSpeed);
 48e:	80 91 b3 00 	lds	r24, 0x00B3
 492:	90 91 b4 00 	lds	r25, 0x00B4
 496:	a0 91 b5 00 	lds	r26, 0x00B5
 49a:	b0 91 b6 00 	lds	r27, 0x00B6
 49e:	0e 94 59 03 	call	0x6b2	; 0x6b2 <printnumber_lcd>
			movecursor(2,9);
 4a2:	82 e0       	ldi	r24, 0x02	; 2
 4a4:	69 e0       	ldi	r22, 0x09	; 9
 4a6:	0e 94 37 03 	call	0x66e	; 0x66e <movecursor>
			printnumber_lcd(Ctrl_speed);
 4aa:	80 91 8d 00 	lds	r24, 0x008D
 4ae:	90 91 8e 00 	lds	r25, 0x008E
 4b2:	a0 91 8f 00 	lds	r26, 0x008F
 4b6:	b0 91 90 00 	lds	r27, 0x0090
 4ba:	0e 94 59 03 	call	0x6b2	; 0x6b2 <printnumber_lcd>
			sample_count=0;
 4be:	10 92 9e 00 	sts	0x009E, r1
 4c2:	cb cf       	rjmp	.-106    	; 0x45a <main+0x8c>

000004c4 <__vector_4>:
		}
    }
}
ISR(TIMER2_OVF_vect){
 4c4:	1f 92       	push	r1
 4c6:	0f 92       	push	r0
 4c8:	0f b6       	in	r0, 0x3f	; 63
 4ca:	0f 92       	push	r0
 4cc:	11 24       	eor	r1, r1
 4ce:	2f 93       	push	r18
 4d0:	3f 93       	push	r19
 4d2:	4f 93       	push	r20
 4d4:	5f 93       	push	r21
 4d6:	6f 93       	push	r22
 4d8:	7f 93       	push	r23
 4da:	8f 93       	push	r24
 4dc:	9f 93       	push	r25
 4de:	af 93       	push	r26
 4e0:	bf 93       	push	r27
 4e2:	ef 93       	push	r30
 4e4:	ff 93       	push	r31
	TCNT2=60;
 4e6:	8c e3       	ldi	r24, 0x3C	; 60
 4e8:	84 bd       	out	0x24, r24	; 36
	MOTOR_Speed_PID(Ctrl_speed);
 4ea:	60 91 8d 00 	lds	r22, 0x008D
 4ee:	70 91 8e 00 	lds	r23, 0x008E
 4f2:	80 91 8f 00 	lds	r24, 0x008F
 4f6:	90 91 90 00 	lds	r25, 0x0090
 4fa:	0e 94 8a 00 	call	0x114	; 0x114 <MOTOR_Speed_PID>
	sample_count++;
 4fe:	80 91 9e 00 	lds	r24, 0x009E
 502:	8f 5f       	subi	r24, 0xFF	; 255
 504:	80 93 9e 00 	sts	0x009E, r24
}
 508:	ff 91       	pop	r31
 50a:	ef 91       	pop	r30
 50c:	bf 91       	pop	r27
 50e:	af 91       	pop	r26
 510:	9f 91       	pop	r25
 512:	8f 91       	pop	r24
 514:	7f 91       	pop	r23
 516:	6f 91       	pop	r22
 518:	5f 91       	pop	r21
 51a:	4f 91       	pop	r20
 51c:	3f 91       	pop	r19
 51e:	2f 91       	pop	r18
 520:	0f 90       	pop	r0
 522:	0f be       	out	0x3f, r0	; 63
 524:	0f 90       	pop	r0
 526:	1f 90       	pop	r1
 528:	18 95       	reti

0000052a <__vector_18>:
ISR(INT2_vect){
 52a:	1f 92       	push	r1
 52c:	0f 92       	push	r0
 52e:	0f b6       	in	r0, 0x3f	; 63
 530:	0f 92       	push	r0
 532:	11 24       	eor	r1, r1
 534:	8f 93       	push	r24
 536:	9f 93       	push	r25
 538:	af 93       	push	r26
 53a:	bf 93       	push	r27
	if(bit_is_set(PORTB,0)) pulse++;
 53c:	c0 9b       	sbis	0x18, 0	; 24
 53e:	14 c0       	rjmp	.+40     	; 0x568 <__vector_18+0x3e>
 540:	80 91 af 00 	lds	r24, 0x00AF
 544:	90 91 b0 00 	lds	r25, 0x00B0
 548:	a0 91 b1 00 	lds	r26, 0x00B1
 54c:	b0 91 b2 00 	lds	r27, 0x00B2
 550:	01 96       	adiw	r24, 0x01	; 1
 552:	a1 1d       	adc	r26, r1
 554:	b1 1d       	adc	r27, r1
 556:	80 93 af 00 	sts	0x00AF, r24
 55a:	90 93 b0 00 	sts	0x00B0, r25
 55e:	a0 93 b1 00 	sts	0x00B1, r26
 562:	b0 93 b2 00 	sts	0x00B2, r27
 566:	13 c0       	rjmp	.+38     	; 0x58e <__vector_18+0x64>
	else pulse--;
 568:	80 91 af 00 	lds	r24, 0x00AF
 56c:	90 91 b0 00 	lds	r25, 0x00B0
 570:	a0 91 b1 00 	lds	r26, 0x00B1
 574:	b0 91 b2 00 	lds	r27, 0x00B2
 578:	01 97       	sbiw	r24, 0x01	; 1
 57a:	a1 09       	sbc	r26, r1
 57c:	b1 09       	sbc	r27, r1
 57e:	80 93 af 00 	sts	0x00AF, r24
 582:	90 93 b0 00 	sts	0x00B0, r25
 586:	a0 93 b1 00 	sts	0x00B1, r26
 58a:	b0 93 b2 00 	sts	0x00B2, r27
 58e:	bf 91       	pop	r27
 590:	af 91       	pop	r26
 592:	9f 91       	pop	r25
 594:	8f 91       	pop	r24
 596:	0f 90       	pop	r0
 598:	0f be       	out	0x3f, r0	; 63
 59a:	0f 90       	pop	r0
 59c:	1f 90       	pop	r1
 59e:	18 95       	reti

000005a0 <read_2Nib>:


char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
 5a0:	aa 9a       	sbi	0x15, 2	; 21
	DDR_DATA=0x0F;
 5a2:	8f e0       	ldi	r24, 0x0F	; 15
 5a4:	84 bb       	out	0x14, r24	; 20
	HNib=DATA_input&0xF0;
 5a6:	83 b3       	in	r24, 0x13	; 19
	clearbit(CTRL,EN);
 5a8:	aa 98       	cbi	0x15, 2	; 21
	
	setbit(CTRL,EN);
 5aa:	aa 9a       	sbi	0x15, 2	; 21
	LNib=DATA_input&0xF0;
 5ac:	93 b3       	in	r25, 0x13	; 19
	clearbit(CTRL,EN);
 5ae:	aa 98       	cbi	0x15, 2	; 21
	LNib>>=4;
 5b0:	92 95       	swap	r25
 5b2:	9f 70       	andi	r25, 0x0F	; 15
char read_2Nib(void){
    unsigned char HNib,LNib;
	
	setbit(CTRL,EN);
	DDR_DATA=0x0F;
	HNib=DATA_input&0xF0;
 5b4:	80 7f       	andi	r24, 0xF0	; 240
	LNib=DATA_input&0xF0;
	clearbit(CTRL,EN);
	LNib>>=4;
	
	return (HNib|LNib);
}
 5b6:	89 2b       	or	r24, r25
 5b8:	08 95       	ret

000005ba <write_2Nib>:
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
 5ba:	95 b3       	in	r25, 0x15	; 21
 5bc:	9f 70       	andi	r25, 0x0F	; 15
	HNib=data&0xF0;
 5be:	28 2f       	mov	r18, r24
 5c0:	20 7f       	andi	r18, 0xF0	; 240
	LNib=(data<<4)&0xF0;
	
	DATA_output=HNib|temp;
 5c2:	29 2b       	or	r18, r25
 5c4:	25 bb       	out	0x15, r18	; 21
	setbit(CTRL,EN);
 5c6:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 5c8:	aa 98       	cbi	0x15, 2	; 21
}
void write_2Nib(unsigned char data){
	unsigned char HNib, LNib, temp;
	temp=DATA_output&0x0F;
	HNib=data&0xF0;
	LNib=(data<<4)&0xF0;
 5ca:	82 95       	swap	r24
 5cc:	80 7f       	andi	r24, 0xF0	; 240
	
	DATA_output=HNib|temp;
	setbit(CTRL,EN);
	clearbit(CTRL,EN);
	
	DATA_output=LNib|temp;
 5ce:	98 2b       	or	r25, r24
 5d0:	95 bb       	out	0x15, r25	; 21
	setbit(CTRL,EN);
 5d2:	aa 9a       	sbi	0x15, 2	; 21
	clearbit(CTRL,EN);
 5d4:	aa 98       	cbi	0x15, 2	; 21
	
}
 5d6:	08 95       	ret

000005d8 <wait_lcd>:
void wait_lcd(void){
 5d8:	0f 93       	push	r16
 5da:	1f 93       	push	r17
 5dc:	df 93       	push	r29
 5de:	cf 93       	push	r28
 5e0:	0f 92       	push	r0
 5e2:	cd b7       	in	r28, 0x3d	; 61
 5e4:	de b7       	in	r29, 0x3e	; 62
	while(1){
     	clearbit(CTRL,RS);
		setbit(CTRL,RW);
		temp=read_2Nib();
		
		if(bit_is_clear(temp,7)) break;
 5e6:	8e 01       	movw	r16, r28
 5e8:	0f 5f       	subi	r16, 0xFF	; 255
 5ea:	1f 4f       	sbci	r17, 0xFF	; 255
}
void wait_lcd(void){
	unsigned char temp;
	
	while(1){
     	clearbit(CTRL,RS);
 5ec:	a8 98       	cbi	0x15, 0	; 21
		setbit(CTRL,RW);
 5ee:	a9 9a       	sbi	0x15, 1	; 21
		temp=read_2Nib();
 5f0:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <read_2Nib>
 5f4:	89 83       	std	Y+1, r24	; 0x01
		
		if(bit_is_clear(temp,7)) break;
 5f6:	f8 01       	movw	r30, r16
 5f8:	80 81       	ld	r24, Z
 5fa:	88 23       	and	r24, r24
 5fc:	bc f3       	brlt	.-18     	; 0x5ec <wait_lcd+0x14>
	}
	clearbit(CTRL,RW);
 5fe:	a9 98       	cbi	0x15, 1	; 21
	DDR_DATA=0xFF;
 600:	8f ef       	ldi	r24, 0xFF	; 255
 602:	84 bb       	out	0x14, r24	; 20
	
}
 604:	0f 90       	pop	r0
 606:	cf 91       	pop	r28
 608:	df 91       	pop	r29
 60a:	1f 91       	pop	r17
 60c:	0f 91       	pop	r16
 60e:	08 95       	ret

00000610 <init_lcd>:

void init_lcd(){//uses mode 4 bit
	DDR_CTRL=0xFF;
 610:	8f ef       	ldi	r24, 0xFF	; 255
 612:	84 bb       	out	0x14, r24	; 20
	DDR_DATA=0xFF;
 614:	84 bb       	out	0x14, r24	; 20
	clearbit(CTRL,RS);
 616:	a8 98       	cbi	0x15, 0	; 21
	clearbit(CTRL,RW);
 618:	a9 98       	cbi	0x15, 1	; 21
	clearbit(CTRL,EN);
 61a:	aa 98       	cbi	0x15, 2	; 21
	
//function set	
	setbit(CTRL,EN);
 61c:	aa 9a       	sbi	0x15, 2	; 21
	setbit(DATA_output,5);
 61e:	ad 9a       	sbi	0x15, 5	; 21
	clearbit(CTRL,EN);
 620:	aa 98       	cbi	0x15, 2	; 21
	wait_lcd();
 622:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <wait_lcd>
	write_2Nib(0x28);
 626:	88 e2       	ldi	r24, 0x28	; 40
 628:	0e 94 dd 02 	call	0x5ba	; 0x5ba <write_2Nib>
	wait_lcd();
 62c:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <wait_lcd>
//display on/off control
    write_2Nib(0x0E);
 630:	8e e0       	ldi	r24, 0x0E	; 14
 632:	0e 94 dd 02 	call	0x5ba	; 0x5ba <write_2Nib>
	wait_lcd();
 636:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <wait_lcd>

//entry mode set 
    
    write_2Nib(0x06);
 63a:	86 e0       	ldi	r24, 0x06	; 6
 63c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <write_2Nib>
    wait_lcd();		
 640:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <wait_lcd>
}
 644:	08 95       	ret

00000646 <putchar_lcd>:
void putchar_lcd(unsigned char data){
	
	setbit(CTRL,RS);
 646:	a8 9a       	sbi	0x15, 0	; 21
	write_2Nib(data);
 648:	0e 94 dd 02 	call	0x5ba	; 0x5ba <write_2Nib>
	wait_lcd();
 64c:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <wait_lcd>
}
 650:	08 95       	ret

00000652 <cursor_home>:
void cursor_home(){
	clearbit(CTRL,RS);
 652:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x03);
 654:	83 e0       	ldi	r24, 0x03	; 3
 656:	0e 94 dd 02 	call	0x5ba	; 0x5ba <write_2Nib>
	wait_lcd();
 65a:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <wait_lcd>
}
 65e:	08 95       	ret

00000660 <clear_lcd>:
void clear_lcd(){
	clearbit(CTRL,RS);
 660:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
 662:	81 e0       	ldi	r24, 0x01	; 1
 664:	0e 94 dd 02 	call	0x5ba	; 0x5ba <write_2Nib>
	wait_lcd();
 668:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <wait_lcd>
}
 66c:	08 95       	ret

0000066e <movecursor>:
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
	clearbit(CTRL,RS);
 66e:	a8 98       	cbi	0x15, 0	; 21
	write_2Nib(0x01);
	wait_lcd();
}
void movecursor(uint8_t dong,uint8_t cot){
	uint8_t x;
	x=64*(dong-1)+(cot-1)+0x80;
 670:	82 95       	swap	r24
 672:	88 0f       	add	r24, r24
 674:	88 0f       	add	r24, r24
 676:	80 7c       	andi	r24, 0xC0	; 192
 678:	86 0f       	add	r24, r22
	clearbit(CTRL,RS);
	write_2Nib(x);
 67a:	81 5c       	subi	r24, 0xC1	; 193
 67c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <write_2Nib>
	wait_lcd();
 680:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <wait_lcd>
}
 684:	08 95       	ret

00000686 <count_number>:
int count_number(unsigned int number){
 686:	bc 01       	movw	r22, r24
	int dem=0;
	while(number){
 688:	00 97       	sbiw	r24, 0x00	; 0
 68a:	71 f0       	breq	.+28     	; 0x6a8 <count_number+0x22>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 68c:	20 e0       	ldi	r18, 0x00	; 0
 68e:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
 690:	ea e0       	ldi	r30, 0x0A	; 10
 692:	f0 e0       	ldi	r31, 0x00	; 0
 694:	cb 01       	movw	r24, r22
 696:	bf 01       	movw	r22, r30
 698:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodhi4>
		dem++;
 69c:	2f 5f       	subi	r18, 0xFF	; 255
 69e:	3f 4f       	sbci	r19, 0xFF	; 255
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
	while(number){
 6a0:	61 15       	cp	r22, r1
 6a2:	71 05       	cpc	r23, r1
 6a4:	b9 f7       	brne	.-18     	; 0x694 <count_number+0xe>
 6a6:	02 c0       	rjmp	.+4      	; 0x6ac <count_number+0x26>
	clearbit(CTRL,RS);
	write_2Nib(x);
	wait_lcd();
}
int count_number(unsigned int number){
	int dem=0;
 6a8:	20 e0       	ldi	r18, 0x00	; 0
 6aa:	30 e0       	ldi	r19, 0x00	; 0
	while(number){
		number=number/10;
		dem++;
	}
	return dem;
}
 6ac:	82 2f       	mov	r24, r18
 6ae:	93 2f       	mov	r25, r19
 6b0:	08 95       	ret

000006b2 <printnumber_lcd>:
void printnumber_lcd(unsigned int number){
 6b2:	af 92       	push	r10
 6b4:	bf 92       	push	r11
 6b6:	cf 92       	push	r12
 6b8:	df 92       	push	r13
 6ba:	ef 92       	push	r14
 6bc:	ff 92       	push	r15
 6be:	0f 93       	push	r16
 6c0:	1f 93       	push	r17
 6c2:	cf 93       	push	r28
 6c4:	df 93       	push	r29
 6c6:	e8 2e       	mov	r14, r24
 6c8:	f9 2e       	mov	r15, r25
	int a,n,i,temp;
	n= count_number(number);
 6ca:	0e 94 43 03 	call	0x686	; 0x686 <count_number>
 6ce:	6c 01       	movw	r12, r24
	temp=pow(10,n-1);
 6d0:	bc 01       	movw	r22, r24
 6d2:	61 50       	subi	r22, 0x01	; 1
 6d4:	70 40       	sbci	r23, 0x00	; 0
 6d6:	88 27       	eor	r24, r24
 6d8:	77 fd       	sbrc	r23, 7
 6da:	80 95       	com	r24
 6dc:	98 2f       	mov	r25, r24
 6de:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__floatsisf>
 6e2:	9b 01       	movw	r18, r22
 6e4:	ac 01       	movw	r20, r24
 6e6:	60 e0       	ldi	r22, 0x00	; 0
 6e8:	70 e0       	ldi	r23, 0x00	; 0
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	91 e4       	ldi	r25, 0x41	; 65
 6ee:	0e 94 62 04 	call	0x8c4	; 0x8c4 <pow>
	for(i=0;i<n;i++){
 6f2:	1c 14       	cp	r1, r12
 6f4:	1d 04       	cpc	r1, r13
 6f6:	04 f5       	brge	.+64     	; 0x738 <printnumber_lcd+0x86>
	return dem;
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
 6f8:	0e 94 cb 03 	call	0x796	; 0x796 <__fixsfsi>
 6fc:	eb 01       	movw	r28, r22
	for(i=0;i<n;i++){
 6fe:	00 e0       	ldi	r16, 0x00	; 0
 700:	10 e0       	ldi	r17, 0x00	; 0
		a=number/temp;
		number=number%temp;
		temp=temp/10;
 702:	0f 2e       	mov	r0, r31
 704:	fa e0       	ldi	r31, 0x0A	; 10
 706:	af 2e       	mov	r10, r31
 708:	bb 24       	eor	r11, r11
 70a:	f0 2d       	mov	r31, r0
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
		a=number/temp;
 70c:	8e 2d       	mov	r24, r14
 70e:	9f 2d       	mov	r25, r15
 710:	be 01       	movw	r22, r28
 712:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodhi4>
 716:	26 2f       	mov	r18, r22
		number=number%temp;
 718:	e8 2e       	mov	r14, r24
 71a:	f9 2e       	mov	r15, r25
		temp=temp/10;
 71c:	ce 01       	movw	r24, r28
 71e:	b5 01       	movw	r22, r10
 720:	0e 94 52 07 	call	0xea4	; 0xea4 <__divmodhi4>
 724:	eb 01       	movw	r28, r22
		putchar_lcd(a+48);
 726:	82 2f       	mov	r24, r18
 728:	80 5d       	subi	r24, 0xD0	; 208
 72a:	0e 94 23 03 	call	0x646	; 0x646 <putchar_lcd>
}
void printnumber_lcd(unsigned int number){
	int a,n,i,temp;
	n= count_number(number);
	temp=pow(10,n-1);
	for(i=0;i<n;i++){
 72e:	0f 5f       	subi	r16, 0xFF	; 255
 730:	1f 4f       	sbci	r17, 0xFF	; 255
 732:	0c 15       	cp	r16, r12
 734:	1d 05       	cpc	r17, r13
 736:	54 f3       	brlt	.-44     	; 0x70c <printnumber_lcd+0x5a>
	putchar_lcd(a+48);
	b=number%10;
	putchar_lcd(b+48);
	*/
	
}
 738:	df 91       	pop	r29
 73a:	cf 91       	pop	r28
 73c:	1f 91       	pop	r17
 73e:	0f 91       	pop	r16
 740:	ff 90       	pop	r15
 742:	ef 90       	pop	r14
 744:	df 90       	pop	r13
 746:	cf 90       	pop	r12
 748:	bf 90       	pop	r11
 74a:	af 90       	pop	r10
 74c:	08 95       	ret

0000074e <putstr_lcd>:
putstr_lcd(unsigned char *str, unsigned int lenght){
 74e:	ef 92       	push	r14
 750:	ff 92       	push	r15
 752:	0f 93       	push	r16
 754:	1f 93       	push	r17
 756:	cf 93       	push	r28
 758:	df 93       	push	r29
 75a:	7b 01       	movw	r14, r22
	unsigned int i;
	for(i=0;i<lenght;i++){
 75c:	61 15       	cp	r22, r1
 75e:	71 05       	cpc	r23, r1
 760:	99 f0       	breq	.+38     	; 0x788 <putstr_lcd+0x3a>
 762:	08 2f       	mov	r16, r24
 764:	19 2f       	mov	r17, r25
 766:	c0 e0       	ldi	r28, 0x00	; 0
 768:	d0 e0       	ldi	r29, 0x00	; 0
		if(*(str+i)>0){ 
 76a:	f8 01       	movw	r30, r16
 76c:	81 91       	ld	r24, Z+
 76e:	8f 01       	movw	r16, r30
 770:	88 23       	and	r24, r24
 772:	19 f0       	breq	.+6      	; 0x77a <putstr_lcd+0x2c>
			putchar_lcd(*(str+i));
 774:	0e 94 23 03 	call	0x646	; 0x646 <putchar_lcd>
 778:	03 c0       	rjmp	.+6      	; 0x780 <putstr_lcd+0x32>
			}
		else putchar_lcd(0);	
 77a:	80 e0       	ldi	r24, 0x00	; 0
 77c:	0e 94 23 03 	call	0x646	; 0x646 <putchar_lcd>
	*/
	
}
putstr_lcd(unsigned char *str, unsigned int lenght){
	unsigned int i;
	for(i=0;i<lenght;i++){
 780:	21 96       	adiw	r28, 0x01	; 1
 782:	ce 15       	cp	r28, r14
 784:	df 05       	cpc	r29, r15
 786:	88 f3       	brcs	.-30     	; 0x76a <putstr_lcd+0x1c>
		if(*(str+i)>0){ 
			putchar_lcd(*(str+i));
			}
		else putchar_lcd(0);	
}
}
 788:	df 91       	pop	r29
 78a:	cf 91       	pop	r28
 78c:	1f 91       	pop	r17
 78e:	0f 91       	pop	r16
 790:	ff 90       	pop	r15
 792:	ef 90       	pop	r14
 794:	08 95       	ret

00000796 <__fixsfsi>:
 796:	04 d0       	rcall	.+8      	; 0x7a0 <__fixunssfsi>
 798:	68 94       	set
 79a:	b1 11       	cpse	r27, r1
 79c:	8d c0       	rjmp	.+282    	; 0x8b8 <__fp_szero>
 79e:	08 95       	ret

000007a0 <__fixunssfsi>:
 7a0:	70 d0       	rcall	.+224    	; 0x882 <__fp_splitA>
 7a2:	88 f0       	brcs	.+34     	; 0x7c6 <__fixunssfsi+0x26>
 7a4:	9f 57       	subi	r25, 0x7F	; 127
 7a6:	90 f0       	brcs	.+36     	; 0x7cc <__fixunssfsi+0x2c>
 7a8:	b9 2f       	mov	r27, r25
 7aa:	99 27       	eor	r25, r25
 7ac:	b7 51       	subi	r27, 0x17	; 23
 7ae:	a0 f0       	brcs	.+40     	; 0x7d8 <__fixunssfsi+0x38>
 7b0:	d1 f0       	breq	.+52     	; 0x7e6 <__fixunssfsi+0x46>
 7b2:	66 0f       	add	r22, r22
 7b4:	77 1f       	adc	r23, r23
 7b6:	88 1f       	adc	r24, r24
 7b8:	99 1f       	adc	r25, r25
 7ba:	1a f0       	brmi	.+6      	; 0x7c2 <__fixunssfsi+0x22>
 7bc:	ba 95       	dec	r27
 7be:	c9 f7       	brne	.-14     	; 0x7b2 <__fixunssfsi+0x12>
 7c0:	12 c0       	rjmp	.+36     	; 0x7e6 <__fixunssfsi+0x46>
 7c2:	b1 30       	cpi	r27, 0x01	; 1
 7c4:	81 f0       	breq	.+32     	; 0x7e6 <__fixunssfsi+0x46>
 7c6:	77 d0       	rcall	.+238    	; 0x8b6 <__fp_zero>
 7c8:	b1 e0       	ldi	r27, 0x01	; 1
 7ca:	08 95       	ret
 7cc:	74 c0       	rjmp	.+232    	; 0x8b6 <__fp_zero>
 7ce:	67 2f       	mov	r22, r23
 7d0:	78 2f       	mov	r23, r24
 7d2:	88 27       	eor	r24, r24
 7d4:	b8 5f       	subi	r27, 0xF8	; 248
 7d6:	39 f0       	breq	.+14     	; 0x7e6 <__fixunssfsi+0x46>
 7d8:	b9 3f       	cpi	r27, 0xF9	; 249
 7da:	cc f3       	brlt	.-14     	; 0x7ce <__fixunssfsi+0x2e>
 7dc:	86 95       	lsr	r24
 7de:	77 95       	ror	r23
 7e0:	67 95       	ror	r22
 7e2:	b3 95       	inc	r27
 7e4:	d9 f7       	brne	.-10     	; 0x7dc <__fixunssfsi+0x3c>
 7e6:	3e f4       	brtc	.+14     	; 0x7f6 <__fixunssfsi+0x56>
 7e8:	90 95       	com	r25
 7ea:	80 95       	com	r24
 7ec:	70 95       	com	r23
 7ee:	61 95       	neg	r22
 7f0:	7f 4f       	sbci	r23, 0xFF	; 255
 7f2:	8f 4f       	sbci	r24, 0xFF	; 255
 7f4:	9f 4f       	sbci	r25, 0xFF	; 255
 7f6:	08 95       	ret

000007f8 <__floatunsisf>:
 7f8:	e8 94       	clt
 7fa:	09 c0       	rjmp	.+18     	; 0x80e <__floatsisf+0x12>

000007fc <__floatsisf>:
 7fc:	97 fb       	bst	r25, 7
 7fe:	3e f4       	brtc	.+14     	; 0x80e <__floatsisf+0x12>
 800:	90 95       	com	r25
 802:	80 95       	com	r24
 804:	70 95       	com	r23
 806:	61 95       	neg	r22
 808:	7f 4f       	sbci	r23, 0xFF	; 255
 80a:	8f 4f       	sbci	r24, 0xFF	; 255
 80c:	9f 4f       	sbci	r25, 0xFF	; 255
 80e:	99 23       	and	r25, r25
 810:	a9 f0       	breq	.+42     	; 0x83c <__floatsisf+0x40>
 812:	f9 2f       	mov	r31, r25
 814:	96 e9       	ldi	r25, 0x96	; 150
 816:	bb 27       	eor	r27, r27
 818:	93 95       	inc	r25
 81a:	f6 95       	lsr	r31
 81c:	87 95       	ror	r24
 81e:	77 95       	ror	r23
 820:	67 95       	ror	r22
 822:	b7 95       	ror	r27
 824:	f1 11       	cpse	r31, r1
 826:	f8 cf       	rjmp	.-16     	; 0x818 <__floatsisf+0x1c>
 828:	fa f4       	brpl	.+62     	; 0x868 <__floatsisf+0x6c>
 82a:	bb 0f       	add	r27, r27
 82c:	11 f4       	brne	.+4      	; 0x832 <__floatsisf+0x36>
 82e:	60 ff       	sbrs	r22, 0
 830:	1b c0       	rjmp	.+54     	; 0x868 <__floatsisf+0x6c>
 832:	6f 5f       	subi	r22, 0xFF	; 255
 834:	7f 4f       	sbci	r23, 0xFF	; 255
 836:	8f 4f       	sbci	r24, 0xFF	; 255
 838:	9f 4f       	sbci	r25, 0xFF	; 255
 83a:	16 c0       	rjmp	.+44     	; 0x868 <__floatsisf+0x6c>
 83c:	88 23       	and	r24, r24
 83e:	11 f0       	breq	.+4      	; 0x844 <__floatsisf+0x48>
 840:	96 e9       	ldi	r25, 0x96	; 150
 842:	11 c0       	rjmp	.+34     	; 0x866 <__floatsisf+0x6a>
 844:	77 23       	and	r23, r23
 846:	21 f0       	breq	.+8      	; 0x850 <__floatsisf+0x54>
 848:	9e e8       	ldi	r25, 0x8E	; 142
 84a:	87 2f       	mov	r24, r23
 84c:	76 2f       	mov	r23, r22
 84e:	05 c0       	rjmp	.+10     	; 0x85a <__floatsisf+0x5e>
 850:	66 23       	and	r22, r22
 852:	71 f0       	breq	.+28     	; 0x870 <__floatsisf+0x74>
 854:	96 e8       	ldi	r25, 0x86	; 134
 856:	86 2f       	mov	r24, r22
 858:	70 e0       	ldi	r23, 0x00	; 0
 85a:	60 e0       	ldi	r22, 0x00	; 0
 85c:	2a f0       	brmi	.+10     	; 0x868 <__floatsisf+0x6c>
 85e:	9a 95       	dec	r25
 860:	66 0f       	add	r22, r22
 862:	77 1f       	adc	r23, r23
 864:	88 1f       	adc	r24, r24
 866:	da f7       	brpl	.-10     	; 0x85e <__floatsisf+0x62>
 868:	88 0f       	add	r24, r24
 86a:	96 95       	lsr	r25
 86c:	87 95       	ror	r24
 86e:	97 f9       	bld	r25, 7
 870:	08 95       	ret

00000872 <__fp_split3>:
 872:	57 fd       	sbrc	r21, 7
 874:	90 58       	subi	r25, 0x80	; 128
 876:	44 0f       	add	r20, r20
 878:	55 1f       	adc	r21, r21
 87a:	59 f0       	breq	.+22     	; 0x892 <__fp_splitA+0x10>
 87c:	5f 3f       	cpi	r21, 0xFF	; 255
 87e:	71 f0       	breq	.+28     	; 0x89c <__fp_splitA+0x1a>
 880:	47 95       	ror	r20

00000882 <__fp_splitA>:
 882:	88 0f       	add	r24, r24
 884:	97 fb       	bst	r25, 7
 886:	99 1f       	adc	r25, r25
 888:	61 f0       	breq	.+24     	; 0x8a2 <__fp_splitA+0x20>
 88a:	9f 3f       	cpi	r25, 0xFF	; 255
 88c:	79 f0       	breq	.+30     	; 0x8ac <__fp_splitA+0x2a>
 88e:	87 95       	ror	r24
 890:	08 95       	ret
 892:	12 16       	cp	r1, r18
 894:	13 06       	cpc	r1, r19
 896:	14 06       	cpc	r1, r20
 898:	55 1f       	adc	r21, r21
 89a:	f2 cf       	rjmp	.-28     	; 0x880 <__fp_split3+0xe>
 89c:	46 95       	lsr	r20
 89e:	f1 df       	rcall	.-30     	; 0x882 <__fp_splitA>
 8a0:	08 c0       	rjmp	.+16     	; 0x8b2 <__fp_splitA+0x30>
 8a2:	16 16       	cp	r1, r22
 8a4:	17 06       	cpc	r1, r23
 8a6:	18 06       	cpc	r1, r24
 8a8:	99 1f       	adc	r25, r25
 8aa:	f1 cf       	rjmp	.-30     	; 0x88e <__fp_splitA+0xc>
 8ac:	86 95       	lsr	r24
 8ae:	71 05       	cpc	r23, r1
 8b0:	61 05       	cpc	r22, r1
 8b2:	08 94       	sec
 8b4:	08 95       	ret

000008b6 <__fp_zero>:
 8b6:	e8 94       	clt

000008b8 <__fp_szero>:
 8b8:	bb 27       	eor	r27, r27
 8ba:	66 27       	eor	r22, r22
 8bc:	77 27       	eor	r23, r23
 8be:	cb 01       	movw	r24, r22
 8c0:	97 f9       	bld	r25, 7
 8c2:	08 95       	ret

000008c4 <pow>:
 8c4:	fa 01       	movw	r30, r20
 8c6:	ee 0f       	add	r30, r30
 8c8:	ff 1f       	adc	r31, r31
 8ca:	30 96       	adiw	r30, 0x00	; 0
 8cc:	21 05       	cpc	r18, r1
 8ce:	31 05       	cpc	r19, r1
 8d0:	99 f1       	breq	.+102    	; 0x938 <pow+0x74>
 8d2:	61 15       	cp	r22, r1
 8d4:	71 05       	cpc	r23, r1
 8d6:	61 f4       	brne	.+24     	; 0x8f0 <pow+0x2c>
 8d8:	80 38       	cpi	r24, 0x80	; 128
 8da:	bf e3       	ldi	r27, 0x3F	; 63
 8dc:	9b 07       	cpc	r25, r27
 8de:	49 f1       	breq	.+82     	; 0x932 <pow+0x6e>
 8e0:	68 94       	set
 8e2:	90 38       	cpi	r25, 0x80	; 128
 8e4:	81 05       	cpc	r24, r1
 8e6:	61 f0       	breq	.+24     	; 0x900 <pow+0x3c>
 8e8:	80 38       	cpi	r24, 0x80	; 128
 8ea:	bf ef       	ldi	r27, 0xFF	; 255
 8ec:	9b 07       	cpc	r25, r27
 8ee:	41 f0       	breq	.+16     	; 0x900 <pow+0x3c>
 8f0:	99 23       	and	r25, r25
 8f2:	42 f5       	brpl	.+80     	; 0x944 <pow+0x80>
 8f4:	ff 3f       	cpi	r31, 0xFF	; 255
 8f6:	e1 05       	cpc	r30, r1
 8f8:	31 05       	cpc	r19, r1
 8fa:	21 05       	cpc	r18, r1
 8fc:	11 f1       	breq	.+68     	; 0x942 <pow+0x7e>
 8fe:	e8 94       	clt
 900:	08 94       	sec
 902:	e7 95       	ror	r30
 904:	d9 01       	movw	r26, r18
 906:	aa 23       	and	r26, r26
 908:	29 f4       	brne	.+10     	; 0x914 <pow+0x50>
 90a:	ab 2f       	mov	r26, r27
 90c:	be 2f       	mov	r27, r30
 90e:	f8 5f       	subi	r31, 0xF8	; 248
 910:	d0 f3       	brcs	.-12     	; 0x906 <pow+0x42>
 912:	10 c0       	rjmp	.+32     	; 0x934 <pow+0x70>
 914:	ff 5f       	subi	r31, 0xFF	; 255
 916:	70 f4       	brcc	.+28     	; 0x934 <pow+0x70>
 918:	a6 95       	lsr	r26
 91a:	e0 f7       	brcc	.-8      	; 0x914 <pow+0x50>
 91c:	f7 39       	cpi	r31, 0x97	; 151
 91e:	50 f0       	brcs	.+20     	; 0x934 <pow+0x70>
 920:	19 f0       	breq	.+6      	; 0x928 <pow+0x64>
 922:	ff 3a       	cpi	r31, 0xAF	; 175
 924:	38 f4       	brcc	.+14     	; 0x934 <pow+0x70>
 926:	9f 77       	andi	r25, 0x7F	; 127
 928:	9f 93       	push	r25
 92a:	0c d0       	rcall	.+24     	; 0x944 <pow+0x80>
 92c:	0f 90       	pop	r0
 92e:	07 fc       	sbrc	r0, 7
 930:	90 58       	subi	r25, 0x80	; 128
 932:	08 95       	ret
 934:	3e f0       	brts	.+14     	; 0x944 <pow+0x80>
 936:	49 c0       	rjmp	.+146    	; 0x9ca <__fp_nan>
 938:	60 e0       	ldi	r22, 0x00	; 0
 93a:	70 e0       	ldi	r23, 0x00	; 0
 93c:	80 e8       	ldi	r24, 0x80	; 128
 93e:	9f e3       	ldi	r25, 0x3F	; 63
 940:	08 95       	ret
 942:	4f e7       	ldi	r20, 0x7F	; 127
 944:	9f 77       	andi	r25, 0x7F	; 127
 946:	5f 93       	push	r21
 948:	4f 93       	push	r20
 94a:	3f 93       	push	r19
 94c:	2f 93       	push	r18
 94e:	a7 d0       	rcall	.+334    	; 0xa9e <log>
 950:	2f 91       	pop	r18
 952:	3f 91       	pop	r19
 954:	4f 91       	pop	r20
 956:	5f 91       	pop	r21
 958:	15 d1       	rcall	.+554    	; 0xb84 <__mulsf3>
 95a:	05 c0       	rjmp	.+10     	; 0x966 <exp>
 95c:	19 f4       	brne	.+6      	; 0x964 <pow+0xa0>
 95e:	0e f0       	brts	.+2      	; 0x962 <pow+0x9e>
 960:	2e c0       	rjmp	.+92     	; 0x9be <__fp_inf>
 962:	a9 cf       	rjmp	.-174    	; 0x8b6 <__fp_zero>
 964:	32 c0       	rjmp	.+100    	; 0x9ca <__fp_nan>

00000966 <exp>:
 966:	8d df       	rcall	.-230    	; 0x882 <__fp_splitA>
 968:	c8 f3       	brcs	.-14     	; 0x95c <pow+0x98>
 96a:	96 38       	cpi	r25, 0x86	; 134
 96c:	c0 f7       	brcc	.-16     	; 0x95e <pow+0x9a>
 96e:	07 f8       	bld	r0, 7
 970:	0f 92       	push	r0
 972:	e8 94       	clt
 974:	2b e3       	ldi	r18, 0x3B	; 59
 976:	3a ea       	ldi	r19, 0xAA	; 170
 978:	48 eb       	ldi	r20, 0xB8	; 184
 97a:	5f e7       	ldi	r21, 0x7F	; 127
 97c:	11 d1       	rcall	.+546    	; 0xba0 <__mulsf3_pse>
 97e:	0f 92       	push	r0
 980:	0f 92       	push	r0
 982:	0f 92       	push	r0
 984:	4d b7       	in	r20, 0x3d	; 61
 986:	5e b7       	in	r21, 0x3e	; 62
 988:	0f 92       	push	r0
 98a:	c9 d0       	rcall	.+402    	; 0xb1e <modf>
 98c:	e4 e5       	ldi	r30, 0x54	; 84
 98e:	f0 e0       	ldi	r31, 0x00	; 0
 990:	1f d0       	rcall	.+62     	; 0x9d0 <__fp_powser>
 992:	4f 91       	pop	r20
 994:	5f 91       	pop	r21
 996:	ef 91       	pop	r30
 998:	ff 91       	pop	r31
 99a:	e5 95       	asr	r30
 99c:	ee 1f       	adc	r30, r30
 99e:	ff 1f       	adc	r31, r31
 9a0:	49 f0       	breq	.+18     	; 0x9b4 <exp+0x4e>
 9a2:	fe 57       	subi	r31, 0x7E	; 126
 9a4:	e0 68       	ori	r30, 0x80	; 128
 9a6:	44 27       	eor	r20, r20
 9a8:	ee 0f       	add	r30, r30
 9aa:	44 1f       	adc	r20, r20
 9ac:	fa 95       	dec	r31
 9ae:	e1 f7       	brne	.-8      	; 0x9a8 <exp+0x42>
 9b0:	41 95       	neg	r20
 9b2:	55 0b       	sbc	r21, r21
 9b4:	3b d0       	rcall	.+118    	; 0xa2c <ldexp>
 9b6:	0f 90       	pop	r0
 9b8:	07 fe       	sbrs	r0, 7
 9ba:	2f c0       	rjmp	.+94     	; 0xa1a <inverse>
 9bc:	08 95       	ret

000009be <__fp_inf>:
 9be:	97 f9       	bld	r25, 7
 9c0:	9f 67       	ori	r25, 0x7F	; 127
 9c2:	80 e8       	ldi	r24, 0x80	; 128
 9c4:	70 e0       	ldi	r23, 0x00	; 0
 9c6:	60 e0       	ldi	r22, 0x00	; 0
 9c8:	08 95       	ret

000009ca <__fp_nan>:
 9ca:	9f ef       	ldi	r25, 0xFF	; 255
 9cc:	80 ec       	ldi	r24, 0xC0	; 192
 9ce:	08 95       	ret

000009d0 <__fp_powser>:
 9d0:	df 93       	push	r29
 9d2:	cf 93       	push	r28
 9d4:	1f 93       	push	r17
 9d6:	0f 93       	push	r16
 9d8:	ff 92       	push	r15
 9da:	ef 92       	push	r14
 9dc:	df 92       	push	r13
 9de:	7b 01       	movw	r14, r22
 9e0:	8c 01       	movw	r16, r24
 9e2:	68 94       	set
 9e4:	05 c0       	rjmp	.+10     	; 0x9f0 <__fp_powser+0x20>
 9e6:	da 2e       	mov	r13, r26
 9e8:	ef 01       	movw	r28, r30
 9ea:	d8 d0       	rcall	.+432    	; 0xb9c <__mulsf3x>
 9ec:	fe 01       	movw	r30, r28
 9ee:	e8 94       	clt
 9f0:	a5 91       	lpm	r26, Z+
 9f2:	25 91       	lpm	r18, Z+
 9f4:	35 91       	lpm	r19, Z+
 9f6:	45 91       	lpm	r20, Z+
 9f8:	55 91       	lpm	r21, Z+
 9fa:	ae f3       	brts	.-22     	; 0x9e6 <__fp_powser+0x16>
 9fc:	ef 01       	movw	r28, r30
 9fe:	37 d1       	rcall	.+622    	; 0xc6e <__addsf3x>
 a00:	fe 01       	movw	r30, r28
 a02:	97 01       	movw	r18, r14
 a04:	a8 01       	movw	r20, r16
 a06:	da 94       	dec	r13
 a08:	79 f7       	brne	.-34     	; 0x9e8 <__fp_powser+0x18>
 a0a:	df 90       	pop	r13
 a0c:	ef 90       	pop	r14
 a0e:	ff 90       	pop	r15
 a10:	0f 91       	pop	r16
 a12:	1f 91       	pop	r17
 a14:	cf 91       	pop	r28
 a16:	df 91       	pop	r29
 a18:	08 95       	ret

00000a1a <inverse>:
 a1a:	9b 01       	movw	r18, r22
 a1c:	ac 01       	movw	r20, r24
 a1e:	60 e0       	ldi	r22, 0x00	; 0
 a20:	70 e0       	ldi	r23, 0x00	; 0
 a22:	80 e8       	ldi	r24, 0x80	; 128
 a24:	9f e3       	ldi	r25, 0x3F	; 63
 a26:	76 c1       	rjmp	.+748    	; 0xd14 <__divsf3>
 a28:	ca cf       	rjmp	.-108    	; 0x9be <__fp_inf>
 a2a:	dc c1       	rjmp	.+952    	; 0xde4 <__fp_mpack>

00000a2c <ldexp>:
 a2c:	2a df       	rcall	.-428    	; 0x882 <__fp_splitA>
 a2e:	e8 f3       	brcs	.-6      	; 0xa2a <inverse+0x10>
 a30:	99 23       	and	r25, r25
 a32:	d9 f3       	breq	.-10     	; 0xa2a <inverse+0x10>
 a34:	94 0f       	add	r25, r20
 a36:	51 1d       	adc	r21, r1
 a38:	bb f3       	brvs	.-18     	; 0xa28 <inverse+0xe>
 a3a:	91 50       	subi	r25, 0x01	; 1
 a3c:	50 40       	sbci	r21, 0x00	; 0
 a3e:	94 f0       	brlt	.+36     	; 0xa64 <ldexp+0x38>
 a40:	59 f0       	breq	.+22     	; 0xa58 <ldexp+0x2c>
 a42:	88 23       	and	r24, r24
 a44:	32 f0       	brmi	.+12     	; 0xa52 <ldexp+0x26>
 a46:	66 0f       	add	r22, r22
 a48:	77 1f       	adc	r23, r23
 a4a:	88 1f       	adc	r24, r24
 a4c:	91 50       	subi	r25, 0x01	; 1
 a4e:	50 40       	sbci	r21, 0x00	; 0
 a50:	c1 f7       	brne	.-16     	; 0xa42 <ldexp+0x16>
 a52:	9e 3f       	cpi	r25, 0xFE	; 254
 a54:	51 05       	cpc	r21, r1
 a56:	44 f7       	brge	.-48     	; 0xa28 <inverse+0xe>
 a58:	88 0f       	add	r24, r24
 a5a:	91 1d       	adc	r25, r1
 a5c:	96 95       	lsr	r25
 a5e:	87 95       	ror	r24
 a60:	97 f9       	bld	r25, 7
 a62:	08 95       	ret
 a64:	5f 3f       	cpi	r21, 0xFF	; 255
 a66:	ac f0       	brlt	.+42     	; 0xa92 <ldexp+0x66>
 a68:	98 3e       	cpi	r25, 0xE8	; 232
 a6a:	9c f0       	brlt	.+38     	; 0xa92 <ldexp+0x66>
 a6c:	bb 27       	eor	r27, r27
 a6e:	86 95       	lsr	r24
 a70:	77 95       	ror	r23
 a72:	67 95       	ror	r22
 a74:	b7 95       	ror	r27
 a76:	08 f4       	brcc	.+2      	; 0xa7a <ldexp+0x4e>
 a78:	b1 60       	ori	r27, 0x01	; 1
 a7a:	93 95       	inc	r25
 a7c:	c1 f7       	brne	.-16     	; 0xa6e <ldexp+0x42>
 a7e:	bb 0f       	add	r27, r27
 a80:	58 f7       	brcc	.-42     	; 0xa58 <ldexp+0x2c>
 a82:	11 f4       	brne	.+4      	; 0xa88 <ldexp+0x5c>
 a84:	60 ff       	sbrs	r22, 0
 a86:	e8 cf       	rjmp	.-48     	; 0xa58 <ldexp+0x2c>
 a88:	6f 5f       	subi	r22, 0xFF	; 255
 a8a:	7f 4f       	sbci	r23, 0xFF	; 255
 a8c:	8f 4f       	sbci	r24, 0xFF	; 255
 a8e:	9f 4f       	sbci	r25, 0xFF	; 255
 a90:	e3 cf       	rjmp	.-58     	; 0xa58 <ldexp+0x2c>
 a92:	12 cf       	rjmp	.-476    	; 0x8b8 <__fp_szero>
 a94:	0e f0       	brts	.+2      	; 0xa98 <ldexp+0x6c>
 a96:	a6 c1       	rjmp	.+844    	; 0xde4 <__fp_mpack>
 a98:	98 cf       	rjmp	.-208    	; 0x9ca <__fp_nan>
 a9a:	68 94       	set
 a9c:	90 cf       	rjmp	.-224    	; 0x9be <__fp_inf>

00000a9e <log>:
 a9e:	f1 de       	rcall	.-542    	; 0x882 <__fp_splitA>
 aa0:	c8 f3       	brcs	.-14     	; 0xa94 <ldexp+0x68>
 aa2:	99 23       	and	r25, r25
 aa4:	d1 f3       	breq	.-12     	; 0xa9a <ldexp+0x6e>
 aa6:	c6 f3       	brts	.-16     	; 0xa98 <ldexp+0x6c>
 aa8:	df 93       	push	r29
 aaa:	cf 93       	push	r28
 aac:	1f 93       	push	r17
 aae:	0f 93       	push	r16
 ab0:	ff 92       	push	r15
 ab2:	c9 2f       	mov	r28, r25
 ab4:	dd 27       	eor	r29, r29
 ab6:	88 23       	and	r24, r24
 ab8:	2a f0       	brmi	.+10     	; 0xac4 <log+0x26>
 aba:	21 97       	sbiw	r28, 0x01	; 1
 abc:	66 0f       	add	r22, r22
 abe:	77 1f       	adc	r23, r23
 ac0:	88 1f       	adc	r24, r24
 ac2:	da f7       	brpl	.-10     	; 0xaba <log+0x1c>
 ac4:	20 e0       	ldi	r18, 0x00	; 0
 ac6:	30 e0       	ldi	r19, 0x00	; 0
 ac8:	40 e8       	ldi	r20, 0x80	; 128
 aca:	5f eb       	ldi	r21, 0xBF	; 191
 acc:	9f e3       	ldi	r25, 0x3F	; 63
 ace:	88 39       	cpi	r24, 0x98	; 152
 ad0:	20 f0       	brcs	.+8      	; 0xada <log+0x3c>
 ad2:	80 3e       	cpi	r24, 0xE0	; 224
 ad4:	30 f0       	brcs	.+12     	; 0xae2 <log+0x44>
 ad6:	21 96       	adiw	r28, 0x01	; 1
 ad8:	8f 77       	andi	r24, 0x7F	; 127
 ada:	b8 d0       	rcall	.+368    	; 0xc4c <__addsf3>
 adc:	ec e7       	ldi	r30, 0x7C	; 124
 ade:	f0 e0       	ldi	r31, 0x00	; 0
 ae0:	03 c0       	rjmp	.+6      	; 0xae8 <log+0x4a>
 ae2:	b4 d0       	rcall	.+360    	; 0xc4c <__addsf3>
 ae4:	e9 ea       	ldi	r30, 0xA9	; 169
 ae6:	f0 e0       	ldi	r31, 0x00	; 0
 ae8:	73 df       	rcall	.-282    	; 0x9d0 <__fp_powser>
 aea:	8b 01       	movw	r16, r22
 aec:	be 01       	movw	r22, r28
 aee:	ec 01       	movw	r28, r24
 af0:	fb 2e       	mov	r15, r27
 af2:	6f 57       	subi	r22, 0x7F	; 127
 af4:	71 09       	sbc	r23, r1
 af6:	75 95       	asr	r23
 af8:	77 1f       	adc	r23, r23
 afa:	88 0b       	sbc	r24, r24
 afc:	99 0b       	sbc	r25, r25
 afe:	7e de       	rcall	.-772    	; 0x7fc <__floatsisf>
 b00:	28 e1       	ldi	r18, 0x18	; 24
 b02:	32 e7       	ldi	r19, 0x72	; 114
 b04:	41 e3       	ldi	r20, 0x31	; 49
 b06:	5f e3       	ldi	r21, 0x3F	; 63
 b08:	49 d0       	rcall	.+146    	; 0xb9c <__mulsf3x>
 b0a:	af 2d       	mov	r26, r15
 b0c:	98 01       	movw	r18, r16
 b0e:	ae 01       	movw	r20, r28
 b10:	ff 90       	pop	r15
 b12:	0f 91       	pop	r16
 b14:	1f 91       	pop	r17
 b16:	cf 91       	pop	r28
 b18:	df 91       	pop	r29
 b1a:	a9 d0       	rcall	.+338    	; 0xc6e <__addsf3x>
 b1c:	7f c1       	rjmp	.+766    	; 0xe1c <__fp_round>

00000b1e <modf>:
 b1e:	fa 01       	movw	r30, r20
 b20:	dc 01       	movw	r26, r24
 b22:	aa 0f       	add	r26, r26
 b24:	bb 1f       	adc	r27, r27
 b26:	9b 01       	movw	r18, r22
 b28:	ac 01       	movw	r20, r24
 b2a:	bf 57       	subi	r27, 0x7F	; 127
 b2c:	28 f4       	brcc	.+10     	; 0xb38 <modf+0x1a>
 b2e:	22 27       	eor	r18, r18
 b30:	33 27       	eor	r19, r19
 b32:	44 27       	eor	r20, r20
 b34:	50 78       	andi	r21, 0x80	; 128
 b36:	1f c0       	rjmp	.+62     	; 0xb76 <modf+0x58>
 b38:	b7 51       	subi	r27, 0x17	; 23
 b3a:	88 f4       	brcc	.+34     	; 0xb5e <modf+0x40>
 b3c:	ab 2f       	mov	r26, r27
 b3e:	00 24       	eor	r0, r0
 b40:	46 95       	lsr	r20
 b42:	37 95       	ror	r19
 b44:	27 95       	ror	r18
 b46:	01 1c       	adc	r0, r1
 b48:	a3 95       	inc	r26
 b4a:	d2 f3       	brmi	.-12     	; 0xb40 <modf+0x22>
 b4c:	00 20       	and	r0, r0
 b4e:	69 f0       	breq	.+26     	; 0xb6a <modf+0x4c>
 b50:	22 0f       	add	r18, r18
 b52:	33 1f       	adc	r19, r19
 b54:	44 1f       	adc	r20, r20
 b56:	b3 95       	inc	r27
 b58:	da f3       	brmi	.-10     	; 0xb50 <modf+0x32>
 b5a:	0d d0       	rcall	.+26     	; 0xb76 <modf+0x58>
 b5c:	76 c0       	rjmp	.+236    	; 0xc4a <__subsf3>
 b5e:	61 30       	cpi	r22, 0x01	; 1
 b60:	71 05       	cpc	r23, r1
 b62:	a0 e8       	ldi	r26, 0x80	; 128
 b64:	8a 07       	cpc	r24, r26
 b66:	b9 46       	sbci	r27, 0x69	; 105
 b68:	30 f4       	brcc	.+12     	; 0xb76 <modf+0x58>
 b6a:	9b 01       	movw	r18, r22
 b6c:	ac 01       	movw	r20, r24
 b6e:	66 27       	eor	r22, r22
 b70:	77 27       	eor	r23, r23
 b72:	88 27       	eor	r24, r24
 b74:	90 78       	andi	r25, 0x80	; 128
 b76:	30 96       	adiw	r30, 0x00	; 0
 b78:	21 f0       	breq	.+8      	; 0xb82 <modf+0x64>
 b7a:	20 83       	st	Z, r18
 b7c:	31 83       	std	Z+1, r19	; 0x01
 b7e:	42 83       	std	Z+2, r20	; 0x02
 b80:	53 83       	std	Z+3, r21	; 0x03
 b82:	08 95       	ret

00000b84 <__mulsf3>:
 b84:	0b d0       	rcall	.+22     	; 0xb9c <__mulsf3x>
 b86:	4a c1       	rjmp	.+660    	; 0xe1c <__fp_round>
 b88:	3b d1       	rcall	.+630    	; 0xe00 <__fp_pscA>
 b8a:	28 f0       	brcs	.+10     	; 0xb96 <__mulsf3+0x12>
 b8c:	40 d1       	rcall	.+640    	; 0xe0e <__fp_pscB>
 b8e:	18 f0       	brcs	.+6      	; 0xb96 <__mulsf3+0x12>
 b90:	95 23       	and	r25, r21
 b92:	09 f0       	breq	.+2      	; 0xb96 <__mulsf3+0x12>
 b94:	14 cf       	rjmp	.-472    	; 0x9be <__fp_inf>
 b96:	19 cf       	rjmp	.-462    	; 0x9ca <__fp_nan>
 b98:	11 24       	eor	r1, r1
 b9a:	8e ce       	rjmp	.-740    	; 0x8b8 <__fp_szero>

00000b9c <__mulsf3x>:
 b9c:	6a de       	rcall	.-812    	; 0x872 <__fp_split3>
 b9e:	a0 f3       	brcs	.-24     	; 0xb88 <__mulsf3+0x4>

00000ba0 <__mulsf3_pse>:
 ba0:	95 9f       	mul	r25, r21
 ba2:	d1 f3       	breq	.-12     	; 0xb98 <__mulsf3+0x14>
 ba4:	95 0f       	add	r25, r21
 ba6:	50 e0       	ldi	r21, 0x00	; 0
 ba8:	55 1f       	adc	r21, r21
 baa:	62 9f       	mul	r22, r18
 bac:	f0 01       	movw	r30, r0
 bae:	72 9f       	mul	r23, r18
 bb0:	bb 27       	eor	r27, r27
 bb2:	f0 0d       	add	r31, r0
 bb4:	b1 1d       	adc	r27, r1
 bb6:	63 9f       	mul	r22, r19
 bb8:	aa 27       	eor	r26, r26
 bba:	f0 0d       	add	r31, r0
 bbc:	b1 1d       	adc	r27, r1
 bbe:	aa 1f       	adc	r26, r26
 bc0:	64 9f       	mul	r22, r20
 bc2:	66 27       	eor	r22, r22
 bc4:	b0 0d       	add	r27, r0
 bc6:	a1 1d       	adc	r26, r1
 bc8:	66 1f       	adc	r22, r22
 bca:	82 9f       	mul	r24, r18
 bcc:	22 27       	eor	r18, r18
 bce:	b0 0d       	add	r27, r0
 bd0:	a1 1d       	adc	r26, r1
 bd2:	62 1f       	adc	r22, r18
 bd4:	73 9f       	mul	r23, r19
 bd6:	b0 0d       	add	r27, r0
 bd8:	a1 1d       	adc	r26, r1
 bda:	62 1f       	adc	r22, r18
 bdc:	83 9f       	mul	r24, r19
 bde:	a0 0d       	add	r26, r0
 be0:	61 1d       	adc	r22, r1
 be2:	22 1f       	adc	r18, r18
 be4:	74 9f       	mul	r23, r20
 be6:	33 27       	eor	r19, r19
 be8:	a0 0d       	add	r26, r0
 bea:	61 1d       	adc	r22, r1
 bec:	23 1f       	adc	r18, r19
 bee:	84 9f       	mul	r24, r20
 bf0:	60 0d       	add	r22, r0
 bf2:	21 1d       	adc	r18, r1
 bf4:	82 2f       	mov	r24, r18
 bf6:	76 2f       	mov	r23, r22
 bf8:	6a 2f       	mov	r22, r26
 bfa:	11 24       	eor	r1, r1
 bfc:	9f 57       	subi	r25, 0x7F	; 127
 bfe:	50 40       	sbci	r21, 0x00	; 0
 c00:	8a f0       	brmi	.+34     	; 0xc24 <__mulsf3_pse+0x84>
 c02:	e1 f0       	breq	.+56     	; 0xc3c <__mulsf3_pse+0x9c>
 c04:	88 23       	and	r24, r24
 c06:	4a f0       	brmi	.+18     	; 0xc1a <__mulsf3_pse+0x7a>
 c08:	ee 0f       	add	r30, r30
 c0a:	ff 1f       	adc	r31, r31
 c0c:	bb 1f       	adc	r27, r27
 c0e:	66 1f       	adc	r22, r22
 c10:	77 1f       	adc	r23, r23
 c12:	88 1f       	adc	r24, r24
 c14:	91 50       	subi	r25, 0x01	; 1
 c16:	50 40       	sbci	r21, 0x00	; 0
 c18:	a9 f7       	brne	.-22     	; 0xc04 <__mulsf3_pse+0x64>
 c1a:	9e 3f       	cpi	r25, 0xFE	; 254
 c1c:	51 05       	cpc	r21, r1
 c1e:	70 f0       	brcs	.+28     	; 0xc3c <__mulsf3_pse+0x9c>
 c20:	ce ce       	rjmp	.-612    	; 0x9be <__fp_inf>
 c22:	4a ce       	rjmp	.-876    	; 0x8b8 <__fp_szero>
 c24:	5f 3f       	cpi	r21, 0xFF	; 255
 c26:	ec f3       	brlt	.-6      	; 0xc22 <__mulsf3_pse+0x82>
 c28:	98 3e       	cpi	r25, 0xE8	; 232
 c2a:	dc f3       	brlt	.-10     	; 0xc22 <__mulsf3_pse+0x82>
 c2c:	86 95       	lsr	r24
 c2e:	77 95       	ror	r23
 c30:	67 95       	ror	r22
 c32:	b7 95       	ror	r27
 c34:	f7 95       	ror	r31
 c36:	e7 95       	ror	r30
 c38:	9f 5f       	subi	r25, 0xFF	; 255
 c3a:	c1 f7       	brne	.-16     	; 0xc2c <__mulsf3_pse+0x8c>
 c3c:	fe 2b       	or	r31, r30
 c3e:	88 0f       	add	r24, r24
 c40:	91 1d       	adc	r25, r1
 c42:	96 95       	lsr	r25
 c44:	87 95       	ror	r24
 c46:	97 f9       	bld	r25, 7
 c48:	08 95       	ret

00000c4a <__subsf3>:
 c4a:	50 58       	subi	r21, 0x80	; 128

00000c4c <__addsf3>:
 c4c:	bb 27       	eor	r27, r27
 c4e:	aa 27       	eor	r26, r26
 c50:	0e d0       	rcall	.+28     	; 0xc6e <__addsf3x>
 c52:	e4 c0       	rjmp	.+456    	; 0xe1c <__fp_round>
 c54:	d5 d0       	rcall	.+426    	; 0xe00 <__fp_pscA>
 c56:	30 f0       	brcs	.+12     	; 0xc64 <__addsf3+0x18>
 c58:	da d0       	rcall	.+436    	; 0xe0e <__fp_pscB>
 c5a:	20 f0       	brcs	.+8      	; 0xc64 <__addsf3+0x18>
 c5c:	31 f4       	brne	.+12     	; 0xc6a <__addsf3+0x1e>
 c5e:	9f 3f       	cpi	r25, 0xFF	; 255
 c60:	11 f4       	brne	.+4      	; 0xc66 <__addsf3+0x1a>
 c62:	1e f4       	brtc	.+6      	; 0xc6a <__addsf3+0x1e>
 c64:	b2 ce       	rjmp	.-668    	; 0x9ca <__fp_nan>
 c66:	0e f4       	brtc	.+2      	; 0xc6a <__addsf3+0x1e>
 c68:	e0 95       	com	r30
 c6a:	e7 fb       	bst	r30, 7
 c6c:	a8 ce       	rjmp	.-688    	; 0x9be <__fp_inf>

00000c6e <__addsf3x>:
 c6e:	e9 2f       	mov	r30, r25
 c70:	00 de       	rcall	.-1024   	; 0x872 <__fp_split3>
 c72:	80 f3       	brcs	.-32     	; 0xc54 <__addsf3+0x8>
 c74:	ba 17       	cp	r27, r26
 c76:	62 07       	cpc	r22, r18
 c78:	73 07       	cpc	r23, r19
 c7a:	84 07       	cpc	r24, r20
 c7c:	95 07       	cpc	r25, r21
 c7e:	18 f0       	brcs	.+6      	; 0xc86 <__addsf3x+0x18>
 c80:	71 f4       	brne	.+28     	; 0xc9e <__addsf3x+0x30>
 c82:	9e f5       	brtc	.+102    	; 0xcea <__addsf3x+0x7c>
 c84:	18 ce       	rjmp	.-976    	; 0x8b6 <__fp_zero>
 c86:	0e f4       	brtc	.+2      	; 0xc8a <__addsf3x+0x1c>
 c88:	e0 95       	com	r30
 c8a:	0b 2e       	mov	r0, r27
 c8c:	ba 2f       	mov	r27, r26
 c8e:	a0 2d       	mov	r26, r0
 c90:	0b 01       	movw	r0, r22
 c92:	b9 01       	movw	r22, r18
 c94:	90 01       	movw	r18, r0
 c96:	0c 01       	movw	r0, r24
 c98:	ca 01       	movw	r24, r20
 c9a:	a0 01       	movw	r20, r0
 c9c:	11 24       	eor	r1, r1
 c9e:	ff 27       	eor	r31, r31
 ca0:	59 1b       	sub	r21, r25
 ca2:	99 f0       	breq	.+38     	; 0xcca <__addsf3x+0x5c>
 ca4:	59 3f       	cpi	r21, 0xF9	; 249
 ca6:	50 f4       	brcc	.+20     	; 0xcbc <__addsf3x+0x4e>
 ca8:	50 3e       	cpi	r21, 0xE0	; 224
 caa:	68 f1       	brcs	.+90     	; 0xd06 <__addsf3x+0x98>
 cac:	1a 16       	cp	r1, r26
 cae:	f0 40       	sbci	r31, 0x00	; 0
 cb0:	a2 2f       	mov	r26, r18
 cb2:	23 2f       	mov	r18, r19
 cb4:	34 2f       	mov	r19, r20
 cb6:	44 27       	eor	r20, r20
 cb8:	58 5f       	subi	r21, 0xF8	; 248
 cba:	f3 cf       	rjmp	.-26     	; 0xca2 <__addsf3x+0x34>
 cbc:	46 95       	lsr	r20
 cbe:	37 95       	ror	r19
 cc0:	27 95       	ror	r18
 cc2:	a7 95       	ror	r26
 cc4:	f0 40       	sbci	r31, 0x00	; 0
 cc6:	53 95       	inc	r21
 cc8:	c9 f7       	brne	.-14     	; 0xcbc <__addsf3x+0x4e>
 cca:	7e f4       	brtc	.+30     	; 0xcea <__addsf3x+0x7c>
 ccc:	1f 16       	cp	r1, r31
 cce:	ba 0b       	sbc	r27, r26
 cd0:	62 0b       	sbc	r22, r18
 cd2:	73 0b       	sbc	r23, r19
 cd4:	84 0b       	sbc	r24, r20
 cd6:	ba f0       	brmi	.+46     	; 0xd06 <__addsf3x+0x98>
 cd8:	91 50       	subi	r25, 0x01	; 1
 cda:	a1 f0       	breq	.+40     	; 0xd04 <__addsf3x+0x96>
 cdc:	ff 0f       	add	r31, r31
 cde:	bb 1f       	adc	r27, r27
 ce0:	66 1f       	adc	r22, r22
 ce2:	77 1f       	adc	r23, r23
 ce4:	88 1f       	adc	r24, r24
 ce6:	c2 f7       	brpl	.-16     	; 0xcd8 <__addsf3x+0x6a>
 ce8:	0e c0       	rjmp	.+28     	; 0xd06 <__addsf3x+0x98>
 cea:	ba 0f       	add	r27, r26
 cec:	62 1f       	adc	r22, r18
 cee:	73 1f       	adc	r23, r19
 cf0:	84 1f       	adc	r24, r20
 cf2:	48 f4       	brcc	.+18     	; 0xd06 <__addsf3x+0x98>
 cf4:	87 95       	ror	r24
 cf6:	77 95       	ror	r23
 cf8:	67 95       	ror	r22
 cfa:	b7 95       	ror	r27
 cfc:	f7 95       	ror	r31
 cfe:	9e 3f       	cpi	r25, 0xFE	; 254
 d00:	08 f0       	brcs	.+2      	; 0xd04 <__addsf3x+0x96>
 d02:	b3 cf       	rjmp	.-154    	; 0xc6a <__addsf3+0x1e>
 d04:	93 95       	inc	r25
 d06:	88 0f       	add	r24, r24
 d08:	08 f0       	brcs	.+2      	; 0xd0c <__addsf3x+0x9e>
 d0a:	99 27       	eor	r25, r25
 d0c:	ee 0f       	add	r30, r30
 d0e:	97 95       	ror	r25
 d10:	87 95       	ror	r24
 d12:	08 95       	ret

00000d14 <__divsf3>:
 d14:	0c d0       	rcall	.+24     	; 0xd2e <__divsf3x>
 d16:	82 c0       	rjmp	.+260    	; 0xe1c <__fp_round>
 d18:	7a d0       	rcall	.+244    	; 0xe0e <__fp_pscB>
 d1a:	40 f0       	brcs	.+16     	; 0xd2c <__divsf3+0x18>
 d1c:	71 d0       	rcall	.+226    	; 0xe00 <__fp_pscA>
 d1e:	30 f0       	brcs	.+12     	; 0xd2c <__divsf3+0x18>
 d20:	21 f4       	brne	.+8      	; 0xd2a <__divsf3+0x16>
 d22:	5f 3f       	cpi	r21, 0xFF	; 255
 d24:	19 f0       	breq	.+6      	; 0xd2c <__divsf3+0x18>
 d26:	4b ce       	rjmp	.-874    	; 0x9be <__fp_inf>
 d28:	51 11       	cpse	r21, r1
 d2a:	c6 cd       	rjmp	.-1140   	; 0x8b8 <__fp_szero>
 d2c:	4e ce       	rjmp	.-868    	; 0x9ca <__fp_nan>

00000d2e <__divsf3x>:
 d2e:	a1 dd       	rcall	.-1214   	; 0x872 <__fp_split3>
 d30:	98 f3       	brcs	.-26     	; 0xd18 <__divsf3+0x4>

00000d32 <__divsf3_pse>:
 d32:	99 23       	and	r25, r25
 d34:	c9 f3       	breq	.-14     	; 0xd28 <__divsf3+0x14>
 d36:	55 23       	and	r21, r21
 d38:	b1 f3       	breq	.-20     	; 0xd26 <__divsf3+0x12>
 d3a:	95 1b       	sub	r25, r21
 d3c:	55 0b       	sbc	r21, r21
 d3e:	bb 27       	eor	r27, r27
 d40:	aa 27       	eor	r26, r26
 d42:	62 17       	cp	r22, r18
 d44:	73 07       	cpc	r23, r19
 d46:	84 07       	cpc	r24, r20
 d48:	38 f0       	brcs	.+14     	; 0xd58 <__divsf3_pse+0x26>
 d4a:	9f 5f       	subi	r25, 0xFF	; 255
 d4c:	5f 4f       	sbci	r21, 0xFF	; 255
 d4e:	22 0f       	add	r18, r18
 d50:	33 1f       	adc	r19, r19
 d52:	44 1f       	adc	r20, r20
 d54:	aa 1f       	adc	r26, r26
 d56:	a9 f3       	breq	.-22     	; 0xd42 <__divsf3_pse+0x10>
 d58:	33 d0       	rcall	.+102    	; 0xdc0 <__divsf3_pse+0x8e>
 d5a:	0e 2e       	mov	r0, r30
 d5c:	3a f0       	brmi	.+14     	; 0xd6c <__divsf3_pse+0x3a>
 d5e:	e0 e8       	ldi	r30, 0x80	; 128
 d60:	30 d0       	rcall	.+96     	; 0xdc2 <__divsf3_pse+0x90>
 d62:	91 50       	subi	r25, 0x01	; 1
 d64:	50 40       	sbci	r21, 0x00	; 0
 d66:	e6 95       	lsr	r30
 d68:	00 1c       	adc	r0, r0
 d6a:	ca f7       	brpl	.-14     	; 0xd5e <__divsf3_pse+0x2c>
 d6c:	29 d0       	rcall	.+82     	; 0xdc0 <__divsf3_pse+0x8e>
 d6e:	fe 2f       	mov	r31, r30
 d70:	27 d0       	rcall	.+78     	; 0xdc0 <__divsf3_pse+0x8e>
 d72:	66 0f       	add	r22, r22
 d74:	77 1f       	adc	r23, r23
 d76:	88 1f       	adc	r24, r24
 d78:	bb 1f       	adc	r27, r27
 d7a:	26 17       	cp	r18, r22
 d7c:	37 07       	cpc	r19, r23
 d7e:	48 07       	cpc	r20, r24
 d80:	ab 07       	cpc	r26, r27
 d82:	b0 e8       	ldi	r27, 0x80	; 128
 d84:	09 f0       	breq	.+2      	; 0xd88 <__divsf3_pse+0x56>
 d86:	bb 0b       	sbc	r27, r27
 d88:	80 2d       	mov	r24, r0
 d8a:	bf 01       	movw	r22, r30
 d8c:	ff 27       	eor	r31, r31
 d8e:	93 58       	subi	r25, 0x83	; 131
 d90:	5f 4f       	sbci	r21, 0xFF	; 255
 d92:	2a f0       	brmi	.+10     	; 0xd9e <__divsf3_pse+0x6c>
 d94:	9e 3f       	cpi	r25, 0xFE	; 254
 d96:	51 05       	cpc	r21, r1
 d98:	68 f0       	brcs	.+26     	; 0xdb4 <__divsf3_pse+0x82>
 d9a:	11 ce       	rjmp	.-990    	; 0x9be <__fp_inf>
 d9c:	8d cd       	rjmp	.-1254   	; 0x8b8 <__fp_szero>
 d9e:	5f 3f       	cpi	r21, 0xFF	; 255
 da0:	ec f3       	brlt	.-6      	; 0xd9c <__divsf3_pse+0x6a>
 da2:	98 3e       	cpi	r25, 0xE8	; 232
 da4:	dc f3       	brlt	.-10     	; 0xd9c <__divsf3_pse+0x6a>
 da6:	86 95       	lsr	r24
 da8:	77 95       	ror	r23
 daa:	67 95       	ror	r22
 dac:	b7 95       	ror	r27
 dae:	f7 95       	ror	r31
 db0:	9f 5f       	subi	r25, 0xFF	; 255
 db2:	c9 f7       	brne	.-14     	; 0xda6 <__divsf3_pse+0x74>
 db4:	88 0f       	add	r24, r24
 db6:	91 1d       	adc	r25, r1
 db8:	96 95       	lsr	r25
 dba:	87 95       	ror	r24
 dbc:	97 f9       	bld	r25, 7
 dbe:	08 95       	ret
 dc0:	e1 e0       	ldi	r30, 0x01	; 1
 dc2:	66 0f       	add	r22, r22
 dc4:	77 1f       	adc	r23, r23
 dc6:	88 1f       	adc	r24, r24
 dc8:	bb 1f       	adc	r27, r27
 dca:	62 17       	cp	r22, r18
 dcc:	73 07       	cpc	r23, r19
 dce:	84 07       	cpc	r24, r20
 dd0:	ba 07       	cpc	r27, r26
 dd2:	20 f0       	brcs	.+8      	; 0xddc <__divsf3_pse+0xaa>
 dd4:	62 1b       	sub	r22, r18
 dd6:	73 0b       	sbc	r23, r19
 dd8:	84 0b       	sbc	r24, r20
 dda:	ba 0b       	sbc	r27, r26
 ddc:	ee 1f       	adc	r30, r30
 dde:	88 f7       	brcc	.-30     	; 0xdc2 <__divsf3_pse+0x90>
 de0:	e0 95       	com	r30
 de2:	08 95       	ret

00000de4 <__fp_mpack>:
 de4:	9f 3f       	cpi	r25, 0xFF	; 255
 de6:	31 f0       	breq	.+12     	; 0xdf4 <__fp_mpack_finite+0xc>

00000de8 <__fp_mpack_finite>:
 de8:	91 50       	subi	r25, 0x01	; 1
 dea:	20 f4       	brcc	.+8      	; 0xdf4 <__fp_mpack_finite+0xc>
 dec:	87 95       	ror	r24
 dee:	77 95       	ror	r23
 df0:	67 95       	ror	r22
 df2:	b7 95       	ror	r27
 df4:	88 0f       	add	r24, r24
 df6:	91 1d       	adc	r25, r1
 df8:	96 95       	lsr	r25
 dfa:	87 95       	ror	r24
 dfc:	97 f9       	bld	r25, 7
 dfe:	08 95       	ret

00000e00 <__fp_pscA>:
 e00:	00 24       	eor	r0, r0
 e02:	0a 94       	dec	r0
 e04:	16 16       	cp	r1, r22
 e06:	17 06       	cpc	r1, r23
 e08:	18 06       	cpc	r1, r24
 e0a:	09 06       	cpc	r0, r25
 e0c:	08 95       	ret

00000e0e <__fp_pscB>:
 e0e:	00 24       	eor	r0, r0
 e10:	0a 94       	dec	r0
 e12:	12 16       	cp	r1, r18
 e14:	13 06       	cpc	r1, r19
 e16:	14 06       	cpc	r1, r20
 e18:	05 06       	cpc	r0, r21
 e1a:	08 95       	ret

00000e1c <__fp_round>:
 e1c:	09 2e       	mov	r0, r25
 e1e:	03 94       	inc	r0
 e20:	00 0c       	add	r0, r0
 e22:	11 f4       	brne	.+4      	; 0xe28 <__fp_round+0xc>
 e24:	88 23       	and	r24, r24
 e26:	52 f0       	brmi	.+20     	; 0xe3c <__fp_round+0x20>
 e28:	bb 0f       	add	r27, r27
 e2a:	40 f4       	brcc	.+16     	; 0xe3c <__fp_round+0x20>
 e2c:	bf 2b       	or	r27, r31
 e2e:	11 f4       	brne	.+4      	; 0xe34 <__fp_round+0x18>
 e30:	60 ff       	sbrs	r22, 0
 e32:	04 c0       	rjmp	.+8      	; 0xe3c <__fp_round+0x20>
 e34:	6f 5f       	subi	r22, 0xFF	; 255
 e36:	7f 4f       	sbci	r23, 0xFF	; 255
 e38:	8f 4f       	sbci	r24, 0xFF	; 255
 e3a:	9f 4f       	sbci	r25, 0xFF	; 255
 e3c:	08 95       	ret

00000e3e <__mulsi3>:
 e3e:	62 9f       	mul	r22, r18
 e40:	d0 01       	movw	r26, r0
 e42:	73 9f       	mul	r23, r19
 e44:	f0 01       	movw	r30, r0
 e46:	82 9f       	mul	r24, r18
 e48:	e0 0d       	add	r30, r0
 e4a:	f1 1d       	adc	r31, r1
 e4c:	64 9f       	mul	r22, r20
 e4e:	e0 0d       	add	r30, r0
 e50:	f1 1d       	adc	r31, r1
 e52:	92 9f       	mul	r25, r18
 e54:	f0 0d       	add	r31, r0
 e56:	83 9f       	mul	r24, r19
 e58:	f0 0d       	add	r31, r0
 e5a:	74 9f       	mul	r23, r20
 e5c:	f0 0d       	add	r31, r0
 e5e:	65 9f       	mul	r22, r21
 e60:	f0 0d       	add	r31, r0
 e62:	99 27       	eor	r25, r25
 e64:	72 9f       	mul	r23, r18
 e66:	b0 0d       	add	r27, r0
 e68:	e1 1d       	adc	r30, r1
 e6a:	f9 1f       	adc	r31, r25
 e6c:	63 9f       	mul	r22, r19
 e6e:	b0 0d       	add	r27, r0
 e70:	e1 1d       	adc	r30, r1
 e72:	f9 1f       	adc	r31, r25
 e74:	bd 01       	movw	r22, r26
 e76:	cf 01       	movw	r24, r30
 e78:	11 24       	eor	r1, r1
 e7a:	08 95       	ret

00000e7c <__udivmodhi4>:
 e7c:	aa 1b       	sub	r26, r26
 e7e:	bb 1b       	sub	r27, r27
 e80:	51 e1       	ldi	r21, 0x11	; 17
 e82:	07 c0       	rjmp	.+14     	; 0xe92 <__udivmodhi4_ep>

00000e84 <__udivmodhi4_loop>:
 e84:	aa 1f       	adc	r26, r26
 e86:	bb 1f       	adc	r27, r27
 e88:	a6 17       	cp	r26, r22
 e8a:	b7 07       	cpc	r27, r23
 e8c:	10 f0       	brcs	.+4      	; 0xe92 <__udivmodhi4_ep>
 e8e:	a6 1b       	sub	r26, r22
 e90:	b7 0b       	sbc	r27, r23

00000e92 <__udivmodhi4_ep>:
 e92:	88 1f       	adc	r24, r24
 e94:	99 1f       	adc	r25, r25
 e96:	5a 95       	dec	r21
 e98:	a9 f7       	brne	.-22     	; 0xe84 <__udivmodhi4_loop>
 e9a:	80 95       	com	r24
 e9c:	90 95       	com	r25
 e9e:	bc 01       	movw	r22, r24
 ea0:	cd 01       	movw	r24, r26
 ea2:	08 95       	ret

00000ea4 <__divmodhi4>:
 ea4:	97 fb       	bst	r25, 7
 ea6:	09 2e       	mov	r0, r25
 ea8:	07 26       	eor	r0, r23
 eaa:	0a d0       	rcall	.+20     	; 0xec0 <__divmodhi4_neg1>
 eac:	77 fd       	sbrc	r23, 7
 eae:	04 d0       	rcall	.+8      	; 0xeb8 <__divmodhi4_neg2>
 eb0:	e5 df       	rcall	.-54     	; 0xe7c <__udivmodhi4>
 eb2:	06 d0       	rcall	.+12     	; 0xec0 <__divmodhi4_neg1>
 eb4:	00 20       	and	r0, r0
 eb6:	1a f4       	brpl	.+6      	; 0xebe <__divmodhi4_exit>

00000eb8 <__divmodhi4_neg2>:
 eb8:	70 95       	com	r23
 eba:	61 95       	neg	r22
 ebc:	7f 4f       	sbci	r23, 0xFF	; 255

00000ebe <__divmodhi4_exit>:
 ebe:	08 95       	ret

00000ec0 <__divmodhi4_neg1>:
 ec0:	f6 f7       	brtc	.-4      	; 0xebe <__divmodhi4_exit>
 ec2:	90 95       	com	r25
 ec4:	81 95       	neg	r24
 ec6:	9f 4f       	sbci	r25, 0xFF	; 255
 ec8:	08 95       	ret

00000eca <__divmodsi4>:
 eca:	97 fb       	bst	r25, 7
 ecc:	09 2e       	mov	r0, r25
 ece:	05 26       	eor	r0, r21
 ed0:	0e d0       	rcall	.+28     	; 0xeee <__divmodsi4_neg1>
 ed2:	57 fd       	sbrc	r21, 7
 ed4:	04 d0       	rcall	.+8      	; 0xede <__divmodsi4_neg2>
 ed6:	14 d0       	rcall	.+40     	; 0xf00 <__udivmodsi4>
 ed8:	0a d0       	rcall	.+20     	; 0xeee <__divmodsi4_neg1>
 eda:	00 1c       	adc	r0, r0
 edc:	38 f4       	brcc	.+14     	; 0xeec <__divmodsi4_exit>

00000ede <__divmodsi4_neg2>:
 ede:	50 95       	com	r21
 ee0:	40 95       	com	r20
 ee2:	30 95       	com	r19
 ee4:	21 95       	neg	r18
 ee6:	3f 4f       	sbci	r19, 0xFF	; 255
 ee8:	4f 4f       	sbci	r20, 0xFF	; 255
 eea:	5f 4f       	sbci	r21, 0xFF	; 255

00000eec <__divmodsi4_exit>:
 eec:	08 95       	ret

00000eee <__divmodsi4_neg1>:
 eee:	f6 f7       	brtc	.-4      	; 0xeec <__divmodsi4_exit>
 ef0:	90 95       	com	r25
 ef2:	80 95       	com	r24
 ef4:	70 95       	com	r23
 ef6:	61 95       	neg	r22
 ef8:	7f 4f       	sbci	r23, 0xFF	; 255
 efa:	8f 4f       	sbci	r24, 0xFF	; 255
 efc:	9f 4f       	sbci	r25, 0xFF	; 255
 efe:	08 95       	ret

00000f00 <__udivmodsi4>:
 f00:	a1 e2       	ldi	r26, 0x21	; 33
 f02:	1a 2e       	mov	r1, r26
 f04:	aa 1b       	sub	r26, r26
 f06:	bb 1b       	sub	r27, r27
 f08:	fd 01       	movw	r30, r26
 f0a:	0d c0       	rjmp	.+26     	; 0xf26 <__udivmodsi4_ep>

00000f0c <__udivmodsi4_loop>:
 f0c:	aa 1f       	adc	r26, r26
 f0e:	bb 1f       	adc	r27, r27
 f10:	ee 1f       	adc	r30, r30
 f12:	ff 1f       	adc	r31, r31
 f14:	a2 17       	cp	r26, r18
 f16:	b3 07       	cpc	r27, r19
 f18:	e4 07       	cpc	r30, r20
 f1a:	f5 07       	cpc	r31, r21
 f1c:	20 f0       	brcs	.+8      	; 0xf26 <__udivmodsi4_ep>
 f1e:	a2 1b       	sub	r26, r18
 f20:	b3 0b       	sbc	r27, r19
 f22:	e4 0b       	sbc	r30, r20
 f24:	f5 0b       	sbc	r31, r21

00000f26 <__udivmodsi4_ep>:
 f26:	66 1f       	adc	r22, r22
 f28:	77 1f       	adc	r23, r23
 f2a:	88 1f       	adc	r24, r24
 f2c:	99 1f       	adc	r25, r25
 f2e:	1a 94       	dec	r1
 f30:	69 f7       	brne	.-38     	; 0xf0c <__udivmodsi4_loop>
 f32:	60 95       	com	r22
 f34:	70 95       	com	r23
 f36:	80 95       	com	r24
 f38:	90 95       	com	r25
 f3a:	9b 01       	movw	r18, r22
 f3c:	ac 01       	movw	r20, r24
 f3e:	bd 01       	movw	r22, r26
 f40:	cf 01       	movw	r24, r30
 f42:	08 95       	ret

00000f44 <_exit>:
 f44:	f8 94       	cli

00000f46 <__stop_program>:
 f46:	ff cf       	rjmp	.-2      	; 0xf46 <__stop_program>
